******************************************
*** Random Testing baronCardEffect() ***
****************************************
numPlayer: 706
player: 296
random seed: 809

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 882
player: 88
random seed: 93

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 487
player: 155
random seed: 826

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 589
player: 111
random seed: 32

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 333
player: 70
random seed: 584

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 738
player: 654
random seed: 117

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 537
player: 90
random seed: 92

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 621
player: 406
random seed: 347

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 344
player: 121
random seed: 577

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 893
player: 64
random seed: 694

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 844
player: 724
random seed: 427

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 208
player: 157
random seed: 387

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 824
player: 117
random seed: 831

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 913
player: 534
random seed: 966

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 811
player: 137
random seed: 672

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 515
player: 133
random seed: 53

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 480
player: 240
random seed: 388

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 855
player: 559
random seed: 32

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 109
player: 46
random seed: 802

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 798
player: 522
random seed: 741

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 335
player: 36
random seed: 967

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 746
player: 454
random seed: 36

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 37
player: 24
random seed: 952

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 718
player: 77
random seed: 482

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 477
player: 154
random seed: 310

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 730
player: 532
random seed: 272

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 791
player: 127
random seed: 320

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 356
player: 162
random seed: 353

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 780
player: 101
random seed: 549

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 427
player: 286
random seed: 155

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 199
player: 37
random seed: 68

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 159
player: 54
random seed: 370

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 666
player: 437
random seed: 312

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 78
player: 40
random seed: 555

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 134
player: 102
random seed: 6

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 601
player: 243
random seed: 797

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 627
player: 598
random seed: 494

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 493
player: 163
random seed: 949

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 776
player: 229
random seed: 354

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 86
player: 19
random seed: 153

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 435
player: 296
random seed: 182

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 275
player: 257
random seed: 952

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 867
player: 700
random seed: 771

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 708
player: 366
random seed: 234

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 280
player: 150
random seed: 697

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 963
player: 869
random seed: 16

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 359
player: 256
random seed: 891

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 906
player: 196
random seed: 682

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 276
player: 107
random seed: 243

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 909
player: 185
random seed: 286

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 245
player: 175
random seed: 740

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 165
player: 75
random seed: 353

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 662
player: 367
random seed: 457

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 350
player: 160
random seed: 270

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 790
player: 361
random seed: 720

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 281
player: 241
random seed: 480

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 441
player: 420
random seed: 676

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 387
player: 203
random seed: 736

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 624
player: 303
random seed: 241

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 239
player: 65
random seed: 459

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 562
player: 85
random seed: 95

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 764
player: 130
random seed: 226

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 423
player: 385
random seed: 765

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 347
player: 207
random seed: 155

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 331
player: 258
random seed: 39

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 752
player: 250
random seed: 963

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 725
player: 218
random seed: 406

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 979
player: 944
random seed: 908

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 935
player: 238
random seed: 484

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 143
player: 16
random seed: 937

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 504
player: 6
random seed: 41

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 729
player: 710
random seed: 886

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 924
player: 472
random seed: 852

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 456
player: 306
random seed: 719

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 946
player: 381
random seed: 675

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 784
player: 625
random seed: 483

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 144
player: 89
random seed: 514

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 823
player: 548
random seed: 642

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 699
player: 610
random seed: 400

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 817
player: 296
random seed: 694

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 334
player: 30
random seed: 570

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 390
player: 274
random seed: 320

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 531
player: 16
random seed: 828

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 899
player: 830
random seed: 266

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 920
player: 291
random seed: 454

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 996
player: 183
random seed: 101

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 385
player: 315
random seed: 955

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 508
player: 255
random seed: 657

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 300
player: 70
random seed: 342

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 603
player: 589
random seed: 587

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 542
player: 328
random seed: 763

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 21
player: 11
random seed: 877

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 211
player: 120
random seed: 880

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 852
player: 481
random seed: 969

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 940
player: 444
random seed: 532

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 401
player: 311
random seed: 457

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 359
player: 266
random seed: 155

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 790
player: 158
random seed: 570

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 601
player: 256
random seed: 19

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 364
player: 287
random seed: 25

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 77
player: 41
random seed: 536

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 989
player: 503
random seed: 651

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 618
player: 10
random seed: 751

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 917
player: 439
random seed: 455

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 271
player: 27
random seed: 946

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 631
player: 127
random seed: 92

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 419
player: 22
random seed: 680

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 121
player: 74
random seed: 64

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 109
player: 23
random seed: 92

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 136
player: 117
random seed: 147

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 210
player: 106
random seed: 639

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 272
player: 68
random seed: 932

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 749
player: 303
random seed: 128

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 364
player: 225
random seed: 622

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 349
player: 150
random seed: 25

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 99
player: 64
random seed: 828

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 377
player: 343
random seed: 501

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 512
player: 368
random seed: 882

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 277
player: 122
random seed: 146

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 664
player: 515
random seed: 349

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 138
player: 100
random seed: 319

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 461
player: 431
random seed: 511

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 69
player: 4
random seed: 427

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 344
player: 177
random seed: 92

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 990
player: 484
random seed: 282

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 710
player: 291
random seed: 442

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 94
player: 79
random seed: 734

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 994
player: 832
random seed: 504

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 967
player: 720
random seed: 394

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 752
player: 47
random seed: 38

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 755
player: 450
random seed: 648

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 885
player: 292
random seed: 535

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 551
player: 330
random seed: 217

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 377
player: 350
random seed: 808

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 810
player: 45
random seed: 437

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 347
player: 96
random seed: 499

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 456
player: 93
random seed: 153

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 174
player: 54
random seed: 427

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 506
player: 57
random seed: 473

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 326
player: 79
random seed: 321

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 810
player: 319
random seed: 734

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 556
player: 393
random seed: 282

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 334
player: 111
random seed: 553

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 482
player: 181
random seed: 268

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 970
player: 782
random seed: 755

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 176
player: 63
random seed: 601

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 905
player: 184
random seed: 45

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 884
player: 289
random seed: 917

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 737
player: 102
random seed: 158

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 15
player: 10
random seed: 203

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 973
player: 962
random seed: 607

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 557
player: 70
random seed: 467

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 558
player: 175
random seed: 285

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 629
player: 620
random seed: 325

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 393
player: 206
random seed: 158

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 926
player: 170
random seed: 371

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 334
player: 1
random seed: 122

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 156
player: 143
random seed: 817

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 214
player: 47
random seed: 243

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 23
player: 1
random seed: 562

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 806
player: 569
random seed: 531

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 281
player: 59
random seed: 340

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 355
player: 122
random seed: 881

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 418
player: 210
random seed: 492

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 385
player: 241
random seed: 843

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 937
player: 727
random seed: 135

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 286
player: 82
random seed: 500

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 544
player: 56
random seed: 659

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 852
player: 338
random seed: 19

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 751
player: 676
random seed: 243

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 501
player: 246
random seed: 406

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 190
player: 0
random seed: 133

****************************
*** Testing choice1 == 0 ***
****************************
estate card found!!


estate card found!!



*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 5 to 6 ***
Test Failed. Hand Count: 5

*** Check that the player gained 1 estate card from 2 to 3 ***
Test Failed. Estate Count: 2

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 2 to 1 ***
Test Passed. Estate Count: 1

*** Check we gained 4 coins from 3 to 7
Test Passed. Coins: 7

*** Check we decreased hand count from 5 to 4
Test Passed. Player Hand Count: 4

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 5 to 6 ***
Test Failed. Hand Count: 4

*** Check that the player gained 1 estate card from 2 to 3 ***
Test Failed. Estate Count: 1

*** Check we gained 4 coins from 3 to 7
Test Passed. Coins: 7

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 101
player: 16
random seed: 220

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 395
player: 316
random seed: 534

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 510
player: 358
random seed: 396

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 881
player: 837
random seed: 998

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 968
player: 855
random seed: 325

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 619
player: 177
random seed: 868

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 953
player: 88
random seed: 272

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 559
player: 399
random seed: 928

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 907
player: 590
random seed: 609

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 563
player: 154
random seed: 279

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 815
player: 708
random seed: 747

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 673
player: 274
random seed: 302

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 350
player: 273
random seed: 278

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 84
player: 43
random seed: 823

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 662
player: 346
random seed: 466

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 834
player: 666
random seed: 142

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 237
player: 63
random seed: 845

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 626
player: 603
random seed: 404

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 500
player: 294
random seed: 951

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 139
player: 66
random seed: 290

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 253
player: 160
random seed: 177

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 316
player: 14
random seed: 464

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 142
player: 3
random seed: 286

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 726
player: 475
random seed: 729

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 445
player: 317
random seed: 92

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 609
player: 387
random seed: 820

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 640
player: 160
random seed: 171

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 183
player: 36
random seed: 296

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 603
player: 533
random seed: 558

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 910
player: 609
random seed: 634

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 777
player: 19
random seed: 421

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 702
player: 524
random seed: 848

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 475
player: 263
random seed: 805

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 360
player: 290
random seed: 678

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 84
player: 51
random seed: 768

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 526
player: 165
random seed: 657

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 961
player: 523
random seed: 718

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 384
player: 381
random seed: 419

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 198
player: 75
random seed: 960

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 435
player: 18
random seed: 727

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 73
player: 56
random seed: 781

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 349
player: 319
random seed: 691

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 827
player: 48
random seed: 935

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 416
player: 261
random seed: 166

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 707
player: 95
random seed: 790

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 680
player: 68
random seed: 825

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 941
player: 301
random seed: 480

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 55
player: 33
random seed: 823

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 653
player: 469
random seed: 988

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 902
player: 460
random seed: 160

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 688
player: 675
random seed: 467

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 812
player: 594
random seed: 2

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 434
player: 430
random seed: 939

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 122
player: 24
random seed: 107

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 680
player: 251
random seed: 860

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 355
player: 149
random seed: 990

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 124
player: 39
random seed: 186

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 545
player: 81
random seed: 955

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 146
player: 37
random seed: 142

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 876
player: 194
random seed: 528

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 702
player: 341
random seed: 675

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 854
player: 648
random seed: 360

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 716
player: 48
random seed: 171

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 300
player: 90
random seed: 984

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 325
player: 291
random seed: 954

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 48
player: 26
random seed: 236

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 209
player: 96
random seed: 211

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 992
player: 743
random seed: 732

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 879
player: 562
random seed: 732

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 638
player: 282
random seed: 173

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 92
player: 0
random seed: 518

****************************
*** Testing choice1 == 0 ***
****************************
estate card found!!



*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 5 to 6 ***
Test Failed. Hand Count: 5

*** Check that the player gained 1 estate card from 1 to 2 ***
Test Failed. Estate Count: 1

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 1 to 0 ***
Test Passed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Passed. Coins: 8

*** Check we decreased hand count from 5 to 4
Test Passed. Player Hand Count: 4

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 5 to 6 ***
Test Failed. Hand Count: 4

*** Check that the player gained 1 estate card from 1 to 2 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Passed. Coins: 8

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 266
player: 119
random seed: 520

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 876
player: 826
random seed: 410

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 754
player: 270
random seed: 643

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 742
player: 444
random seed: 387

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 447
player: 38
random seed: 228

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 895
player: 845
random seed: 212

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 460
player: 151
random seed: 796

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 844
player: 822
random seed: 863

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 245
player: 104
random seed: 707

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 99
player: 40
random seed: 912

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 645
player: 118
random seed: 813

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 476
player: 404
random seed: 932

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 435
player: 93
random seed: 812

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 805
player: 191
random seed: 467

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 505
player: 399
random seed: 477

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 365
player: 6
random seed: 994

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 549
player: 133
random seed: 559

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 427
player: 210
random seed: 284

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 899
player: 6
random seed: 95

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 896
player: 279
random seed: 993

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 911
player: 49
random seed: 121

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 388
player: 202
random seed: 811

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 864
player: 387
random seed: 734

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 190
player: 44
random seed: 515

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 991
player: 221
random seed: 268

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 882
player: 750
random seed: 477

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 800
player: 627
random seed: 672

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 859
player: 580
random seed: 908

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 394
player: 79
random seed: 96

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 314
player: 263
random seed: 927

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 616
player: 99
random seed: 494

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 494
player: 50
random seed: 939

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 466
player: 440
random seed: 578

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 939
player: 269
random seed: 461

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 909
player: 753
random seed: 729

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 470
player: 342
random seed: 498

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 129
player: 117
random seed: 947

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 549
player: 269
random seed: 384

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 771
player: 740
random seed: 51

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 474
player: 232
random seed: 68

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 114
player: 4
random seed: 117

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 135
player: 71
random seed: 908

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 602
player: 487
random seed: 118

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 814
player: 412
random seed: 164

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 866
player: 513
random seed: 131

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 663
player: 124
random seed: 179

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 902
player: 30
random seed: 27

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 582
player: 486
random seed: 888

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 967
player: 267
random seed: 150

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 21
player: 2
random seed: 462

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 984
player: 334
random seed: 229

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 829
player: 194
random seed: 748

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 740
player: 643
random seed: 690

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 211
player: 162
random seed: 945

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 598
player: 406
random seed: 602

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 111
player: 88
random seed: 586

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 796
player: 319
random seed: 24

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 870
player: 725
random seed: 901

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 228
player: 134
random seed: 666

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 913
player: 773
random seed: 52

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 762
player: 704
random seed: 29

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 569
player: 504
random seed: 509

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 620
player: 451
random seed: 486

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 697
player: 544
random seed: 960

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 590
player: 63
random seed: 296

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 89
player: 86
random seed: 874

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 177
player: 100
random seed: 756

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 372
player: 274
random seed: 422

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 112
player: 16
random seed: 603

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 710
player: 366
random seed: 337

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 993
player: 313
random seed: 252

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 707
player: 646
random seed: 587

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 40
player: 25
random seed: 852

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 697
player: 518
random seed: 432

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 976
player: 436
random seed: 223

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 972
player: 648
random seed: 577

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 143
player: 14
random seed: 7

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 244
player: 180
random seed: 511

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 637
player: 467
random seed: 782

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 947
player: 590
random seed: 352

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 559
player: 94
random seed: 216

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 311
player: 31
random seed: 513

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 992
player: 871
random seed: 638

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 348
player: 321
random seed: 512

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 379
player: 374
random seed: 978

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 582
player: 284
random seed: 640

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 47
player: 0
random seed: 805

****************************
*** Testing choice1 == 0 ***
****************************
estate card found!!



*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 5 to 6 ***
Test Failed. Hand Count: 5

*** Check that the player gained 1 estate card from 1 to 2 ***
Test Failed. Estate Count: 1

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 1 to 0 ***
Test Failed. Estate Count: 1

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 5 to 4
Test Failed. Player Hand Count: 5

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 5 to 6 ***
Test Failed. Hand Count: 5

*** Check that the player gained 1 estate card from 1 to 2 ***
Test Failed. Estate Count: 1

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 982
player: 314
random seed: 644

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 925
player: 586
random seed: 22

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 609
player: 440
random seed: 667

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 143
player: 67
random seed: 837

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 265
player: 239
random seed: 663

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 853
player: 438
random seed: 441

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 566
player: 312
random seed: 736

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 43
player: 36
random seed: 841

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 640
player: 236
random seed: 74

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 280
player: 49
random seed: 232

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 600
player: 351
random seed: 740

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 544
player: 141
random seed: 397

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 701
player: 260
random seed: 725

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 795
player: 460
random seed: 137

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 262
player: 60
random seed: 338

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 857
player: 347
random seed: 786

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 917
player: 31
random seed: 130

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 816
player: 123
random seed: 357

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 694
player: 55
random seed: 841

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 374
player: 87
random seed: 542

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 448
player: 367
random seed: 39

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 51
player: 23
random seed: 302

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 398
player: 263
random seed: 363

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 88
player: 10
random seed: 415

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 882
player: 855
random seed: 752

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 117
player: 14
random seed: 701

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 758
player: 502
random seed: 739

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 333
player: 223
random seed: 772

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 869
player: 160
random seed: 708

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 813
player: 108
random seed: 868

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 681
player: 543
random seed: 297

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 320
player: 152
random seed: 781

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 909
player: 77
random seed: 672

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 215
player: 26
random seed: 828

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 623
player: 169
random seed: 419

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 975
player: 440
random seed: 820

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 152
player: 73
random seed: 264

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 580
player: 379
random seed: 205

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 260
player: 93
random seed: 179

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 734
player: 717
random seed: 673

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 479
player: 215
random seed: 42

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 471
player: 202
random seed: 145

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 265
player: 183
random seed: 24

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 75
player: 73
random seed: 785

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 526
player: 391
random seed: 663

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 153
player: 136
random seed: 566

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 659
player: 522
random seed: 66

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 376
player: 348
random seed: 464

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 599
player: 488
random seed: 401

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 903
player: 700
random seed: 335

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 631
player: 211
random seed: 168

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 743
player: 694
random seed: 239

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 717
player: 4
random seed: 642

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 261
player: 56
random seed: 306

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 690
player: 118
random seed: 816

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 651
player: 375
random seed: 38

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 734
player: 247
random seed: 238

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 992
player: 139
random seed: 474

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 434
player: 406
random seed: 564

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 840
player: 447
random seed: 981

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 565
player: 254
random seed: 713

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 987
player: 955
random seed: 708

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 396
player: 231
random seed: 647

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 268
player: 125
random seed: 841

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 358
player: 307
random seed: 64

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 928
player: 749
random seed: 251

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 785
player: 66
random seed: 799

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 316
player: 194
random seed: 377

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 218
player: 148
random seed: 296

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 171
player: 130
random seed: 95

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 540
player: 276
random seed: 161

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 107
player: 19
random seed: 799

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 23
player: 8
random seed: 329

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 550
player: 436
random seed: 908

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 689
player: 131
random seed: 916

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 676
player: 384
random seed: 203

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 540
player: 359
random seed: 668

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 887
player: 326
random seed: 704

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 520
player: 493
random seed: 734

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 661
player: 356
random seed: 882

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 33
player: 26
random seed: 1000

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 160
player: 77
random seed: 10

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 500
player: 68
random seed: 646

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 130
player: 38
random seed: 543

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 206
player: 165
random seed: 227

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 685
player: 8
random seed: 409

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 420
player: 172
random seed: 883

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 587
player: 549
random seed: 406

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 56
player: 30
random seed: 835

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 358
player: 8
random seed: 252

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 400
player: 122
random seed: 986

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 716
player: 30
random seed: 152

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 502
player: 281
random seed: 679

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 954
player: 643
random seed: 249

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 487
player: 63
random seed: 13

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 930
player: 154
random seed: 587

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 345
player: 192
random seed: 598

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 644
player: 258
random seed: 767

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 76
player: 46
random seed: 1

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 400
player: 392
random seed: 123

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 52
player: 14
random seed: 896

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 950
player: 851
random seed: 568

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 302
player: 207
random seed: 392

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 488
player: 343
random seed: 774

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 28
player: 11
random seed: 92

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 914
player: 300
random seed: 118

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 280
player: 244
random seed: 119

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 400
player: 287
random seed: 325

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 485
player: 389
random seed: 385

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 463
player: 167
random seed: 649

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 795
player: 526
random seed: 577

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 393
player: 182
random seed: 898

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 725
player: 605
random seed: 485

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 998
player: 644
random seed: 150

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 131
player: 79
random seed: 329

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 479
player: 125
random seed: 832

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 145
player: 67
random seed: 962

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 937
player: 495
random seed: 875

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 779
player: 200
random seed: 515

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 826
player: 634
random seed: 662

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 633
player: 125
random seed: 235

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 435
player: 340
random seed: 218

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 345
player: 297
random seed: 261

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 876
player: 61
random seed: 220

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 463
player: 376
random seed: 457

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 528
player: 332
random seed: 904

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 821
player: 305
random seed: 743

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 534
player: 499
random seed: 412

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 652
player: 636
random seed: 821

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 674
player: 174
random seed: 328

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 183
player: 21
random seed: 555

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 715
player: 155
random seed: 391

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 422
player: 248
random seed: 800

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 109
player: 83
random seed: 291

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 586
player: 4
random seed: 109

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 584
player: 469
random seed: 665

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 48
player: 44
random seed: 368

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 486
player: 383
random seed: 755

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 343
player: 30
random seed: 783

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 310
player: 121
random seed: 450

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 758
player: 277
random seed: 616

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 864
player: 725
random seed: 827

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 96
player: 14
random seed: 661

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 422
player: 75
random seed: 634

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 650
player: 60
random seed: 558

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 621
player: 455
random seed: 577

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 898
player: 290
random seed: 953

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 617
player: 46
random seed: 240

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 571
player: 443
random seed: 973

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 944
player: 603
random seed: 971

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 410
player: 327
random seed: 673

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 714
player: 316
random seed: 494

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 178
player: 160
random seed: 848

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 825
player: 29
random seed: 872

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 561
player: 275
random seed: 412

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 589
player: 545
random seed: 394

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 882
player: 357
random seed: 172

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 843
player: 581
random seed: 627

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 741
player: 668
random seed: 873

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 692
player: 552
random seed: 515

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 935
player: 276
random seed: 27

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 438
player: 205
random seed: 708

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 811
player: 96
random seed: 141

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 616
player: 116
random seed: 346

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 223
player: 81
random seed: 385

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 344
player: 159
random seed: 155

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 178
player: 159
random seed: 984

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 667
player: 157
random seed: 798

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 113
player: 6
random seed: 75

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 967
player: 253
random seed: 194

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 427
player: 186
random seed: 307

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 63
player: 55
random seed: 474

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 866
player: 76
random seed: 993

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 790
player: 716
random seed: 74

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 594
player: 245
random seed: 77

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 727
player: 176
random seed: 795

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 702
player: 580
random seed: 833

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 765
player: 105
random seed: 946

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 431
player: 386
random seed: 571

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 159
player: 80
random seed: 749

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 239
player: 24
random seed: 183

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 465
player: 392
random seed: 346

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 947
player: 614
random seed: 206

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 397
player: 17
random seed: 843

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 568
player: 508
random seed: 232

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 251
player: 127
random seed: 537

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 86
player: 23
random seed: 491

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 652
player: 398
random seed: 53

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 277
player: 37
random seed: 873

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 574
player: 338
random seed: 950

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 707
player: 378
random seed: 80

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 35
player: 15
random seed: 569

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 869
player: 522
random seed: 400

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 80
player: 45
random seed: 864

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 433
player: 429
random seed: 369

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 881
player: 842
random seed: 736

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 828
player: 313
random seed: 786

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 661
player: 341
random seed: 780

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 926
player: 25
random seed: 438

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 112
player: 63
random seed: 33

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 171
player: 4
random seed: 830

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 280
player: 266
random seed: 399

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 846
player: 23
random seed: 457

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 558
player: 297
random seed: 841

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 466
player: 386
random seed: 521

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 472
player: 414
random seed: 616

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 112
player: 50
random seed: 333

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 72
player: 71
random seed: 586

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 585
player: 294
random seed: 9

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 531
player: 297
random seed: 467

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 917
player: 617
random seed: 159

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 902
player: 891
random seed: 321

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 305
player: 150
random seed: 736

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 815
player: 722
random seed: 705

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 635
player: 296
random seed: 44

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 824
player: 668
random seed: 267

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 631
player: 622
random seed: 708

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 842
player: 669
random seed: 222

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 839
player: 805
random seed: 763

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 892
player: 883
random seed: 795

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 674
player: 499
random seed: 669

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 782
player: 767
random seed: 452

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 87
player: 55
random seed: 831

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 421
player: 55
random seed: 173

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 158
player: 59
random seed: 566

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 72
player: 15
random seed: 529

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 406
player: 154
random seed: 922

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 505
player: 182
random seed: 342

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 246
player: 85
random seed: 132

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 733
player: 29
random seed: 402

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 159
player: 1
random seed: 150

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 520
player: 209
random seed: 521

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 524
player: 204
random seed: 958

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 397
player: 34
random seed: 795

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 83
player: 23
random seed: 590

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 783
player: 544
random seed: 176

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 946
player: 296
random seed: 118

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 89
player: 86
random seed: 825

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 966
player: 879
random seed: 463

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 365
player: 170
random seed: 999

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 902
player: 308
random seed: 853

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 364
player: 136
random seed: 833

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 721
player: 605
random seed: 111

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 291
player: 149
random seed: 480

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 100
player: 17
random seed: 406

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 586
player: 520
random seed: 715

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 377
player: 12
random seed: 934

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 203
player: 13
random seed: 855

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 131
player: 2
random seed: 638

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 115
player: 113
random seed: 202

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 939
player: 90
random seed: 670

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 783
player: 320
random seed: 945

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 856
player: 800
random seed: 985

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 410
player: 103
random seed: 422

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 628
player: 487
random seed: 686

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 252
player: 165
random seed: 255

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 315
player: 162
random seed: 685

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 729
player: 69
random seed: 939

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 683
player: 466
random seed: 180

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 33
player: 8
random seed: 409

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 137
player: 106
random seed: 764

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 677
player: 317
random seed: 607

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 834
player: 773
random seed: 17

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 305
player: 233
random seed: 490

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 342
player: 260
random seed: 342

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 566
player: 551
random seed: 987

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 509
player: 26
random seed: 569

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 883
player: 263
random seed: 109

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 917
player: 539
random seed: 849

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 246
player: 53
random seed: 682

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 21
player: 12
random seed: 866

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 427
player: 97
random seed: 562

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 975
player: 92
random seed: 633

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 177
player: 20
random seed: 469

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 267
player: 179
random seed: 670

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 36
player: 11
random seed: 850

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 231
player: 9
random seed: 864

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 471
player: 288
random seed: 779

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 435
player: 222
random seed: 982

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 441
player: 63
random seed: 593

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 285
player: 100
random seed: 285

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 952
player: 884
random seed: 471

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 681
player: 59
random seed: 758

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 668
player: 650
random seed: 528

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 68
player: 4
random seed: 893

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 163
player: 25
random seed: 383

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 826
player: 808
random seed: 408

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 926
player: 117
random seed: 115

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 388
player: 112
random seed: 869

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 240
player: 133
random seed: 283

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 299
player: 258
random seed: 197

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 159
player: 109
random seed: 985

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 756
player: 521
random seed: 878

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 131
player: 108
random seed: 295

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 629
player: 285
random seed: 700

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 890
player: 682
random seed: 93

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 271
player: 164
random seed: 188

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 535
player: 303
random seed: 623

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 95
player: 69
random seed: 945

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 211
player: 71
random seed: 111

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 974
player: 325
random seed: 346

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 977
player: 635
random seed: 171

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 888
player: 460
random seed: 431

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 605
player: 445
random seed: 87

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 505
player: 504
random seed: 520

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 143
player: 141
random seed: 692

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 660
player: 68
random seed: 306

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 479
player: 85
random seed: 30

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 231
player: 168
random seed: 277

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 664
player: 311
random seed: 217

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 63
player: 6
random seed: 744

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 869
player: 79
random seed: 852

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 42
player: 14
random seed: 351

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 435
player: 346
random seed: 142

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 351
player: 130
random seed: 491

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 330
player: 52
random seed: 705

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 704
player: 209
random seed: 156

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 415
player: 349
random seed: 223

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 349
player: 168
random seed: 606

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 723
player: 0
random seed: 50

****************************
*** Testing choice1 == 0 ***
****************************
estate card found!!



*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 5 to 6 ***
Test Failed. Hand Count: 5

*** Check that the player gained 1 estate card from 1 to 2 ***
Test Failed. Estate Count: 1

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 1 to 0 ***
Test Passed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Passed. Coins: 8

*** Check we decreased hand count from 5 to 4
Test Passed. Player Hand Count: 4

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 5 to 6 ***
Test Failed. Hand Count: 4

*** Check that the player gained 1 estate card from 1 to 2 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Passed. Coins: 8

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 997
player: 756
random seed: 784

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 959
player: 36
random seed: 892

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 200
player: 173
random seed: 504

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 551
player: 453
random seed: 829

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 957
player: 932
random seed: 416

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 805
player: 349
random seed: 376

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 887
player: 213
random seed: 588

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 213
player: 31
random seed: 975

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 840
player: 317
random seed: 554

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 723
player: 527
random seed: 235

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 989
player: 721
random seed: 589

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 545
player: 467
random seed: 952

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 813
player: 557
random seed: 586

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 237
player: 98
random seed: 235

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 807
player: 495
random seed: 330

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 154
player: 33
random seed: 774

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 447
player: 412
random seed: 566

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 274
player: 183
random seed: 995

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 567
player: 326
random seed: 219

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 169
player: 91
random seed: 109

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 982
player: 106
random seed: 882

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 498
player: 136
random seed: 512

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 372
player: 228
random seed: 674

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 814
player: 519
random seed: 569

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 602
player: 20
random seed: 500

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 823
player: 716
random seed: 990

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 502
player: 162
random seed: 437

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 940
player: 102
random seed: 967

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 28
player: 4
random seed: 867

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 898
player: 165
random seed: 496

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 199
player: 12
random seed: 266

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 568
player: 408
random seed: 493

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 419
player: 409
random seed: 347

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 982
player: 585
random seed: 104

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 27
player: 10
random seed: 374

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 849
player: 131
random seed: 171

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 951
player: 310
random seed: 481

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 56
player: 28
random seed: 886

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 576
player: 503
random seed: 569

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 514
player: 323
random seed: 436

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 394
player: 3
random seed: 803

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 591
player: 512
random seed: 767

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 644
player: 35
random seed: 921

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 490
player: 445
random seed: 58

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 729
player: 502
random seed: 18

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 637
player: 42
random seed: 574

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 917
player: 619
random seed: 565

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 583
player: 40
random seed: 403

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 226
player: 67
random seed: 620

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 894
player: 459
random seed: 866

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 919
player: 784
random seed: 549

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 749
player: 240
random seed: 980

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 34
player: 10
random seed: 556

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 675
player: 269
random seed: 611

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 56
player: 20
random seed: 436

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 58
player: 0
random seed: 780

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 5 to 6 ***
Test Failed. Hand Count: 5

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 5 to 4
Test Failed. Player Hand Count: 5

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 5 to 6 ***
Test Failed. Hand Count: 5

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 242
player: 160
random seed: 282

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 429
player: 331
random seed: 785

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 53
player: 31
random seed: 156

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 645
player: 92
random seed: 51

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 363
player: 179
random seed: 219

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 883
player: 646
random seed: 191

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 548
player: 249
random seed: 480

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 985
player: 171
random seed: 993

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 910
player: 489
random seed: 135

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 458
player: 117
random seed: 168

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 455
player: 164
random seed: 850

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 143
player: 76
random seed: 863

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 23
player: 6
random seed: 906

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 771
player: 698
random seed: 345

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 325
player: 50
random seed: 365

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 372
player: 298
random seed: 18

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 87
player: 27
random seed: 188

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 301
player: 145
random seed: 618

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 98
player: 18
random seed: 798

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 925
player: 776
random seed: 528

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 998
player: 337
random seed: 335

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 618
player: 161
random seed: 107

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 838
player: 69
random seed: 67

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 634
player: 515
random seed: 579

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 577
player: 490
random seed: 843

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 915
player: 620
random seed: 231

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 199
player: 81
random seed: 366

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 299
player: 86
random seed: 257

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 257
player: 89
random seed: 986

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 646
player: 45
random seed: 667

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 625
player: 65
random seed: 741

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 783
player: 400
random seed: 359

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 572
player: 118
random seed: 622

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 366
player: 347
random seed: 732

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 532
player: 262
random seed: 982

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 736
player: 370
random seed: 127

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 352
player: 271
random seed: 446

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 748
player: 27
random seed: 284

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 36
player: 12
random seed: 75

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 790
player: 111
random seed: 790

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 953
player: 747
random seed: 829

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 465
player: 230
random seed: 631

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 182
player: 102
random seed: 163

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 524
player: 212
random seed: 607

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 147
player: 122
random seed: 765

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 606
player: 270
random seed: 784

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 488
player: 222
random seed: 459

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 107
player: 87
random seed: 297

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 676
player: 415
random seed: 419

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 844
player: 601
random seed: 359

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 569
player: 143
random seed: 244

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 346
player: 69
random seed: 249

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 331
player: 182
random seed: 284

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 670
player: 530
random seed: 519

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 505
player: 243
random seed: 290

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 458
player: 157
random seed: 958

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 531
player: 342
random seed: 162

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 552
player: 9
random seed: 724

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 778
player: 295
random seed: 256

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 82
player: 9
random seed: 522

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 78
player: 68
random seed: 437

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 381
player: 108
random seed: 528

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 43
player: 13
random seed: 444

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 159
player: 31
random seed: 156

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 808
player: 110
random seed: 77

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 662
player: 308
random seed: 733

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 321
player: 96
random seed: 78

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 842
player: 223
random seed: 265

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 809
player: 329
random seed: 437

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 626
player: 622
random seed: 409

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 152
player: 137
random seed: 907

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 722
player: 632
random seed: 980

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 429
player: 15
random seed: 60

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 72
player: 23
random seed: 72

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 48
player: 16
random seed: 283

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 23
player: 21
random seed: 556

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 955
player: 584
random seed: 292

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 463
player: 16
random seed: 270

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 418
player: 264
random seed: 528

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 588
player: 134
random seed: 90

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 22
player: 4
random seed: 946

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 337
player: 154
random seed: 356

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 147
player: 69
random seed: 491

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 178
player: 56
random seed: 826

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 318
player: 75
random seed: 913

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 272
player: 11
random seed: 119

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 724
player: 146
random seed: 741

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 677
player: 185
random seed: 157

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 394
player: 57
random seed: 153

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 470
player: 395
random seed: 160

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 846
player: 132
random seed: 834

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 200
player: 73
random seed: 71

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 55
player: 43
random seed: 752

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 614
player: 387
random seed: 43

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 129
player: 40
random seed: 479

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 805
player: 706
random seed: 159

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 362
player: 262
random seed: 291

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 85
player: 83
random seed: 487

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 583
player: 181
random seed: 688

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 93
player: 38
random seed: 702

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 387
player: 41
random seed: 812

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 857
player: 776
random seed: 5

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 156
player: 40
random seed: 114

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 504
player: 339
random seed: 444

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 625
player: 107
random seed: 409

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 965
player: 770
random seed: 732

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 183
player: 4
random seed: 221

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 935
player: 739
random seed: 987

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 536
player: 113
random seed: 467

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 383
player: 143
random seed: 835

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 509
player: 336
random seed: 313

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 225
player: 167
random seed: 565

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 384
player: 210
random seed: 921

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 835
player: 273
random seed: 640

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 352
player: 76
random seed: 209

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 117
player: 61
random seed: 929

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 99
player: 52
random seed: 646

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 65
player: 41
random seed: 331

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 23
player: 7
random seed: 538

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 36
player: 7
random seed: 751

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 465
player: 307
random seed: 374

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 372
player: 116
random seed: 700

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 814
player: 232
random seed: 283

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 303
player: 62
random seed: 650

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 795
player: 74
random seed: 383

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 675
player: 163
random seed: 42

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 924
player: 57
random seed: 939

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 352
player: 7
random seed: 254

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 173
player: 105
random seed: 851

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 930
player: 94
random seed: 425

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 475
player: 31
random seed: 38

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 651
player: 290
random seed: 496

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 146
player: 31
random seed: 20

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 242
player: 33
random seed: 10

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 881
player: 383
random seed: 725

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 663
player: 524
random seed: 267

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 486
player: 250
random seed: 977

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 946
player: 707
random seed: 95

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 440
player: 214
random seed: 686

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 754
player: 393
random seed: 89

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 757
player: 710
random seed: 35

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 71
player: 20
random seed: 821

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 894
player: 502
random seed: 69

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 401
player: 51
random seed: 764

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 70
player: 53
random seed: 299

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 716
player: 409
random seed: 608

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 485
player: 15
random seed: 669

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 485
player: 448
random seed: 154

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 785
player: 376
random seed: 548

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 181
player: 153
random seed: 901

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 995
player: 246
random seed: 702

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 185
player: 62
random seed: 383

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 496
player: 259
random seed: 422

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 249
player: 6
random seed: 56

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 100
player: 75
random seed: 641

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 785
player: 314
random seed: 309

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 559
player: 213
random seed: 961

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 550
player: 310
random seed: 37

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 376
player: 79
random seed: 552

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 53
player: 7
random seed: 998

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 426
player: 305
random seed: 611

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 594
player: 218
random seed: 2

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 565
player: 525
random seed: 874

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 593
player: 368
random seed: 404

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 989
player: 650
random seed: 332

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 436
player: 116
random seed: 560

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 622
player: 567
random seed: 249

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 981
player: 14
random seed: 71

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 640
player: 116
random seed: 355

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 936
player: 242
random seed: 514

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 13
player: 1
random seed: 947

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 341
player: 112
random seed: 125

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 596
player: 315
random seed: 886

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 174
player: 31
random seed: 500

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 154
player: 79
random seed: 714

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 168
player: 86
random seed: 894

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 109
player: 61
random seed: 840

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 390
player: 297
random seed: 930

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 386
player: 93
random seed: 729

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 407
player: 163
random seed: 135

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 995
player: 100
random seed: 558

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 422
player: 269
random seed: 796

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 401
player: 7
random seed: 412

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 766
player: 293
random seed: 953

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 781
player: 148
random seed: 244

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 870
player: 144
random seed: 687

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 601
player: 578
random seed: 248

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 400
player: 15
random seed: 752

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 12
player: 5
random seed: 28

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 784
player: 290
random seed: 581

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 719
player: 216
random seed: 480

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 205
player: 53
random seed: 496

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 453
player: 437
random seed: 406

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 67
player: 64
random seed: 669

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 289
player: 110
random seed: 591

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 554
player: 29
random seed: 235

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 172
player: 159
random seed: 504

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 924
player: 347
random seed: 664

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 715
player: 396
random seed: 184

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 354
player: 115
random seed: 464

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 630
player: 10
random seed: 914

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 223
player: 218
random seed: 189

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 997
player: 992
random seed: 536

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 166
player: 164
random seed: 675

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 494
player: 251
random seed: 864

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 322
player: 73
random seed: 505

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 558
player: 422
random seed: 773

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 928
player: 272
random seed: 388

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 515
player: 265
random seed: 625

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 609
player: 100
random seed: 832

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 566
player: 315
random seed: 123

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 789
player: 137
random seed: 102

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 35
player: 22
random seed: 341

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 409
player: 50
random seed: 39

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 977
player: 283
random seed: 668

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 34
player: 32
random seed: 793

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 341
player: 268
random seed: 292

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 352
player: 32
random seed: 514

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 65
player: 58
random seed: 89

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 751
player: 406
random seed: 667

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 715
player: 498
random seed: 668

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 619
player: 456
random seed: 451

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 963
player: 193
random seed: 457

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 275
player: 213
random seed: 462

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 468
player: 235
random seed: 33

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 29
player: 17
random seed: 509

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 320
player: 205
random seed: 841

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 570
player: 183
random seed: 442

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 248
player: 182
random seed: 782

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 947
player: 346
random seed: 118

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 917
player: 704
random seed: 79

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 956
player: 388
random seed: 387

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 788
player: 476
random seed: 73

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 632
player: 537
random seed: 276

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 12
player: 4
random seed: 119

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 267
player: 139
random seed: 62

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 262
player: 258
random seed: 542

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 169
player: 123
random seed: 955

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 826
player: 66
random seed: 83

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 250
player: 213
random seed: 702

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 397
player: 136
random seed: 879

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 952
player: 226
random seed: 709

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 826
player: 193
random seed: 36

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 671
player: 371
random seed: 215

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 532
player: 342
random seed: 972

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 770
player: 61
random seed: 262

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 977
player: 379
random seed: 54

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 603
player: 526
random seed: 337

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 916
player: 671
random seed: 908

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 607
player: 340
random seed: 725

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 315
player: 39
random seed: 92

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 739
player: 588
random seed: 129

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 775
player: 298
random seed: 406

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 203
player: 62
random seed: 6

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 312
player: 275
random seed: 363

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 822
player: 319
random seed: 191

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 655
player: 622
random seed: 264

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 468
player: 397
random seed: 820

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 408
player: 311
random seed: 573

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 540
player: 131
random seed: 190

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 849
player: 767
random seed: 758

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 930
player: 807
random seed: 247

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 260
player: 83
random seed: 8

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 172
player: 38
random seed: 925

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 649
player: 541
random seed: 909

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 120
player: 106
random seed: 208

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 948
player: 830
random seed: 777

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 717
player: 596
random seed: 13

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 332
player: 221
random seed: 137

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 538
player: 27
random seed: 14

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 10
player: 5
random seed: 3

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 143
player: 142
random seed: 613

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 867
player: 141
random seed: 761

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 112
player: 58
random seed: 855

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 613
player: 345
random seed: 802

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 671
player: 666
random seed: 362

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 798
player: 475
random seed: 792

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 547
player: 378
random seed: 222

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 930
player: 244
random seed: 949

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 289
player: 61
random seed: 250

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 690
player: 66
random seed: 658

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 530
player: 241
random seed: 565

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 566
player: 71
random seed: 859

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 862
player: 452
random seed: 73

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 450
player: 277
random seed: 101

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 725
player: 701
random seed: 280

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 624
player: 174
random seed: 394

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 746
player: 138
random seed: 747

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 836
player: 616
random seed: 204

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 3 to 7
Test Failed. Coins: 3

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 114
player: 52
random seed: 446

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 181
player: 109
random seed: 949

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 183
player: 180
random seed: 775

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 5 to 9
Test Failed. Coins: 5

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 701
player: 377
random seed: 441

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0



numPlayer: 129
player: 56
random seed: 927

****************************
*** Testing choice1 == 0 ***
****************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 12

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0

************************************************************
*** Testing choice1 == 1 with estate as first card in hand ***
**************************************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check that the player lost 1 estate card from 0 to -1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check we decreased hand count from 0 to -1
Test Failed. Player Hand Count: 0

*******************************************
*** Testing choice1 == 1 without estate ***
*******************************************

*** Testing numBuys increases from 1 to 2. ***
numBuys Test Passed. numBuys: 2

*** Check estate supply count went down from 12 to 11: ***
Test Failed. Estate Supply Count: 10

*** Test players hand count increases by 1 from 0 to 1 ***
Test Failed. Hand Count: 0

*** Check that the player gained 1 estate card from 0 to 1 ***
Test Failed. Estate Count: 0

*** Check we gained 4 coins from 4 to 8
Test Failed. Coins: 4

*** Check prov & estate supply of 0 to check game over if statement, should return 1 ***
Test Failed. Game over results: 0





End of baronCardEffect() tests



***************************************
*** Random Testing minionCardEffect() ***
*****************************************

**Fuzz: 0**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 1**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 2**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 3**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 4**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 5**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 6**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 7**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 8**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 9**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 10**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 11**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 12**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 13**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 14**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 15**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 16**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 17**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 18**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 19**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 20**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 21**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 22**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 23**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 24**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 25**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 26**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 27**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 28**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 29**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 30**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 31**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 32**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 33**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 34**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 35**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 36**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 37**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 38**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 39**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 40**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 41**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 42**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 43**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 44**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 45**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 46**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 47**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 48**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 49**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 50**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 51**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 52**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 53**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 54**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 55**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 56**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 57**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 58**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 59**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 60**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 61**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 62**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 63**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 64**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 65**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 66**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 67**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 68**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 69**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 70**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 71**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 72**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 73**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 74**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 75**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 76**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 77**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 78**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 79**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 80**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 81**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 82**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 83**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 84**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 85**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 86**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 87**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 88**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 89**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 90**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 91**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 92**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 93**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 94**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 95**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 96**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 97**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 98**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 99**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 100**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 101**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 102**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 103**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 104**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 105**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 106**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 107**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 108**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 109**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 110**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 111**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 112**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 113**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 114**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 115**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 116**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 117**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 118**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 119**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 120**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 121**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 122**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 123**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 124**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 125**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 126**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 127**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 128**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 129**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 130**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 131**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 132**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 133**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 134**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 135**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 136**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 137**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 138**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 139**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 140**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 141**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 142**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 143**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 144**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 145**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 146**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 147**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 148**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 149**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 150**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 151**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 152**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 153**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 154**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 155**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 156**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 157**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 158**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 159**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 160**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 161**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 162**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 163**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 164**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 165**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 166**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 167**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 168**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 169**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 170**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 171**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 172**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 173**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 174**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 175**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 176**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 177**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 178**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 179**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 180**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 181**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 182**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 183**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 184**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 185**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 186**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 187**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 188**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 189**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 190**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 191**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 192**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 193**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 194**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 195**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 196**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 197**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 198**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 199**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 200**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 201**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 202**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 203**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 204**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 205**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 206**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 207**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 208**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 209**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 210**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 211**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 212**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 213**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 214**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 215**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 216**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 217**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 218**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 219**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 220**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 221**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 222**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 223**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 224**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 225**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 226**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 227**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 228**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 229**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 230**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 231**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 232**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 233**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 234**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 235**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 236**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 237**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 238**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 239**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 240**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 241**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 242**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 243**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 244**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 245**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 246**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 247**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 248**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 249**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 250**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 251**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 252**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 253**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 254**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 255**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 256**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 257**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 258**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 259**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 260**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 261**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 262**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 263**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 264**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 265**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 266**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 267**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 268**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 269**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 270**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 271**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 272**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 273**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 274**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 275**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 276**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 277**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 278**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 279**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 280**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 281**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 282**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 283**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 284**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 285**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 286**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 287**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 288**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 289**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 290**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 291**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 292**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 293**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 294**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 295**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 296**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 297**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 298**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 299**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 300**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 301**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 302**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 303**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 304**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 305**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 306**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 307**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 308**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 309**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 310**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 311**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 312**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 313**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 314**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 315**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 316**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 317**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 318**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 319**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 320**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 321**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 322**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 323**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 324**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 325**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 326**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 327**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 328**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 329**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 330**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 331**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 332**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 333**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 334**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 335**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 336**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 337**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 338**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 339**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 340**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 341**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 342**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 343**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 344**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 345**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 346**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 347**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 348**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 349**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 350**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 351**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 352**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 353**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 354**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 355**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 356**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 357**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 358**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 359**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 360**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 361**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 362**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 363**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 364**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 365**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 366**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 367**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 368**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 369**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 370**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 371**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 372**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 373**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 374**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 375**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 376**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 377**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 378**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 379**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 380**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 381**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 382**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 383**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 384**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 385**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 386**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 387**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 388**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 389**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 390**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 391**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 392**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 393**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 394**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 395**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 396**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 397**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 398**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 399**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 400**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 401**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 402**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 403**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 404**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 405**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 406**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 407**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 408**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 409**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 410**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 411**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 412**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 413**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 414**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 415**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 416**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 417**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 418**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 419**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 420**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 421**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 422**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 423**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 424**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 425**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 426**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 427**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 428**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 429**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 430**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 431**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 432**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 433**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 434**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 435**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 436**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 437**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 438**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 439**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 440**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 441**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 442**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 443**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 444**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 445**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 446**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 447**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 448**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 449**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 450**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 451**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 452**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 453**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 454**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 455**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 456**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 457**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 458**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 459**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 460**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 461**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 462**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 463**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 464**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 465**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 466**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 467**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 468**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 469**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 470**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 471**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 472**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 473**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 474**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 475**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 476**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 477**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 478**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 479**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 480**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 481**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 482**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 483**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 484**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 485**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 486**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 487**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 488**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 489**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 490**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 491**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 492**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 493**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 494**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 495**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 496**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 497**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 498**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 499**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 500**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 501**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 502**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 503**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 504**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 505**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 506**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 507**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 508**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 509**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 510**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 511**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 512**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 513**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 514**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 515**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 516**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 517**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 518**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 519**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 520**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 521**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 522**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 523**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 524**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 525**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 526**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 527**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 528**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 529**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 530**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 531**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 532**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 533**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 534**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 535**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 536**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 537**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 538**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 539**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 540**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 541**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 542**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 543**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 544**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 545**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 546**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 547**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 548**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 549**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 550**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 551**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 552**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 553**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 554**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 555**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 556**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 557**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 558**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 559**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 560**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 561**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 562**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 563**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 564**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 565**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 566**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 567**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 568**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 569**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 570**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 571**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 572**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 573**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 574**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 575**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 576**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 577**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 578**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 579**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 580**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 581**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 582**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 583**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 584**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 585**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 586**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 587**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 588**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 589**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 590**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 591**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 592**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 593**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 594**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 595**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 596**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 597**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 598**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 599**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 600**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 601**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 602**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 603**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 604**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 605**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 606**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 607**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 608**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 609**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 610**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 611**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 612**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 613**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 614**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 615**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 616**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 617**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 618**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 619**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 620**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 621**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 622**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 623**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 624**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 625**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 626**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 627**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 628**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 629**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 630**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 631**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 632**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 633**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 634**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 635**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 636**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 637**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 638**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 639**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 640**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 641**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 642**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 643**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 644**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 645**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 646**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 647**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 648**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 649**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 650**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 651**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 652**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 653**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 654**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 655**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 656**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 657**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 658**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 659**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 660**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 661**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 662**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 663**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 664**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 665**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 666**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 667**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 668**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 669**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 670**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 671**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 672**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 673**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 674**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 675**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 676**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 677**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 678**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 679**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 680**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 681**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 682**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 683**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 684**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 685**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 686**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 687**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 688**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 689**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 690**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 691**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 692**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 693**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 694**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 695**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 696**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 697**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 698**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 699**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 700**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 701**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 702**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 703**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 704**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 705**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 706**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 707**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 708**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 709**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 710**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 711**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 712**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 713**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 714**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 715**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 716**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 717**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 718**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 719**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 720**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 721**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 722**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 723**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 724**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 725**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 726**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 727**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 728**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 729**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 730**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 731**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 732**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 733**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 734**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 735**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 736**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 737**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 738**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 739**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 740**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 741**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 742**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 743**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 744**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 745**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 746**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 747**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 748**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 749**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 750**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 751**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 752**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 753**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 754**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 755**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 756**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 757**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 758**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 759**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 760**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 761**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 762**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 763**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 764**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 765**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 766**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 767**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 768**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 769**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 770**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 771**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 772**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 773**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 774**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 775**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 776**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 777**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 778**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 779**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 780**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 781**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 782**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 783**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 784**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 785**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 786**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 787**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 788**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 789**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 790**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 791**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 792**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 793**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 794**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 795**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 796**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 797**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 798**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 799**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 800**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 801**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 802**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 803**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 804**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 805**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 806**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 807**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 808**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 809**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 810**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 811**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 812**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 813**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 814**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 815**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 816**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 817**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 818**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 819**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 820**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 821**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 822**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 823**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 824**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 825**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 826**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 827**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 828**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 829**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 830**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 831**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 832**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 833**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 834**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 835**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 836**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 837**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 838**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 839**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 840**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 841**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 842**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 843**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 844**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 845**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 846**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 847**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 848**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 849**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 850**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 851**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 852**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 853**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 854**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 855**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 856**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 857**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 858**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 859**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 860**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 861**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 862**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 863**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 864**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 865**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 866**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 867**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 868**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 869**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 870**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 871**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 872**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 873**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 874**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 875**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 876**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 877**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 878**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 879**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 880**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 881**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 882**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 883**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 884**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 885**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 886**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 887**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 888**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 889**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 890**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 891**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 892**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 893**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 894**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 895**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 896**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 897**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 898**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 899**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 900**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 901**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 902**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 903**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 904**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 905**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 906**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 907**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 908**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 909**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 910**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 911**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 912**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 913**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 914**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 915**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 916**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 917**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 918**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 919**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 920**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 921**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 922**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 923**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 924**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 925**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 926**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 927**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 928**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 929**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 930**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 931**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 932**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 933**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 934**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 935**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 936**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 937**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 938**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 939**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 940**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 941**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 942**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 943**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 944**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 945**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 946**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 947**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 948**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 949**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 950**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 951**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 952**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 953**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 954**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 955**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 956**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 957**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 958**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 959**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 960**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 961**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 962**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 963**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 964**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 965**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 966**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 967**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 968**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 969**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 970**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 971**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 972**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 973**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 974**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 975**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 976**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 977**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 978**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 979**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 980**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 981**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 982**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 983**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 984**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 985**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 986**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 987**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 988**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 989**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 990**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 991**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 992**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 993**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 994**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 995**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 996**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 997**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 998**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4

**Fuzz: 999**



 *** Testing Choice1: 0, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 0, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Failed. Number of coins: 6


 *** Testing Choice1: 1, Choice2: 0

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Passed. Number of minion cards in hand: 4
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


 *** Testing Choice1: 1, Choice2: 1

*** Check numActions increases by 1 from 1 to 2 ***
Test Passed. numActions: 2
*** Check discard our card from 5 to 4 ***
Test Failed. Number of minion cards in hand: 0
*** Check number of coins. Should stay the same at 4 because choice1 = 0 
Test Passed. Number of coins: 4


End of random test for minionCardEffect()



***************************************
*** Random Testing tributeCardEffect() ***
*****************************************

**Fuzz: 0**

test print k:
k[0] = 17
k[1] = 24
k[2] = 11
k[3] = 6
k[4] = 5
k[5] = 15
k[6] = 18
k[7] = 2
k[8] = 20
k[9] = 16


** Player: 0 **

Before num coins: 4
Before num actions: 1
Before num cards: 915


 Tribute Call

After num coins: 4
After num actions: 7
After num cards: 915


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 1 **

Before num coins: 4
Before num actions: 7
Before num cards: 161


 Tribute Call

After num coins: 4
After num actions: 13
After num cards: 161


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 2 **

Before num coins: 4
Before num actions: 13
Before num cards: 12


 Tribute Call

After num coins: 4
After num actions: 19
After num cards: 12


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 3 **

Before num coins: 4
Before num actions: 19
Before num cards: 221


 Tribute Call

After num coins: 4
After num actions: 25
After num cards: 221


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 4 **

Before num coins: 4
Before num actions: 25
Before num cards: 279


 Tribute Call

After num coins: 4
After num actions: 31
After num cards: 279


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 5 **

Before num coins: 4
Before num actions: 31
Before num cards: 783


 Tribute Call

After num coins: 4
After num actions: 37
After num cards: 783


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 6 **

Before num coins: 4
Before num actions: 37
Before num cards: 392


 Tribute Call

After num coins: 4
After num actions: 43
After num cards: 392


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 7 **

Before num coins: 4
Before num actions: 43
Before num cards: 162


 Tribute Call

After num coins: 4
After num actions: 49
After num cards: 162


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 8 **

Before num coins: 4
Before num actions: 49
Before num cards: 763


 Tribute Call

After num coins: 4
After num actions: 55
After num cards: 763


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 9 **

Before num coins: 4
Before num actions: 55
Before num cards: 748


 Tribute Call

After num coins: 4
After num actions: 61
After num cards: 748


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 10 **

Before num coins: 4
Before num actions: 61
Before num cards: 566


 Tribute Call

After num coins: 4
After num actions: 67
After num cards: 566


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 11 **

Before num coins: 4
Before num actions: 67
Before num cards: 543


 Tribute Call

After num coins: 4
After num actions: 73
After num cards: 543


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 12 **

Before num coins: 4
Before num actions: 73
Before num cards: 585


 Tribute Call

After num coins: 4
After num actions: 79
After num cards: 585


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 13 **

Before num coins: 4
Before num actions: 79
Before num cards: 660


 Tribute Call

After num coins: 4
After num actions: 85
After num cards: 660


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 14 **

Before num coins: 4
Before num actions: 85
Before num cards: 53


 Tribute Call

After num coins: 4
After num actions: 91
After num cards: 53


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 15 **

Before num coins: 4
Before num actions: 91
Before num cards: 675


 Tribute Call

After num coins: 4
After num actions: 97
After num cards: 675


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 16 **

Before num coins: 4
Before num actions: 97
Before num cards: 681


 Tribute Call

After num coins: 4
After num actions: 103
After num cards: 681


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 17 **

Before num coins: 4
Before num actions: 103
Before num cards: 798


 Tribute Call

After num coins: 4
After num actions: 109
After num cards: 798


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 18 **

Before num coins: 4
Before num actions: 109
Before num cards: 465


 Tribute Call

After num coins: 4
After num actions: 115
After num cards: 465


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 19 **

Before num coins: 4
Before num actions: 115
Before num cards: 611


 Tribute Call

After num coins: 4
After num actions: 121
After num cards: 611


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 20 **

Before num coins: 4
Before num actions: 121
Before num cards: 735


 Tribute Call

After num coins: 4
After num actions: 127
After num cards: 735


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 21 **

Before num coins: 4
Before num actions: 127
Before num cards: 992


 Tribute Call

After num coins: 4
After num actions: 133
After num cards: 992


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 22 **

Before num coins: 4
Before num actions: 133
Before num cards: 859


 Tribute Call

After num coins: 4
After num actions: 139
After num cards: 859


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 23 **

Before num coins: 4
Before num actions: 139
Before num cards: 257


 Tribute Call

After num coins: 4
After num actions: 145
After num cards: 257


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 24 **

Before num coins: 4
Before num actions: 145
Before num cards: 690


 Tribute Call

After num coins: 4
After num actions: 151
After num cards: 690


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 25 **

Before num coins: 4
Before num actions: 151
Before num cards: 867


 Tribute Call

After num coins: 4
After num actions: 157
After num cards: 867


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 26 **

Before num coins: 4
Before num actions: 157
Before num cards: 181


 Tribute Call

After num coins: 4
After num actions: 163
After num cards: 181


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 27 **

Before num coins: 4
Before num actions: 163
Before num cards: 835


 Tribute Call

After num coins: 4
After num actions: 169
After num cards: 835


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 28 **

Before num coins: 4
Before num actions: 169
Before num cards: 143


 Tribute Call

After num coins: 4
After num actions: 175
After num cards: 143


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 29 **

Before num coins: 4
Before num actions: 175
Before num cards: 577


 Tribute Call

After num coins: 4
After num actions: 181
After num cards: 577


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 30 **

Before num coins: 4
Before num actions: 181
Before num cards: 465


 Tribute Call

After num coins: 4
After num actions: 187
After num cards: 465


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 31 **

Before num coins: 4
Before num actions: 187
Before num cards: 349


 Tribute Call

After num coins: 4
After num actions: 193
After num cards: 349


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 32 **

Before num coins: 4
Before num actions: 193
Before num cards: 449


 Tribute Call

After num coins: 4
After num actions: 199
After num cards: 449


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 33 **

Before num coins: 4
Before num actions: 199
Before num cards: 321


 Tribute Call

After num coins: 4
After num actions: 205
After num cards: 321


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 34 **

Before num coins: 4
Before num actions: 205
Before num cards: 702


 Tribute Call

After num coins: 6
After num actions: 209
After num cards: 702


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 35 **

Before num coins: 6
Before num actions: 209
Before num cards: 663


 Tribute Call

After num coins: 6
After num actions: 215
After num cards: 663


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 36 **

Before num coins: 6
Before num actions: 215
Before num cards: 953


 Tribute Call

After num coins: 6
After num actions: 221
After num cards: 953


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 37 **

Before num coins: 6
Before num actions: 221
Before num cards: 782


 Tribute Call

After num coins: 6
After num actions: 227
After num cards: 782


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 38 **

Before num coins: 6
Before num actions: 227
Before num cards: 838


 Tribute Call

After num coins: 6
After num actions: 233
After num cards: 838


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 39 **

Before num coins: 6
Before num actions: 233
Before num cards: 70


 Tribute Call

After num coins: 6
After num actions: 239
After num cards: 70


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 40 **

Before num coins: 6
Before num actions: 239
Before num cards: 765


 Tribute Call

After num coins: 6
After num actions: 245
After num cards: 765


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 41 **

Before num coins: 6
Before num actions: 245
Before num cards: 101


 Tribute Call

After num coins: 6
After num actions: 251
After num cards: 101


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 42 **

Before num coins: 6
Before num actions: 251
Before num cards: 318


 Tribute Call

After num coins: 6
After num actions: 257
After num cards: 318


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 43 **

Before num coins: 6
Before num actions: 257
Before num cards: 892


 Tribute Call

After num coins: 6
After num actions: 263
After num cards: 892


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 44 **

Before num coins: 6
Before num actions: 263
Before num cards: 953


 Tribute Call

After num coins: 6
After num actions: 269
After num cards: 953


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 45 **

Before num coins: 6
Before num actions: 269
Before num cards: 816


 Tribute Call

After num coins: 6
After num actions: 275
After num cards: 816


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 46 **

Before num coins: 6
Before num actions: 275
Before num cards: 828


 Tribute Call

After num coins: 6
After num actions: 281
After num cards: 828


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 47 **

Before num coins: 6
Before num actions: 281
Before num cards: 500


 Tribute Call

After num coins: 6
After num actions: 287
After num cards: 500


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 48 **

Before num coins: 6
Before num actions: 287
Before num cards: 675


 Tribute Call

After num coins: 6
After num actions: 293
After num cards: 675


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 49 **

Before num coins: 6
Before num actions: 293
Before num cards: 766


 Tribute Call

After num coins: 6
After num actions: 299
After num cards: 766


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 50 **

Before num coins: 6
Before num actions: 299
Before num cards: 924


 Tribute Call

After num coins: 6
After num actions: 305
After num cards: 924


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 51 **

Before num coins: 6
Before num actions: 305
Before num cards: 673


 Tribute Call

After num coins: 6
After num actions: 311
After num cards: 673


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 52 **

Before num coins: 6
Before num actions: 311
Before num cards: 187


 Tribute Call

After num coins: 6
After num actions: 317
After num cards: 187


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 53 **

Before num coins: 6
Before num actions: 317
Before num cards: 794


 Tribute Call

After num coins: 6
After num actions: 323
After num cards: 794


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 54 **

Before num coins: 6
Before num actions: 323
Before num cards: 85


 Tribute Call

After num coins: 6
After num actions: 329
After num cards: 85


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 55 **

Before num coins: 6
Before num actions: 329
Before num cards: 357


 Tribute Call

After num coins: 6
After num actions: 335
After num cards: 357


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 56 **

Before num coins: 6
Before num actions: 335
Before num cards: 427


 Tribute Call

After num coins: 6
After num actions: 341
After num cards: 427


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 57 **

Before num coins: 6
Before num actions: 341
Before num cards: 592


 Tribute Call

After num coins: 6
After num actions: 347
After num cards: 592


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 58 **

Before num coins: 6
Before num actions: 347
Before num cards: 367


 Tribute Call

After num coins: 6
After num actions: 353
After num cards: 367


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 59 **

Before num coins: 6
Before num actions: 353
Before num cards: 545


 Tribute Call

After num coins: 6
After num actions: 359
After num cards: 545


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 60 **

Before num coins: 6
Before num actions: 359
Before num cards: 954


 Tribute Call

After num coins: 6
After num actions: 365
After num cards: 954


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 61 **

Before num coins: 6
Before num actions: 365
Before num cards: 442


 Tribute Call

After num coins: 6
After num actions: 371
After num cards: 442


Coins Test Passed
Actions Test Failed
Cards Test Passed

**Fuzz: 1**

test print k:
k[0] = 15
k[1] = 8
k[2] = 6
k[3] = 10
k[4] = 16
k[5] = 7
k[6] = 12
k[7] = 25
k[8] = 0
k[9] = 17


** Player: 0 **

Before num coins: 4
Before num actions: 1
Before num cards: 912


 Tribute Call

After num coins: 4
After num actions: 7
After num cards: 912


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 1 **

Before num coins: 4
Before num actions: 7
Before num cards: 481


 Tribute Call

After num coins: 4
After num actions: 13
After num cards: 481


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 2 **

Before num coins: 4
Before num actions: 13
Before num cards: 318


 Tribute Call

After num coins: 4
After num actions: 19
After num cards: 318


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 3 **

Before num coins: 4
Before num actions: 19
Before num cards: 582


 Tribute Call

After num coins: 4
After num actions: 25
After num cards: 582


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 4 **

Before num coins: 4
Before num actions: 25
Before num cards: 208


 Tribute Call

After num coins: 4
After num actions: 31
After num cards: 208


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 5 **

Before num coins: 4
Before num actions: 31
Before num cards: 261


 Tribute Call

After num coins: 4
After num actions: 37
After num cards: 261


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 6 **

Before num coins: 4
Before num actions: 37
Before num cards: 814


 Tribute Call

After num coins: 4
After num actions: 43
After num cards: 814


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 7 **

Before num coins: 4
Before num actions: 43
Before num cards: 84


 Tribute Call

After num coins: 4
After num actions: 49
After num cards: 84


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 8 **

Before num coins: 4
Before num actions: 49
Before num cards: 425


 Tribute Call

After num coins: 4
After num actions: 55
After num cards: 425


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 9 **

Before num coins: 4
Before num actions: 55
Before num cards: 629


 Tribute Call

After num coins: 4
After num actions: 61
After num cards: 629


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 10 **

Before num coins: 4
Before num actions: 61
Before num cards: 209


 Tribute Call

After num coins: 4
After num actions: 67
After num cards: 209


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 11 **

Before num coins: 4
Before num actions: 67
Before num cards: 346


 Tribute Call

After num coins: 4
After num actions: 73
After num cards: 346


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 12 **

Before num coins: 4
Before num actions: 73
Before num cards: 324


 Tribute Call

After num coins: 4
After num actions: 79
After num cards: 324


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 13 **

Before num coins: 4
Before num actions: 79
Before num cards: 383


 Tribute Call

After num coins: 4
After num actions: 85
After num cards: 383


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 14 **

Before num coins: 4
Before num actions: 85
Before num cards: 127


 Tribute Call

After num coins: 4
After num actions: 91
After num cards: 127


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 15 **

Before num coins: 4
Before num actions: 91
Before num cards: 960


 Tribute Call

After num coins: 4
After num actions: 97
After num cards: 960


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 16 **

Before num coins: 4
Before num actions: 97
Before num cards: 277


 Tribute Call

After num coins: 4
After num actions: 103
After num cards: 277


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 17 **

Before num coins: 4
Before num actions: 103
Before num cards: 902


 Tribute Call

After num coins: 4
After num actions: 109
After num cards: 902


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 18 **

Before num coins: 4
Before num actions: 109
Before num cards: 959


 Tribute Call

After num coins: 4
After num actions: 115
After num cards: 959


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 19 **

Before num coins: 4
Before num actions: 115
Before num cards: 675


 Tribute Call

After num coins: 4
After num actions: 121
After num cards: 675


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 20 **

Before num coins: 4
Before num actions: 121
Before num cards: 628


 Tribute Call

After num coins: 4
After num actions: 127
After num cards: 628


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 21 **

Before num coins: 4
Before num actions: 127
Before num cards: 934


 Tribute Call

After num coins: 4
After num actions: 133
After num cards: 934


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 22 **

Before num coins: 4
Before num actions: 133
Before num cards: 781


 Tribute Call

After num coins: 4
After num actions: 139
After num cards: 781


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 23 **

Before num coins: 4
Before num actions: 139
Before num cards: 82


 Tribute Call

After num coins: 4
After num actions: 145
After num cards: 82


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 24 **

Before num coins: 4
Before num actions: 145
Before num cards: 170


 Tribute Call

After num coins: 4
After num actions: 151
After num cards: 170


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 25 **

Before num coins: 4
Before num actions: 151
Before num cards: 388


 Tribute Call

After num coins: 4
After num actions: 157
After num cards: 388


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 26 **

Before num coins: 4
Before num actions: 157
Before num cards: 531


 Tribute Call

After num coins: 4
After num actions: 163
After num cards: 531


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 27 **

Before num coins: 4
Before num actions: 163
Before num cards: 62


 Tribute Call

After num coins: 4
After num actions: 169
After num cards: 62


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 28 **

Before num coins: 4
Before num actions: 169
Before num cards: 638


 Tribute Call

After num coins: 4
After num actions: 175
After num cards: 638


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 29 **

Before num coins: 4
Before num actions: 175
Before num cards: 134


 Tribute Call

After num coins: 4
After num actions: 181
After num cards: 134


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 30 **

Before num coins: 4
Before num actions: 181
Before num cards: 362


 Tribute Call

After num coins: 4
After num actions: 187
After num cards: 362


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 31 **

Before num coins: 4
Before num actions: 187
Before num cards: 151


 Tribute Call

After num coins: 4
After num actions: 193
After num cards: 151


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 32 **

Before num coins: 4
Before num actions: 193
Before num cards: 253


 Tribute Call

After num coins: 4
After num actions: 199
After num cards: 253


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 33 **

Before num coins: 4
Before num actions: 199
Before num cards: 990


 Tribute Call

After num coins: 4
After num actions: 205
After num cards: 990


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 34 **

Before num coins: 4
Before num actions: 205
Before num cards: 497


 Tribute Call

After num coins: 4
After num actions: 211
After num cards: 497


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 35 **

Before num coins: 4
Before num actions: 211
Before num cards: 857


 Tribute Call

After num coins: 4
After num actions: 217
After num cards: 857


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 36 **

Before num coins: 4
Before num actions: 217
Before num cards: 802


 Tribute Call

After num coins: 4
After num actions: 223
After num cards: 802


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 37 **

Before num coins: 4
Before num actions: 223
Before num cards: 163


 Tribute Call

After num coins: 4
After num actions: 229
After num cards: 163


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 38 **

Before num coins: 4
Before num actions: 229
Before num cards: 102


 Tribute Call

After num coins: 4
After num actions: 235
After num cards: 102


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 39 **

Before num coins: 4
Before num actions: 235
Before num cards: 696


 Tribute Call

After num coins: 4
After num actions: 241
After num cards: 696


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 40 **

Before num coins: 4
Before num actions: 241
Before num cards: 82


 Tribute Call

After num coins: 4
After num actions: 247
After num cards: 82


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 41 **

Before num coins: 4
Before num actions: 247
Before num cards: 873


 Tribute Call

After num coins: 4
After num actions: 253
After num cards: 873


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 42 **

Before num coins: 4
Before num actions: 253
Before num cards: 632


 Tribute Call

After num coins: 4
After num actions: 259
After num cards: 632


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 43 **

Before num coins: 4
Before num actions: 259
Before num cards: 607


 Tribute Call

After num coins: 4
After num actions: 265
After num cards: 607


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 44 **

Before num coins: 4
Before num actions: 265
Before num cards: 972


 Tribute Call

After num coins: 4
After num actions: 271
After num cards: 972


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 45 **

Before num coins: 4
Before num actions: 271
Before num cards: 927


 Tribute Call

After num coins: 4
After num actions: 277
After num cards: 927


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 46 **

Before num coins: 4
Before num actions: 277
Before num cards: 431


 Tribute Call

After num coins: 6
After num actions: 279
After num cards: 433


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 47 **

Before num coins: 6
Before num actions: 279
Before num cards: 45


 Tribute Call

After num coins: 6
After num actions: 285
After num cards: 45


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 48 **

Before num coins: 6
Before num actions: 285
Before num cards: 871


 Tribute Call

After num coins: 6
After num actions: 291
After num cards: 871


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 49 **

Before num coins: 6
Before num actions: 291
Before num cards: 202


 Tribute Call

After num coins: 6
After num actions: 297
After num cards: 202


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 50 **

Before num coins: 6
Before num actions: 297
Before num cards: 138


 Tribute Call

After num coins: 6
After num actions: 303
After num cards: 138


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 51 **

Before num coins: 6
Before num actions: 303
Before num cards: 841


 Tribute Call

After num coins: 6
After num actions: 309
After num cards: 841


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 52 **

Before num coins: 6
Before num actions: 309
Before num cards: 113


 Tribute Call

After num coins: 6
After num actions: 315
After num cards: 113


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 53 **

Before num coins: 6
Before num actions: 315
Before num cards: 340


 Tribute Call

After num coins: 6
After num actions: 321
After num cards: 340


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 54 **

Before num coins: 6
Before num actions: 321
Before num cards: 376


 Tribute Call

After num coins: 6
After num actions: 327
After num cards: 376


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 55 **

Before num coins: 6
Before num actions: 327
Before num cards: 771


 Tribute Call

After num coins: 6
After num actions: 333
After num cards: 771


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 56 **

Before num coins: 6
Before num actions: 333
Before num cards: 22


 Tribute Call

After num coins: 6
After num actions: 339
After num cards: 22


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 57 **

Before num coins: 6
Before num actions: 339
Before num cards: 238


 Tribute Call

After num coins: 6
After num actions: 345
After num cards: 238


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 58 **

Before num coins: 6
Before num actions: 345
Before num cards: 557


 Tribute Call

After num coins: 6
After num actions: 351
After num cards: 557


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 59 **

Before num coins: 6
Before num actions: 351
Before num cards: 137


 Tribute Call

After num coins: 6
After num actions: 357
After num cards: 137


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 60 **

Before num coins: 6
Before num actions: 357
Before num cards: 565


 Tribute Call

After num coins: 6
After num actions: 363
After num cards: 565


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 61 **

Before num coins: 6
Before num actions: 363
Before num cards: 528


 Tribute Call

After num coins: 6
After num actions: 369
After num cards: 528


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 62 **

Before num coins: 6
Before num actions: 369
Before num cards: 526


 Tribute Call

After num coins: 6
After num actions: 375
After num cards: 526


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 63 **

Before num coins: 6
Before num actions: 375
Before num cards: 163


 Tribute Call

After num coins: 6
After num actions: 381
After num cards: 163


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 64 **

Before num coins: 6
Before num actions: 381
Before num cards: 932


 Tribute Call

After num coins: 6
After num actions: 387
After num cards: 932


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 65 **

Before num coins: 6
Before num actions: 387
Before num cards: 959


 Tribute Call

After num coins: 6
After num actions: 393
After num cards: 959


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 66 **

Before num coins: 6
Before num actions: 393
Before num cards: 232


 Tribute Call

After num coins: 6
After num actions: 399
After num cards: 232


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 67 **

Before num coins: 6
Before num actions: 399
Before num cards: 280


 Tribute Call

After num coins: 6
After num actions: 405
After num cards: 280


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 68 **

Before num coins: 6
Before num actions: 405
Before num cards: 786


 Tribute Call

After num coins: 6
After num actions: 411
After num cards: 786


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 69 **

Before num coins: 6
Before num actions: 411
Before num cards: 10


 Tribute Call

After num coins: 6
After num actions: 417
After num cards: 10


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 70 **

Before num coins: 6
Before num actions: 417
Before num cards: 257


 Tribute Call

After num coins: 6
After num actions: 423
After num cards: 257


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 71 **

Before num coins: 6
Before num actions: 423
Before num cards: 693


 Tribute Call

After num coins: 6
After num actions: 429
After num cards: 693


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 72 **

Before num coins: 6
Before num actions: 429
Before num cards: 881


 Tribute Call

After num coins: 6
After num actions: 435
After num cards: 881


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 73 **

Before num coins: 6
Before num actions: 435
Before num cards: 772


 Tribute Call

After num coins: 6
After num actions: 441
After num cards: 772


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 74 **

Before num coins: 6
Before num actions: 441
Before num cards: 988


 Tribute Call

After num coins: 6
After num actions: 447
After num cards: 988


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 75 **

Before num coins: 6
Before num actions: 447
Before num cards: 51


 Tribute Call

After num coins: 6
After num actions: 453
After num cards: 51


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 76 **

Before num coins: 6
Before num actions: 453
Before num cards: 435


 Tribute Call

After num coins: 6
After num actions: 459
After num cards: 435


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 77 **

Before num coins: 6
Before num actions: 459
Before num cards: 671


 Tribute Call

After num coins: 6
After num actions: 465
After num cards: 671


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 78 **

Before num coins: 6
Before num actions: 465
Before num cards: 972


 Tribute Call

After num coins: 6
After num actions: 471
After num cards: 972


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 79 **

Before num coins: 6
Before num actions: 471
Before num cards: 218


 Tribute Call

After num coins: 6
After num actions: 477
After num cards: 218


Coins Test Passed
Actions Test Failed
Cards Test Passed

**Fuzz: 2**

test print k:
k[0] = 2
k[1] = 3
k[2] = 15
k[3] = 10
k[4] = 24
k[5] = 14
k[6] = 22
k[7] = 23
k[8] = 21
k[9] = 5


** Player: 0 **

Before num coins: 4
Before num actions: 1
Before num cards: 298


 Tribute Call

After num coins: 4
After num actions: 7
After num cards: 298


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 1 **

Before num coins: 4
Before num actions: 7
Before num cards: 904


 Tribute Call

After num coins: 4
After num actions: 13
After num cards: 904


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 2 **

Before num coins: 4
Before num actions: 13
Before num cards: 99


 Tribute Call

After num coins: 4
After num actions: 19
After num cards: 99


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 3 **

Before num coins: 4
Before num actions: 19
Before num cards: 122


 Tribute Call

After num coins: 4
After num actions: 25
After num cards: 122


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 4 **

Before num coins: 4
Before num actions: 25
Before num cards: 326


 Tribute Call

After num coins: 4
After num actions: 31
After num cards: 326


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 5 **

Before num coins: 4
Before num actions: 31
Before num cards: 678


 Tribute Call

After num coins: 4
After num actions: 37
After num cards: 678


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 6 **

Before num coins: 4
Before num actions: 37
Before num cards: 486


 Tribute Call

After num coins: 4
After num actions: 43
After num cards: 486


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 7 **

Before num coins: 4
Before num actions: 43
Before num cards: 464


 Tribute Call

After num coins: 4
After num actions: 49
After num cards: 464


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 8 **

Before num coins: 4
Before num actions: 49
Before num cards: 813


 Tribute Call

After num coins: 4
After num actions: 55
After num cards: 813


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 9 **

Before num coins: 4
Before num actions: 55
Before num cards: 533


 Tribute Call

After num coins: 4
After num actions: 61
After num cards: 533


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 10 **

Before num coins: 4
Before num actions: 61
Before num cards: 886


 Tribute Call

After num coins: 4
After num actions: 67
After num cards: 886


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 11 **

Before num coins: 4
Before num actions: 67
Before num cards: 295


 Tribute Call

After num coins: 4
After num actions: 73
After num cards: 295


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 12 **

Before num coins: 4
Before num actions: 73
Before num cards: 788


 Tribute Call

After num coins: 4
After num actions: 79
After num cards: 788


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 13 **

Before num coins: 4
Before num actions: 79
Before num cards: 788


 Tribute Call

After num coins: 4
After num actions: 85
After num cards: 788


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 14 **

Before num coins: 4
Before num actions: 85
Before num cards: 158


 Tribute Call

After num coins: 4
After num actions: 91
After num cards: 158


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 15 **

Before num coins: 4
Before num actions: 91
Before num cards: 410


 Tribute Call

After num coins: 4
After num actions: 97
After num cards: 410


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 16 **

Before num coins: 4
Before num actions: 97
Before num cards: 745


 Tribute Call

After num coins: 4
After num actions: 103
After num cards: 745


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 17 **

Before num coins: 4
Before num actions: 103
Before num cards: 130


 Tribute Call

After num coins: 4
After num actions: 109
After num cards: 130


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 18 **

Before num coins: 4
Before num actions: 109
Before num cards: 518


 Tribute Call

After num coins: 4
After num actions: 115
After num cards: 518


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 19 **

Before num coins: 4
Before num actions: 115
Before num cards: 219


 Tribute Call

After num coins: 4
After num actions: 121
After num cards: 219


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 20 **

Before num coins: 4
Before num actions: 121
Before num cards: 860


 Tribute Call

After num coins: 4
After num actions: 127
After num cards: 860


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 21 **

Before num coins: 4
Before num actions: 127
Before num cards: 871


 Tribute Call

After num coins: 4
After num actions: 133
After num cards: 871


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 22 **

Before num coins: 4
Before num actions: 133
Before num cards: 723


 Tribute Call

After num coins: 4
After num actions: 139
After num cards: 723


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 23 **

Before num coins: 4
Before num actions: 139
Before num cards: 641


 Tribute Call

After num coins: 4
After num actions: 145
After num cards: 641


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 24 **

Before num coins: 4
Before num actions: 145
Before num cards: 127


 Tribute Call

After num coins: 4
After num actions: 151
After num cards: 127


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 25 **

Before num coins: 4
Before num actions: 151
Before num cards: 779


 Tribute Call

After num coins: 4
After num actions: 157
After num cards: 779


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 26 **

Before num coins: 4
Before num actions: 157
Before num cards: 919


 Tribute Call

After num coins: 4
After num actions: 163
After num cards: 919


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 27 **

Before num coins: 4
Before num actions: 163
Before num cards: 112


 Tribute Call

After num coins: 4
After num actions: 169
After num cards: 112


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 28 **

Before num coins: 4
Before num actions: 169
Before num cards: 230


 Tribute Call

After num coins: 4
After num actions: 175
After num cards: 230


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 29 **

Before num coins: 4
Before num actions: 175
Before num cards: 451


 Tribute Call

After num coins: 4
After num actions: 181
After num cards: 451


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 30 **

Before num coins: 4
Before num actions: 181
Before num cards: 655


 Tribute Call

After num coins: 4
After num actions: 187
After num cards: 655


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 31 **

Before num coins: 4
Before num actions: 187
Before num cards: 97


 Tribute Call

After num coins: 4
After num actions: 193
After num cards: 97


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 32 **

Before num coins: 4
Before num actions: 193
Before num cards: 632


 Tribute Call

After num coins: 4
After num actions: 199
After num cards: 632


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 33 **

Before num coins: 4
Before num actions: 199
Before num cards: 706


 Tribute Call

After num coins: 4
After num actions: 205
After num cards: 706


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 34 **

Before num coins: 4
Before num actions: 205
Before num cards: 599


 Tribute Call

After num coins: 4
After num actions: 211
After num cards: 599


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 35 **

Before num coins: 4
Before num actions: 211
Before num cards: 946


 Tribute Call

After num coins: 4
After num actions: 217
After num cards: 946


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 36 **

Before num coins: 4
Before num actions: 217
Before num cards: 240


 Tribute Call

After num coins: 4
After num actions: 223
After num cards: 240


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 37 **

Before num coins: 4
Before num actions: 223
Before num cards: 614


 Tribute Call

After num coins: 4
After num actions: 229
After num cards: 614


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 38 **

Before num coins: 4
Before num actions: 229
Before num cards: 615


 Tribute Call

After num coins: 4
After num actions: 235
After num cards: 615


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 39 **

Before num coins: 4
Before num actions: 235
Before num cards: 584


 Tribute Call

After num coins: 4
After num actions: 241
After num cards: 584


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 40 **

Before num coins: 4
Before num actions: 241
Before num cards: 538


 Tribute Call

After num coins: 4
After num actions: 247
After num cards: 538


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 41 **

Before num coins: 4
Before num actions: 247
Before num cards: 764


 Tribute Call

After num coins: 4
After num actions: 253
After num cards: 764


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 42 **

Before num coins: 4
Before num actions: 253
Before num cards: 660


 Tribute Call

After num coins: 6
After num actions: 255
After num cards: 662


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 43 **

Before num coins: 6
Before num actions: 255
Before num cards: 415


 Tribute Call

After num coins: 6
After num actions: 261
After num cards: 415


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 44 **

Before num coins: 6
Before num actions: 261
Before num cards: 6


 Tribute Call

After num coins: 6
After num actions: 267
After num cards: 6


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 45 **

Before num coins: 6
Before num actions: 267
Before num cards: 429


 Tribute Call

After num coins: 6
After num actions: 273
After num cards: 429


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 46 **

Before num coins: 6
Before num actions: 273
Before num cards: 776


 Tribute Call

After num coins: 6
After num actions: 279
After num cards: 776


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 47 **

Before num coins: 6
Before num actions: 279
Before num cards: 386


 Tribute Call

After num coins: 6
After num actions: 285
After num cards: 386


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 48 **

Before num coins: 6
Before num actions: 285
Before num cards: 705


 Tribute Call

After num coins: 6
After num actions: 291
After num cards: 705


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 49 **

Before num coins: 6
Before num actions: 291
Before num cards: 507


 Tribute Call

After num coins: 6
After num actions: 297
After num cards: 507


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 50 **

Before num coins: 6
Before num actions: 297
Before num cards: 72


 Tribute Call

After num coins: 6
After num actions: 303
After num cards: 72


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 51 **

Before num coins: 6
Before num actions: 303
Before num cards: 456


 Tribute Call

After num coins: 6
After num actions: 309
After num cards: 456


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 52 **

Before num coins: 6
Before num actions: 309
Before num cards: 477


 Tribute Call

After num coins: 6
After num actions: 315
After num cards: 477


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 53 **

Before num coins: 6
Before num actions: 315
Before num cards: 810


 Tribute Call

After num coins: 6
After num actions: 321
After num cards: 810


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 54 **

Before num coins: 6
Before num actions: 321
Before num cards: 594


 Tribute Call

After num coins: 6
After num actions: 327
After num cards: 594


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 55 **

Before num coins: 6
Before num actions: 327
Before num cards: 275


 Tribute Call

After num coins: 6
After num actions: 333
After num cards: 275


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 56 **

Before num coins: 6
Before num actions: 333
Before num cards: 829


 Tribute Call

After num coins: 6
After num actions: 339
After num cards: 829


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 57 **

Before num coins: 6
Before num actions: 339
Before num cards: 231


 Tribute Call

After num coins: 6
After num actions: 345
After num cards: 231


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 58 **

Before num coins: 6
Before num actions: 345
Before num cards: 346


 Tribute Call

After num coins: 6
After num actions: 351
After num cards: 346


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 59 **

Before num coins: 6
Before num actions: 351
Before num cards: 698


 Tribute Call

After num coins: 6
After num actions: 357
After num cards: 698


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 60 **

Before num coins: 6
Before num actions: 357
Before num cards: 61


 Tribute Call

After num coins: 6
After num actions: 363
After num cards: 61


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 61 **

Before num coins: 6
Before num actions: 363
Before num cards: 678


 Tribute Call

After num coins: 6
After num actions: 369
After num cards: 678


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 62 **

Before num coins: 6
Before num actions: 369
Before num cards: 710


 Tribute Call

After num coins: 6
After num actions: 375
After num cards: 710


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 63 **

Before num coins: 6
Before num actions: 375
Before num cards: 265


 Tribute Call

After num coins: 6
After num actions: 381
After num cards: 265


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 64 **

Before num coins: 6
Before num actions: 381
Before num cards: 292


 Tribute Call

After num coins: 6
After num actions: 387
After num cards: 292


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 65 **

Before num coins: 6
Before num actions: 387
Before num cards: 499


 Tribute Call

After num coins: 6
After num actions: 393
After num cards: 499


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 66 **

Before num coins: 6
Before num actions: 393
Before num cards: 453


 Tribute Call

After num coins: 6
After num actions: 399
After num cards: 453


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 67 **

Before num coins: 6
Before num actions: 399
Before num cards: 212


 Tribute Call

After num coins: 6
After num actions: 405
After num cards: 212


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 68 **

Before num coins: 6
Before num actions: 405
Before num cards: 422


 Tribute Call

After num coins: 6
After num actions: 411
After num cards: 422


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 69 **

Before num coins: 6
Before num actions: 411
Before num cards: 206


 Tribute Call

After num coins: 6
After num actions: 417
After num cards: 206


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 70 **

Before num coins: 6
Before num actions: 417
Before num cards: 937


 Tribute Call

After num coins: 6
After num actions: 423
After num cards: 937


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 71 **

Before num coins: 6
Before num actions: 423
Before num cards: 89


 Tribute Call

After num coins: 6
After num actions: 429
After num cards: 89


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 72 **

Before num coins: 6
Before num actions: 429
Before num cards: 380


 Tribute Call

After num coins: 6
After num actions: 435
After num cards: 380


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 73 **

Before num coins: 6
Before num actions: 435
Before num cards: 567


 Tribute Call

After num coins: 6
After num actions: 441
After num cards: 567


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 74 **

Before num coins: 6
Before num actions: 441
Before num cards: 36


 Tribute Call

After num coins: 6
After num actions: 447
After num cards: 36


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 75 **

Before num coins: 6
Before num actions: 447
Before num cards: 96


 Tribute Call

After num coins: 6
After num actions: 453
After num cards: 96


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 76 **

Before num coins: 6
Before num actions: 453
Before num cards: 741


 Tribute Call

After num coins: 6
After num actions: 459
After num cards: 741


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 77 **

Before num coins: 6
Before num actions: 459
Before num cards: 477


 Tribute Call

After num coins: 6
After num actions: 465
After num cards: 477


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 78 **

Before num coins: 6
Before num actions: 465
Before num cards: 327


 Tribute Call

After num coins: 6
After num actions: 471
After num cards: 327


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 79 **

Before num coins: 6
Before num actions: 471
Before num cards: 876


 Tribute Call

After num coins: 6
After num actions: 477
After num cards: 876


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 80 **

Before num coins: 6
Before num actions: 477
Before num cards: 297


 Tribute Call

After num coins: 6
After num actions: 483
After num cards: 297


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 81 **

Before num coins: 6
Before num actions: 483
Before num cards: 855


 Tribute Call

After num coins: 6
After num actions: 489
After num cards: 855


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 82 **

Before num coins: 6
Before num actions: 489
Before num cards: 136


 Tribute Call

After num coins: 6
After num actions: 495
After num cards: 136


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 83 **

Before num coins: 6
Before num actions: 495
Before num cards: 18


 Tribute Call

After num coins: 6
After num actions: 501
After num cards: 18


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 84 **

Before num coins: 6
Before num actions: 501
Before num cards: 75


 Tribute Call

After num coins: 6
After num actions: 507
After num cards: 75


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 85 **

Before num coins: 6
Before num actions: 507
Before num cards: 230


 Tribute Call

After num coins: 6
After num actions: 513
After num cards: 230


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 86 **

Before num coins: 6
Before num actions: 513
Before num cards: 642


 Tribute Call

After num coins: 6
After num actions: 519
After num cards: 642


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 87 **

Before num coins: 6
Before num actions: 519
Before num cards: 28


 Tribute Call

After num coins: 6
After num actions: 525
After num cards: 28


Coins Test Passed
Actions Test Failed
Cards Test Passed

**Fuzz: 3**

test print k:
k[0] = 7
k[1] = 15
k[2] = 14
k[3] = 4
k[4] = 25
k[5] = 20
k[6] = 9
k[7] = 11
k[8] = 6
k[9] = 13


** Player: 0 **

Before num coins: 4
Before num actions: 1
Before num cards: 283


 Tribute Call

After num coins: 4
After num actions: 7
After num cards: 283


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 1 **

Before num coins: 4
Before num actions: 7
Before num cards: 273


 Tribute Call

After num coins: 4
After num actions: 13
After num cards: 273


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 2 **

Before num coins: 4
Before num actions: 13
Before num cards: 455


 Tribute Call

After num coins: 4
After num actions: 19
After num cards: 455


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 3 **

Before num coins: 4
Before num actions: 19
Before num cards: 700


 Tribute Call

After num coins: 4
After num actions: 25
After num cards: 700


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 4 **

Before num coins: 4
Before num actions: 25
Before num cards: 616


 Tribute Call

After num coins: 4
After num actions: 31
After num cards: 616


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 5 **

Before num coins: 4
Before num actions: 31
Before num cards: 234


 Tribute Call

After num coins: 4
After num actions: 37
After num cards: 234


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 6 **

Before num coins: 4
Before num actions: 37
Before num cards: 928


 Tribute Call

After num coins: 4
After num actions: 43
After num cards: 928


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 7 **

Before num coins: 4
Before num actions: 43
Before num cards: 298


 Tribute Call

After num coins: 4
After num actions: 49
After num cards: 298


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 8 **

Before num coins: 4
Before num actions: 49
Before num cards: 495


 Tribute Call

After num coins: 4
After num actions: 55
After num cards: 495


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 9 **

Before num coins: 4
Before num actions: 55
Before num cards: 469


 Tribute Call

After num coins: 4
After num actions: 61
After num cards: 469


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 10 **

Before num coins: 4
Before num actions: 61
Before num cards: 249


 Tribute Call

After num coins: 4
After num actions: 67
After num cards: 249


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 11 **

Before num coins: 4
Before num actions: 67
Before num cards: 297


 Tribute Call

After num coins: 4
After num actions: 73
After num cards: 297


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 12 **

Before num coins: 4
Before num actions: 73
Before num cards: 544


 Tribute Call

After num coins: 4
After num actions: 79
After num cards: 544


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 13 **

Before num coins: 4
Before num actions: 79
Before num cards: 420


 Tribute Call

After num coins: 4
After num actions: 83
After num cards: 422


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 14 **

Before num coins: 4
Before num actions: 83
Before num cards: 299


 Tribute Call

After num coins: 4
After num actions: 89
After num cards: 299


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 15 **

Before num coins: 4
Before num actions: 89
Before num cards: 771


 Tribute Call

After num coins: 4
After num actions: 95
After num cards: 771


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 16 **

Before num coins: 4
Before num actions: 95
Before num cards: 373


 Tribute Call

After num coins: 4
After num actions: 101
After num cards: 373


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 17 **

Before num coins: 4
Before num actions: 101
Before num cards: 941


 Tribute Call

After num coins: 4
After num actions: 107
After num cards: 941


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 18 **

Before num coins: 4
Before num actions: 107
Before num cards: 918


 Tribute Call

After num coins: 4
After num actions: 113
After num cards: 918


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 19 **

Before num coins: 4
Before num actions: 113
Before num cards: 451


 Tribute Call

After num coins: 4
After num actions: 119
After num cards: 451


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 20 **

Before num coins: 4
Before num actions: 119
Before num cards: 503


 Tribute Call

After num coins: 4
After num actions: 125
After num cards: 503


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 21 **

Before num coins: 4
Before num actions: 125
Before num cards: 52


 Tribute Call

After num coins: 4
After num actions: 131
After num cards: 52


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 22 **

Before num coins: 4
Before num actions: 131
Before num cards: 487


 Tribute Call

After num coins: 4
After num actions: 137
After num cards: 487


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 23 **

Before num coins: 4
Before num actions: 137
Before num cards: 939


 Tribute Call

After num coins: 4
After num actions: 143
After num cards: 939


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 24 **

Before num coins: 4
Before num actions: 143
Before num cards: 495


 Tribute Call

After num coins: 4
After num actions: 149
After num cards: 495


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 25 **

Before num coins: 4
Before num actions: 149
Before num cards: 932


 Tribute Call

After num coins: 4
After num actions: 155
After num cards: 932


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 26 **

Before num coins: 4
Before num actions: 155
Before num cards: 433


 Tribute Call

After num coins: 4
After num actions: 161
After num cards: 433


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 27 **

Before num coins: 4
Before num actions: 161
Before num cards: 599


 Tribute Call

After num coins: 4
After num actions: 167
After num cards: 599


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 28 **

Before num coins: 4
Before num actions: 167
Before num cards: 75


 Tribute Call

After num coins: 4
After num actions: 173
After num cards: 75


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 29 **

Before num coins: 4
Before num actions: 173
Before num cards: 480


 Tribute Call

After num coins: 4
After num actions: 179
After num cards: 480


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 30 **

Before num coins: 4
Before num actions: 179
Before num cards: 577


 Tribute Call

After num coins: 4
After num actions: 185
After num cards: 577


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 31 **

Before num coins: 4
Before num actions: 185
Before num cards: 332


 Tribute Call

After num coins: 4
After num actions: 191
After num cards: 332


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 32 **

Before num coins: 4
Before num actions: 191
Before num cards: 335


 Tribute Call

After num coins: 4
After num actions: 197
After num cards: 335


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 33 **

Before num coins: 4
Before num actions: 197
Before num cards: 925


 Tribute Call

After num coins: 4
After num actions: 203
After num cards: 925


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 34 **

Before num coins: 4
Before num actions: 203
Before num cards: 742


 Tribute Call

After num coins: 4
After num actions: 209
After num cards: 742


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 35 **

Before num coins: 4
Before num actions: 209
Before num cards: 703


 Tribute Call

After num coins: 4
After num actions: 215
After num cards: 703


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 36 **

Before num coins: 4
Before num actions: 215
Before num cards: 11


 Tribute Call

After num coins: 4
After num actions: 221
After num cards: 11


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 37 **

Before num coins: 4
Before num actions: 221
Before num cards: 27


 Tribute Call

After num coins: 4
After num actions: 227
After num cards: 27


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 38 **

Before num coins: 4
Before num actions: 227
Before num cards: 108


 Tribute Call

After num coins: 4
After num actions: 233
After num cards: 108


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 39 **

Before num coins: 4
Before num actions: 233
Before num cards: 540


 Tribute Call

After num coins: 4
After num actions: 239
After num cards: 540


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 40 **

Before num coins: 4
Before num actions: 239
Before num cards: 715


 Tribute Call

After num coins: 4
After num actions: 245
After num cards: 715


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 41 **

Before num coins: 4
Before num actions: 245
Before num cards: 856


 Tribute Call

After num coins: 4
After num actions: 251
After num cards: 856


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 42 **

Before num coins: 4
Before num actions: 251
Before num cards: 432


 Tribute Call

After num coins: 4
After num actions: 257
After num cards: 432


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 43 **

Before num coins: 4
Before num actions: 257
Before num cards: 534


 Tribute Call

After num coins: 4
After num actions: 263
After num cards: 534


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 44 **

Before num coins: 4
Before num actions: 263
Before num cards: 351


 Tribute Call

After num coins: 4
After num actions: 269
After num cards: 351


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 45 **

Before num coins: 4
Before num actions: 269
Before num cards: 191


 Tribute Call

After num coins: 4
After num actions: 275
After num cards: 191


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 46 **

Before num coins: 4
Before num actions: 275
Before num cards: 670


 Tribute Call

After num coins: 4
After num actions: 281
After num cards: 670


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 47 **

Before num coins: 4
Before num actions: 281
Before num cards: 85


 Tribute Call

After num coins: 4
After num actions: 287
After num cards: 85


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 48 **

Before num coins: 4
Before num actions: 287
Before num cards: 738


 Tribute Call

After num coins: 4
After num actions: 293
After num cards: 738


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 49 **

Before num coins: 4
Before num actions: 293
Before num cards: 48


 Tribute Call

After num coins: 4
After num actions: 299
After num cards: 48


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 50 **

Before num coins: 4
Before num actions: 299
Before num cards: 935


 Tribute Call

After num coins: 4
After num actions: 305
After num cards: 935


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 51 **

Before num coins: 4
Before num actions: 305
Before num cards: 974


 Tribute Call

After num coins: 4
After num actions: 311
After num cards: 974


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 52 **

Before num coins: 4
Before num actions: 311
Before num cards: 604


 Tribute Call

After num coins: 4
After num actions: 317
After num cards: 604


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 53 **

Before num coins: 4
Before num actions: 317
Before num cards: 448


 Tribute Call

After num coins: 4
After num actions: 323
After num cards: 448


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 54 **

Before num coins: 4
Before num actions: 323
Before num cards: 887


 Tribute Call

After num coins: 4
After num actions: 329
After num cards: 887


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 55 **

Before num coins: 4
Before num actions: 329
Before num cards: 356


 Tribute Call

After num coins: 4
After num actions: 335
After num cards: 356


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 56 **

Before num coins: 4
Before num actions: 335
Before num cards: 306


 Tribute Call

After num coins: 4
After num actions: 341
After num cards: 306


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 57 **

Before num coins: 4
Before num actions: 341
Before num cards: 838


 Tribute Call

After num coins: 4
After num actions: 347
After num cards: 838


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 58 **

Before num coins: 4
Before num actions: 347
Before num cards: 128


 Tribute Call

After num coins: 4
After num actions: 353
After num cards: 128


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 59 **

Before num coins: 4
Before num actions: 353
Before num cards: 3


 Tribute Call

After num coins: 4
After num actions: 359
After num cards: 3


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 60 **

Before num coins: 4
Before num actions: 359
Before num cards: 541


 Tribute Call

After num coins: 4
After num actions: 365
After num cards: 541


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 61 **

Before num coins: 4
Before num actions: 365
Before num cards: 67


 Tribute Call

After num coins: 4
After num actions: 371
After num cards: 67


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 62 **

Before num coins: 4
Before num actions: 371
Before num cards: 804


 Tribute Call

After num coins: 4
After num actions: 377
After num cards: 804


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 63 **

Before num coins: 4
Before num actions: 377
Before num cards: 746


 Tribute Call

After num coins: 4
After num actions: 383
After num cards: 746


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 64 **

Before num coins: 4
Before num actions: 383
Before num cards: 138


 Tribute Call

After num coins: 4
After num actions: 389
After num cards: 138


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 65 **

Before num coins: 4
Before num actions: 389
Before num cards: 632


 Tribute Call

After num coins: 4
After num actions: 395
After num cards: 632


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 66 **

Before num coins: 4
Before num actions: 395
Before num cards: 565


 Tribute Call

After num coins: 4
After num actions: 401
After num cards: 565


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 67 **

Before num coins: 4
Before num actions: 401
Before num cards: 341


 Tribute Call

After num coins: 4
After num actions: 407
After num cards: 341


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 68 **

Before num coins: 4
Before num actions: 407
Before num cards: 368


 Tribute Call

After num coins: 4
After num actions: 413
After num cards: 368


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 69 **

Before num coins: 4
Before num actions: 413
Before num cards: 873


 Tribute Call

After num coins: 4
After num actions: 419
After num cards: 873


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 70 **

Before num coins: 4
Before num actions: 419
Before num cards: 322


 Tribute Call

After num coins: 4
After num actions: 425
After num cards: 322


Coins Test Passed
Actions Test Failed
Cards Test Passed

**Fuzz: 4**

test print k:
k[0] = 6
k[1] = 11
k[2] = 15
k[3] = 26
k[4] = 20
k[5] = 19
k[6] = 14
k[7] = 10
k[8] = 1
k[9] = 22


** Player: 0 **

Before num coins: 4
Before num actions: 1
Before num cards: 550


 Tribute Call

After num coins: 4
After num actions: 7
After num cards: 550


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 1 **

Before num coins: 4
Before num actions: 7
Before num cards: 391


 Tribute Call

After num coins: 4
After num actions: 13
After num cards: 391


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 2 **

Before num coins: 4
Before num actions: 13
Before num cards: 897


 Tribute Call

After num coins: 4
After num actions: 19
After num cards: 897


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 3 **

Before num coins: 4
Before num actions: 19
Before num cards: 301


 Tribute Call

After num coins: 4
After num actions: 25
After num cards: 301


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 4 **

Before num coins: 4
Before num actions: 25
Before num cards: 383


 Tribute Call

After num coins: 4
After num actions: 31
After num cards: 383


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 5 **

Before num coins: 4
Before num actions: 31
Before num cards: 650


 Tribute Call

After num coins: 6
After num actions: 35
After num cards: 650


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 6 **

Before num coins: 6
Before num actions: 35
Before num cards: 706


 Tribute Call

After num coins: 6
After num actions: 41
After num cards: 706


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 7 **

Before num coins: 6
Before num actions: 41
Before num cards: 686


 Tribute Call

After num coins: 6
After num actions: 47
After num cards: 686


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 8 **

Before num coins: 6
Before num actions: 47
Before num cards: 911


 Tribute Call

After num coins: 6
After num actions: 53
After num cards: 911


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 9 **

Before num coins: 6
Before num actions: 53
Before num cards: 917


 Tribute Call

After num coins: 6
After num actions: 59
After num cards: 917


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 10 **

Before num coins: 6
Before num actions: 59
Before num cards: 283


 Tribute Call

After num coins: 6
After num actions: 65
After num cards: 283


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 11 **

Before num coins: 6
Before num actions: 65
Before num cards: 438


 Tribute Call

After num coins: 6
After num actions: 71
After num cards: 438


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 12 **

Before num coins: 6
Before num actions: 71
Before num cards: 843


 Tribute Call

After num coins: 6
After num actions: 77
After num cards: 843


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 13 **

Before num coins: 6
Before num actions: 77
Before num cards: 709


 Tribute Call

After num coins: 6
After num actions: 83
After num cards: 709


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 14 **

Before num coins: 6
Before num actions: 83
Before num cards: 260


 Tribute Call

After num coins: 6
After num actions: 89
After num cards: 260


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 15 **

Before num coins: 6
Before num actions: 89
Before num cards: 666


 Tribute Call

After num coins: 6
After num actions: 95
After num cards: 666


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 16 **

Before num coins: 6
Before num actions: 95
Before num cards: 933


 Tribute Call

After num coins: 6
After num actions: 101
After num cards: 933


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 17 **

Before num coins: 6
Before num actions: 101
Before num cards: 996


 Tribute Call

After num coins: 6
After num actions: 107
After num cards: 996


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 18 **

Before num coins: 6
Before num actions: 107
Before num cards: 307


 Tribute Call

After num coins: 6
After num actions: 113
After num cards: 307


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 19 **

Before num coins: 6
Before num actions: 113
Before num cards: 317


 Tribute Call

After num coins: 6
After num actions: 119
After num cards: 317


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 20 **

Before num coins: 6
Before num actions: 119
Before num cards: 600


 Tribute Call

After num coins: 6
After num actions: 125
After num cards: 600


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 21 **

Before num coins: 6
Before num actions: 125
Before num cards: 222


 Tribute Call

After num coins: 6
After num actions: 131
After num cards: 222


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 22 **

Before num coins: 6
Before num actions: 131
Before num cards: 7


 Tribute Call

After num coins: 6
After num actions: 137
After num cards: 7


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 23 **

Before num coins: 6
Before num actions: 137
Before num cards: 192


 Tribute Call

After num coins: 6
After num actions: 143
After num cards: 192


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 24 **

Before num coins: 6
Before num actions: 143
Before num cards: 680


 Tribute Call

After num coins: 6
After num actions: 149
After num cards: 680


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 25 **

Before num coins: 6
Before num actions: 149
Before num cards: 172


 Tribute Call

After num coins: 6
After num actions: 155
After num cards: 172


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 26 **

Before num coins: 6
Before num actions: 155
Before num cards: 398


 Tribute Call

After num coins: 6
After num actions: 161
After num cards: 398


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 27 **

Before num coins: 6
Before num actions: 161
Before num cards: 129


 Tribute Call

After num coins: 6
After num actions: 167
After num cards: 129


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 28 **

Before num coins: 6
Before num actions: 167
Before num cards: 461


 Tribute Call

After num coins: 6
After num actions: 173
After num cards: 461


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 29 **

Before num coins: 6
Before num actions: 173
Before num cards: 960


 Tribute Call

After num coins: 8
After num actions: 177
After num cards: 960


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 30 **

Before num coins: 8
Before num actions: 177
Before num cards: 441


 Tribute Call

After num coins: 8
After num actions: 183
After num cards: 441


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 31 **

Before num coins: 8
Before num actions: 183
Before num cards: 462


 Tribute Call

After num coins: 8
After num actions: 189
After num cards: 462


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 32 **

Before num coins: 8
Before num actions: 189
Before num cards: 393


 Tribute Call

After num coins: 8
After num actions: 195
After num cards: 393


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 33 **

Before num coins: 8
Before num actions: 195
Before num cards: 762


 Tribute Call

After num coins: 8
After num actions: 201
After num cards: 762


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 34 **

Before num coins: 8
Before num actions: 201
Before num cards: 684


 Tribute Call

After num coins: 8
After num actions: 207
After num cards: 684


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 35 **

Before num coins: 8
Before num actions: 207
Before num cards: 657


 Tribute Call

After num coins: 8
After num actions: 213
After num cards: 657


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 36 **

Before num coins: 8
Before num actions: 213
Before num cards: 838


 Tribute Call

After num coins: 8
After num actions: 219
After num cards: 838


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 37 **

Before num coins: 8
Before num actions: 219
Before num cards: 332


 Tribute Call

After num coins: 8
After num actions: 225
After num cards: 332


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 38 **

Before num coins: 8
Before num actions: 225
Before num cards: 413


 Tribute Call

After num coins: 8
After num actions: 231
After num cards: 413


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 39 **

Before num coins: 8
Before num actions: 231
Before num cards: 813


 Tribute Call

After num coins: 8
After num actions: 237
After num cards: 813


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 40 **

Before num coins: 8
Before num actions: 237
Before num cards: 551


 Tribute Call

After num coins: 8
After num actions: 243
After num cards: 551


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 41 **

Before num coins: 8
Before num actions: 243
Before num cards: 796


 Tribute Call

After num coins: 8
After num actions: 249
After num cards: 796


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 42 **

Before num coins: 8
Before num actions: 249
Before num cards: 573


 Tribute Call

After num coins: 8
After num actions: 255
After num cards: 573


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 43 **

Before num coins: 8
Before num actions: 255
Before num cards: 195


 Tribute Call

After num coins: 8
After num actions: 261
After num cards: 195


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 44 **

Before num coins: 8
Before num actions: 261
Before num cards: 686


 Tribute Call

After num coins: 8
After num actions: 267
After num cards: 686


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 45 **

Before num coins: 8
Before num actions: 267
Before num cards: 913


 Tribute Call

After num coins: 8
After num actions: 273
After num cards: 913


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 46 **

Before num coins: 8
Before num actions: 273
Before num cards: 574


 Tribute Call

After num coins: 8
After num actions: 279
After num cards: 574


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 47 **

Before num coins: 8
Before num actions: 279
Before num cards: 242


 Tribute Call

After num coins: 8
After num actions: 285
After num cards: 242


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 48 **

Before num coins: 8
Before num actions: 285
Before num cards: 827


 Tribute Call

After num coins: 8
After num actions: 291
After num cards: 827


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 49 **

Before num coins: 8
Before num actions: 291
Before num cards: 996


 Tribute Call

After num coins: 8
After num actions: 297
After num cards: 996


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 50 **

Before num coins: 8
Before num actions: 297
Before num cards: 87


 Tribute Call

After num coins: 8
After num actions: 303
After num cards: 87


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 51 **

Before num coins: 8
Before num actions: 303
Before num cards: 994


 Tribute Call

After num coins: 8
After num actions: 309
After num cards: 994


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 52 **

Before num coins: 8
Before num actions: 309
Before num cards: 200


 Tribute Call

After num coins: 8
After num actions: 315
After num cards: 200


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 53 **

Before num coins: 8
Before num actions: 315
Before num cards: 510


 Tribute Call

After num coins: 8
After num actions: 321
After num cards: 510


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 54 **

Before num coins: 8
Before num actions: 321
Before num cards: 120


 Tribute Call

After num coins: 8
After num actions: 327
After num cards: 120


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 55 **

Before num coins: 8
Before num actions: 327
Before num cards: 489


 Tribute Call

After num coins: 8
After num actions: 333
After num cards: 489


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 56 **

Before num coins: 8
Before num actions: 333
Before num cards: 205


 Tribute Call

After num coins: 8
After num actions: 339
After num cards: 205


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 57 **

Before num coins: 8
Before num actions: 339
Before num cards: 438


 Tribute Call

After num coins: 8
After num actions: 345
After num cards: 438


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 58 **

Before num coins: 8
Before num actions: 345
Before num cards: 297


 Tribute Call

After num coins: 8
After num actions: 351
After num cards: 297


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 59 **

Before num coins: 8
Before num actions: 351
Before num cards: 318


 Tribute Call

After num coins: 8
After num actions: 357
After num cards: 318


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 60 **

Before num coins: 8
Before num actions: 357
Before num cards: 410


 Tribute Call

After num coins: 10
After num actions: 361
After num cards: 410


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 61 **

Before num coins: 10
Before num actions: 361
Before num cards: 405


 Tribute Call

After num coins: 10
After num actions: 367
After num cards: 405


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 62 **

Before num coins: 10
Before num actions: 367
Before num cards: 66


 Tribute Call

After num coins: 10
After num actions: 373
After num cards: 66


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 63 **

Before num coins: 10
Before num actions: 373
Before num cards: 813


 Tribute Call

After num coins: 10
After num actions: 379
After num cards: 813


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 64 **

Before num coins: 10
Before num actions: 379
Before num cards: 169


 Tribute Call

After num coins: 10
After num actions: 385
After num cards: 169


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 65 **

Before num coins: 10
Before num actions: 385
Before num cards: 865


 Tribute Call

After num coins: 10
After num actions: 391
After num cards: 865


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 66 **

Before num coins: 10
Before num actions: 391
Before num cards: 427


 Tribute Call

After num coins: 10
After num actions: 397
After num cards: 427


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 67 **

Before num coins: 10
Before num actions: 397
Before num cards: 463


 Tribute Call

After num coins: 10
After num actions: 403
After num cards: 463


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 68 **

Before num coins: 10
Before num actions: 403
Before num cards: 412


 Tribute Call

After num coins: 10
After num actions: 409
After num cards: 412


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 69 **

Before num coins: 10
Before num actions: 409
Before num cards: 640


 Tribute Call

After num coins: 10
After num actions: 415
After num cards: 640


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 70 **

Before num coins: 10
Before num actions: 415
Before num cards: 373


 Tribute Call

After num coins: 10
After num actions: 421
After num cards: 373


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 71 **

Before num coins: 10
Before num actions: 421
Before num cards: 238


 Tribute Call

After num coins: 10
After num actions: 427
After num cards: 238


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 72 **

Before num coins: 10
Before num actions: 427
Before num cards: 4


 Tribute Call

After num coins: 10
After num actions: 433
After num cards: 4


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 73 **

Before num coins: 10
Before num actions: 433
Before num cards: 90


 Tribute Call

After num coins: 10
After num actions: 439
After num cards: 90


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 74 **

Before num coins: 10
Before num actions: 439
Before num cards: 254


 Tribute Call

After num coins: 10
After num actions: 445
After num cards: 254


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 75 **

Before num coins: 10
Before num actions: 445
Before num cards: 559


 Tribute Call

After num coins: 10
After num actions: 451
After num cards: 559


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 76 **

Before num coins: 10
Before num actions: 451
Before num cards: 730


 Tribute Call

After num coins: 10
After num actions: 457
After num cards: 730


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 77 **

Before num coins: 10
Before num actions: 457
Before num cards: 309


 Tribute Call

After num coins: 10
After num actions: 463
After num cards: 309


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 78 **

Before num coins: 10
Before num actions: 463
Before num cards: 846


 Tribute Call

After num coins: 10
After num actions: 469
After num cards: 846


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 79 **

Before num coins: 10
Before num actions: 469
Before num cards: 447


 Tribute Call

After num coins: 10
After num actions: 475
After num cards: 447


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 80 **

Before num coins: 10
Before num actions: 475
Before num cards: 946


 Tribute Call

After num coins: 10
After num actions: 481
After num cards: 946


Coins Test Failed
Actions Test Failed
Cards Test Passed

**Fuzz: 5**

test print k:
k[0] = 26
k[1] = 7
k[2] = 1
k[3] = 13
k[4] = 0
k[5] = 25
k[6] = 19
k[7] = 9
k[8] = 16
k[9] = 18


** Player: 0 **

Before num coins: 4
Before num actions: 1
Before num cards: 360


 Tribute Call

After num coins: 4
After num actions: 7
After num cards: 360


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 1 **

Before num coins: 4
Before num actions: 7
Before num cards: 334


 Tribute Call

After num coins: 4
After num actions: 13
After num cards: 334


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 2 **

Before num coins: 4
Before num actions: 13
Before num cards: 529


 Tribute Call

After num coins: 4
After num actions: 19
After num cards: 529


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 3 **

Before num coins: 4
Before num actions: 19
Before num cards: 147


 Tribute Call

After num coins: 4
After num actions: 25
After num cards: 147


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 4 **

Before num coins: 4
Before num actions: 25
Before num cards: 862


 Tribute Call

After num coins: 4
After num actions: 31
After num cards: 862


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 5 **

Before num coins: 4
Before num actions: 31
Before num cards: 109


 Tribute Call

After num coins: 4
After num actions: 37
After num cards: 109


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 6 **

Before num coins: 4
Before num actions: 37
Before num cards: 826


 Tribute Call

After num coins: 4
After num actions: 43
After num cards: 826


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 7 **

Before num coins: 4
Before num actions: 43
Before num cards: 369


 Tribute Call

After num coins: 6
After num actions: 45
After num cards: 371


Coins Test Failed
Actions Test Passed
Cards Test Failed


** Player: 8 **

Before num coins: 6
Before num actions: 45
Before num cards: 290


 Tribute Call

After num coins: 6
After num actions: 51
After num cards: 290


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 9 **

Before num coins: 6
Before num actions: 51
Before num cards: 901


 Tribute Call

After num coins: 6
After num actions: 57
After num cards: 901


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 10 **

Before num coins: 6
Before num actions: 57
Before num cards: 675


 Tribute Call

After num coins: 6
After num actions: 63
After num cards: 675


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 11 **

Before num coins: 6
Before num actions: 63
Before num cards: 126


 Tribute Call

After num coins: 6
After num actions: 69
After num cards: 126


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 12 **

Before num coins: 6
Before num actions: 69
Before num cards: 396


 Tribute Call

After num coins: 6
After num actions: 75
After num cards: 396


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 13 **

Before num coins: 6
Before num actions: 75
Before num cards: 165


 Tribute Call

After num coins: 6
After num actions: 81
After num cards: 165


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 14 **

Before num coins: 6
Before num actions: 81
Before num cards: 558


 Tribute Call

After num coins: 6
After num actions: 87
After num cards: 558


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 15 **

Before num coins: 6
Before num actions: 87
Before num cards: 975


 Tribute Call

After num coins: 6
After num actions: 93
After num cards: 975


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 16 **

Before num coins: 6
Before num actions: 93
Before num cards: 554


 Tribute Call

After num coins: 6
After num actions: 99
After num cards: 554


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 17 **

Before num coins: 6
Before num actions: 99
Before num cards: 393


 Tribute Call

After num coins: 6
After num actions: 105
After num cards: 393


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 18 **

Before num coins: 6
Before num actions: 105
Before num cards: 325


 Tribute Call

After num coins: 6
After num actions: 111
After num cards: 325


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 19 **

Before num coins: 6
Before num actions: 111
Before num cards: 923


 Tribute Call

After num coins: 6
After num actions: 117
After num cards: 923


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 20 **

Before num coins: 6
Before num actions: 117
Before num cards: 378


 Tribute Call

After num coins: 6
After num actions: 123
After num cards: 378


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 21 **

Before num coins: 6
Before num actions: 123
Before num cards: 725


 Tribute Call

After num coins: 6
After num actions: 129
After num cards: 725


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 22 **

Before num coins: 6
Before num actions: 129
Before num cards: 706


 Tribute Call

After num coins: 6
After num actions: 135
After num cards: 706


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 23 **

Before num coins: 6
Before num actions: 135
Before num cards: 429


 Tribute Call

After num coins: 6
After num actions: 141
After num cards: 429


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 24 **

Before num coins: 6
Before num actions: 141
Before num cards: 363


 Tribute Call

After num coins: 6
After num actions: 147
After num cards: 363


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 25 **

Before num coins: 6
Before num actions: 147
Before num cards: 101


 Tribute Call

After num coins: 6
After num actions: 153
After num cards: 101


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 26 **

Before num coins: 6
Before num actions: 153
Before num cards: 369


 Tribute Call

After num coins: 6
After num actions: 159
After num cards: 369


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 27 **

Before num coins: 6
Before num actions: 159
Before num cards: 79


 Tribute Call

After num coins: 6
After num actions: 165
After num cards: 79


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 28 **

Before num coins: 6
Before num actions: 165
Before num cards: 893


 Tribute Call

After num coins: 6
After num actions: 171
After num cards: 893


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 29 **

Before num coins: 6
Before num actions: 171
Before num cards: 624


 Tribute Call

After num coins: 6
After num actions: 177
After num cards: 624


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 30 **

Before num coins: 6
Before num actions: 177
Before num cards: 261


 Tribute Call

After num coins: 6
After num actions: 183
After num cards: 261


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 31 **

Before num coins: 6
Before num actions: 183
Before num cards: 180


 Tribute Call

After num coins: 6
After num actions: 189
After num cards: 180


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 32 **

Before num coins: 6
Before num actions: 189
Before num cards: 278


 Tribute Call

After num coins: 6
After num actions: 195
After num cards: 278


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 33 **

Before num coins: 6
Before num actions: 195
Before num cards: 212


 Tribute Call

After num coins: 8
After num actions: 199
After num cards: 212


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 34 **

Before num coins: 8
Before num actions: 199
Before num cards: 978


 Tribute Call

After num coins: 8
After num actions: 205
After num cards: 978


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 35 **

Before num coins: 8
Before num actions: 205
Before num cards: 613


 Tribute Call

After num coins: 8
After num actions: 211
After num cards: 613


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 36 **

Before num coins: 8
Before num actions: 211
Before num cards: 710


 Tribute Call

After num coins: 8
After num actions: 217
After num cards: 710


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 37 **

Before num coins: 8
Before num actions: 217
Before num cards: 545


 Tribute Call

After num coins: 8
After num actions: 223
After num cards: 545


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 38 **

Before num coins: 8
Before num actions: 223
Before num cards: 744


 Tribute Call

After num coins: 8
After num actions: 229
After num cards: 744


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 39 **

Before num coins: 8
Before num actions: 229
Before num cards: 370


 Tribute Call

After num coins: 8
After num actions: 235
After num cards: 370


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 40 **

Before num coins: 8
Before num actions: 235
Before num cards: 631


 Tribute Call

After num coins: 8
After num actions: 241
After num cards: 631


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 41 **

Before num coins: 8
Before num actions: 241
Before num cards: 191


 Tribute Call

After num coins: 8
After num actions: 247
After num cards: 191


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 42 **

Before num coins: 8
Before num actions: 247
Before num cards: 96


 Tribute Call

After num coins: 8
After num actions: 253
After num cards: 96


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 43 **

Before num coins: 8
Before num actions: 253
Before num cards: 751


 Tribute Call

After num coins: 8
After num actions: 259
After num cards: 751


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 44 **

Before num coins: 8
Before num actions: 259
Before num cards: 35


 Tribute Call

After num coins: 8
After num actions: 265
After num cards: 35


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 45 **

Before num coins: 8
Before num actions: 265
Before num cards: 57


 Tribute Call

After num coins: 8
After num actions: 271
After num cards: 57


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 46 **

Before num coins: 8
Before num actions: 271
Before num cards: 986


 Tribute Call

After num coins: 8
After num actions: 277
After num cards: 986


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 47 **

Before num coins: 8
Before num actions: 277
Before num cards: 147


 Tribute Call

After num coins: 10
After num actions: 279
After num cards: 149


Coins Test Failed
Actions Test Passed
Cards Test Failed


** Player: 48 **

Before num coins: 10
Before num actions: 279
Before num cards: 938


 Tribute Call

After num coins: 10
After num actions: 285
After num cards: 938


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 49 **

Before num coins: 10
Before num actions: 285
Before num cards: 653


 Tribute Call

After num coins: 10
After num actions: 291
After num cards: 653


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 50 **

Before num coins: 10
Before num actions: 291
Before num cards: 899


 Tribute Call

After num coins: 10
After num actions: 297
After num cards: 899


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 51 **

Before num coins: 10
Before num actions: 297
Before num cards: 560


 Tribute Call

After num coins: 10
After num actions: 303
After num cards: 560


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 52 **

Before num coins: 10
Before num actions: 303
Before num cards: 635


 Tribute Call

After num coins: 10
After num actions: 309
After num cards: 635


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 53 **

Before num coins: 10
Before num actions: 309
Before num cards: 918


 Tribute Call

After num coins: 10
After num actions: 315
After num cards: 918


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 54 **

Before num coins: 10
Before num actions: 315
Before num cards: 781


 Tribute Call

After num coins: 10
After num actions: 321
After num cards: 781


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 55 **

Before num coins: 10
Before num actions: 321
Before num cards: 841


 Tribute Call

After num coins: 10
After num actions: 327
After num cards: 841


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 56 **

Before num coins: 10
Before num actions: 327
Before num cards: 800


 Tribute Call

After num coins: 10
After num actions: 333
After num cards: 800


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 57 **

Before num coins: 10
Before num actions: 333
Before num cards: 577


 Tribute Call

After num coins: 10
After num actions: 339
After num cards: 577


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 58 **

Before num coins: 10
Before num actions: 339
Before num cards: 576


 Tribute Call

After num coins: 10
After num actions: 345
After num cards: 576


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 59 **

Before num coins: 10
Before num actions: 345
Before num cards: 886


 Tribute Call

After num coins: 10
After num actions: 351
After num cards: 886


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 60 **

Before num coins: 10
Before num actions: 351
Before num cards: 978


 Tribute Call

After num coins: 10
After num actions: 357
After num cards: 978


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 61 **

Before num coins: 10
Before num actions: 357
Before num cards: 372


 Tribute Call

After num coins: 10
After num actions: 363
After num cards: 372


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 62 **

Before num coins: 10
Before num actions: 363
Before num cards: 336


 Tribute Call

After num coins: 10
After num actions: 369
After num cards: 336


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 63 **

Before num coins: 10
Before num actions: 369
Before num cards: 198


 Tribute Call

After num coins: 10
After num actions: 375
After num cards: 198


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 64 **

Before num coins: 10
Before num actions: 375
Before num cards: 814


 Tribute Call

After num coins: 10
After num actions: 381
After num cards: 814


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 65 **

Before num coins: 10
Before num actions: 381
Before num cards: 906


 Tribute Call

After num coins: 10
After num actions: 387
After num cards: 906


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 66 **

Before num coins: 10
Before num actions: 387
Before num cards: 153


 Tribute Call

After num coins: 10
After num actions: 393
After num cards: 153


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 67 **

Before num coins: 10
Before num actions: 393
Before num cards: 431


 Tribute Call

After num coins: 10
After num actions: 399
After num cards: 431


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 68 **

Before num coins: 10
Before num actions: 399
Before num cards: 52


 Tribute Call

After num coins: 10
After num actions: 405
After num cards: 52


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 69 **

Before num coins: 10
Before num actions: 405
Before num cards: 910


 Tribute Call

After num coins: 10
After num actions: 411
After num cards: 910


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 70 **

Before num coins: 10
Before num actions: 411
Before num cards: 289


 Tribute Call

After num coins: 10
After num actions: 417
After num cards: 289


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 71 **

Before num coins: 10
Before num actions: 417
Before num cards: 938


 Tribute Call

After num coins: 10
After num actions: 423
After num cards: 938


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 72 **

Before num coins: 10
Before num actions: 423
Before num cards: 126


 Tribute Call

After num coins: 10
After num actions: 429
After num cards: 126


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 73 **

Before num coins: 10
Before num actions: 429
Before num cards: 60


 Tribute Call

After num coins: 10
After num actions: 435
After num cards: 60


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 74 **

Before num coins: 10
Before num actions: 435
Before num cards: 555


 Tribute Call

After num coins: 10
After num actions: 441
After num cards: 555


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 75 **

Before num coins: 10
Before num actions: 441
Before num cards: 371


 Tribute Call

After num coins: 10
After num actions: 447
After num cards: 371


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 76 **

Before num coins: 10
Before num actions: 447
Before num cards: 377


 Tribute Call

After num coins: 10
After num actions: 453
After num cards: 377


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 77 **

Before num coins: 10
Before num actions: 453
Before num cards: 804


 Tribute Call

After num coins: 10
After num actions: 459
After num cards: 804


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 78 **

Before num coins: 10
Before num actions: 459
Before num cards: 971


 Tribute Call

After num coins: 10
After num actions: 465
After num cards: 971


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 79 **

Before num coins: 10
Before num actions: 465
Before num cards: 853


 Tribute Call

After num coins: 10
After num actions: 471
After num cards: 853


Coins Test Passed
Actions Test Failed
Cards Test Passed

**Fuzz: 6**

test print k:
k[0] = 5
k[1] = 2
k[2] = 13
k[3] = 11
k[4] = 18
k[5] = 21
k[6] = 22
k[7] = 4
k[8] = 16
k[9] = 24


** Player: 0 **

Before num coins: 4
Before num actions: 1
Before num cards: 785


 Tribute Call

After num coins: 4
After num actions: 7
After num cards: 785


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 1 **

Before num coins: 4
Before num actions: 7
Before num cards: 577


 Tribute Call

After num coins: 4
After num actions: 13
After num cards: 577


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 2 **

Before num coins: 4
Before num actions: 13
Before num cards: 544


 Tribute Call

After num coins: 4
After num actions: 19
After num cards: 544


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 3 **

Before num coins: 4
Before num actions: 19
Before num cards: 937


 Tribute Call

After num coins: 4
After num actions: 25
After num cards: 937


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 4 **

Before num coins: 4
Before num actions: 25
Before num cards: 271


 Tribute Call

After num coins: 4
After num actions: 31
After num cards: 271


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 5 **

Before num coins: 4
Before num actions: 31
Before num cards: 430


 Tribute Call

After num coins: 4
After num actions: 37
After num cards: 430


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 6 **

Before num coins: 4
Before num actions: 37
Before num cards: 426


 Tribute Call

After num coins: 4
After num actions: 43
After num cards: 426


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 7 **

Before num coins: 4
Before num actions: 43
Before num cards: 972


 Tribute Call

After num coins: 4
After num actions: 49
After num cards: 972


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 8 **

Before num coins: 4
Before num actions: 49
Before num cards: 345


 Tribute Call

After num coins: 4
After num actions: 55
After num cards: 345


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 9 **

Before num coins: 4
Before num actions: 55
Before num cards: 821


 Tribute Call

After num coins: 4
After num actions: 61
After num cards: 821


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 10 **

Before num coins: 4
Before num actions: 61
Before num cards: 884


 Tribute Call

After num coins: 4
After num actions: 67
After num cards: 884


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 11 **

Before num coins: 4
Before num actions: 67
Before num cards: 753


 Tribute Call

After num coins: 4
After num actions: 73
After num cards: 753


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 12 **

Before num coins: 4
Before num actions: 73
Before num cards: 705


 Tribute Call

After num coins: 4
After num actions: 79
After num cards: 705


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 13 **

Before num coins: 4
Before num actions: 79
Before num cards: 433


 Tribute Call

After num coins: 4
After num actions: 85
After num cards: 433


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 14 **

Before num coins: 4
Before num actions: 85
Before num cards: 706


 Tribute Call

After num coins: 4
After num actions: 91
After num cards: 706


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 15 **

Before num coins: 4
Before num actions: 91
Before num cards: 256


 Tribute Call

After num coins: 4
After num actions: 97
After num cards: 256


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 16 **

Before num coins: 4
Before num actions: 97
Before num cards: 292


 Tribute Call

After num coins: 4
After num actions: 103
After num cards: 292


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 17 **

Before num coins: 4
Before num actions: 103
Before num cards: 908


 Tribute Call

After num coins: 4
After num actions: 109
After num cards: 908


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 18 **

Before num coins: 4
Before num actions: 109
Before num cards: 49


 Tribute Call

After num coins: 4
After num actions: 115
After num cards: 49


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 19 **

Before num coins: 4
Before num actions: 115
Before num cards: 947


 Tribute Call

After num coins: 4
After num actions: 121
After num cards: 947


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 20 **

Before num coins: 4
Before num actions: 121
Before num cards: 61


 Tribute Call

After num coins: 4
After num actions: 127
After num cards: 61


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 21 **

Before num coins: 4
Before num actions: 127
Before num cards: 972


 Tribute Call

After num coins: 4
After num actions: 133
After num cards: 972


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 22 **

Before num coins: 4
Before num actions: 133
Before num cards: 566


 Tribute Call

After num coins: 6
After num actions: 137
After num cards: 566


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 23 **

Before num coins: 6
Before num actions: 137
Before num cards: 625


 Tribute Call

After num coins: 6
After num actions: 143
After num cards: 625


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 24 **

Before num coins: 6
Before num actions: 143
Before num cards: 377


 Tribute Call

After num coins: 6
After num actions: 149
After num cards: 377


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 25 **

Before num coins: 6
Before num actions: 149
Before num cards: 683


 Tribute Call

After num coins: 6
After num actions: 155
After num cards: 683


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 26 **

Before num coins: 6
Before num actions: 155
Before num cards: 63


 Tribute Call

After num coins: 6
After num actions: 161
After num cards: 63


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 27 **

Before num coins: 6
Before num actions: 161
Before num cards: 63


 Tribute Call

After num coins: 6
After num actions: 167
After num cards: 63


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 28 **

Before num coins: 6
Before num actions: 167
Before num cards: 419


 Tribute Call

After num coins: 6
After num actions: 173
After num cards: 419


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 29 **

Before num coins: 6
Before num actions: 173
Before num cards: 139


 Tribute Call

After num coins: 6
After num actions: 179
After num cards: 139


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 30 **

Before num coins: 6
Before num actions: 179
Before num cards: 795


 Tribute Call

After num coins: 6
After num actions: 185
After num cards: 795


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 31 **

Before num coins: 6
Before num actions: 185
Before num cards: 591


 Tribute Call

After num coins: 6
After num actions: 191
After num cards: 591


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 32 **

Before num coins: 6
Before num actions: 191
Before num cards: 732


 Tribute Call

After num coins: 6
After num actions: 197
After num cards: 732


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 33 **

Before num coins: 6
Before num actions: 197
Before num cards: 545


 Tribute Call

After num coins: 6
After num actions: 203
After num cards: 545


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 34 **

Before num coins: 6
Before num actions: 203
Before num cards: 245


 Tribute Call

After num coins: 6
After num actions: 209
After num cards: 245


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 35 **

Before num coins: 6
Before num actions: 209
Before num cards: 867


 Tribute Call

After num coins: 6
After num actions: 215
After num cards: 867


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 36 **

Before num coins: 6
Before num actions: 215
Before num cards: 377


 Tribute Call

After num coins: 6
After num actions: 221
After num cards: 377


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 37 **

Before num coins: 6
Before num actions: 221
Before num cards: 982


 Tribute Call

After num coins: 6
After num actions: 227
After num cards: 982


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 38 **

Before num coins: 6
Before num actions: 227
Before num cards: 389


 Tribute Call

After num coins: 6
After num actions: 233
After num cards: 389


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 39 **

Before num coins: 6
Before num actions: 233
Before num cards: 346


 Tribute Call

After num coins: 6
After num actions: 239
After num cards: 346


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 40 **

Before num coins: 6
Before num actions: 239
Before num cards: 638


 Tribute Call

After num coins: 6
After num actions: 245
After num cards: 638


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 41 **

Before num coins: 6
Before num actions: 245
Before num cards: 438


 Tribute Call

After num coins: 6
After num actions: 251
After num cards: 438


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 42 **

Before num coins: 6
Before num actions: 251
Before num cards: 375


 Tribute Call

After num coins: 8
After num actions: 255
After num cards: 375


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 43 **

Before num coins: 8
Before num actions: 255
Before num cards: 873


 Tribute Call

After num coins: 8
After num actions: 261
After num cards: 873


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 44 **

Before num coins: 8
Before num actions: 261
Before num cards: 122


 Tribute Call

After num coins: 8
After num actions: 267
After num cards: 122


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 45 **

Before num coins: 8
Before num actions: 267
Before num cards: 66


 Tribute Call

After num coins: 8
After num actions: 273
After num cards: 66


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 46 **

Before num coins: 8
Before num actions: 273
Before num cards: 318


 Tribute Call

After num coins: 8
After num actions: 279
After num cards: 318


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 47 **

Before num coins: 8
Before num actions: 279
Before num cards: 274


 Tribute Call

After num coins: 8
After num actions: 285
After num cards: 274


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 48 **

Before num coins: 8
Before num actions: 285
Before num cards: 508


 Tribute Call

After num coins: 8
After num actions: 291
After num cards: 508


Coins Test Passed
Actions Test Failed
Cards Test Failed

**Fuzz: 7**

test print k:
k[0] = 8
k[1] = 1
k[2] = 25
k[3] = 19
k[4] = 17
k[5] = 3
k[6] = 23
k[7] = 10
k[8] = 15
k[9] = 22


** Player: 0 **

Before num coins: 4
Before num actions: 1
Before num cards: 147


 Tribute Call

After num coins: 4
After num actions: 7
After num cards: 147


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 1 **

Before num coins: 4
Before num actions: 7
Before num cards: 733


 Tribute Call

After num coins: 4
After num actions: 13
After num cards: 733


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 2 **

Before num coins: 4
Before num actions: 13
Before num cards: 529


 Tribute Call

After num coins: 4
After num actions: 19
After num cards: 529


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 3 **

Before num coins: 4
Before num actions: 19
Before num cards: 320


 Tribute Call

After num coins: 4
After num actions: 25
After num cards: 320


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 4 **

Before num coins: 4
Before num actions: 25
Before num cards: 577


 Tribute Call

After num coins: 4
After num actions: 31
After num cards: 577


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 5 **

Before num coins: 4
Before num actions: 31
Before num cards: 294


 Tribute Call

After num coins: 4
After num actions: 37
After num cards: 294


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 6 **

Before num coins: 4
Before num actions: 37
Before num cards: 893


 Tribute Call

After num coins: 4
After num actions: 43
After num cards: 893


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 7 **

Before num coins: 4
Before num actions: 43
Before num cards: 793


 Tribute Call

After num coins: 4
After num actions: 49
After num cards: 793


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 8 **

Before num coins: 4
Before num actions: 49
Before num cards: 137


 Tribute Call

After num coins: 4
After num actions: 55
After num cards: 137


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 9 **

Before num coins: 4
Before num actions: 55
Before num cards: 368


 Tribute Call

After num coins: 4
After num actions: 61
After num cards: 368


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 10 **

Before num coins: 4
Before num actions: 61
Before num cards: 196


 Tribute Call

After num coins: 4
After num actions: 67
After num cards: 196


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 11 **

Before num coins: 4
Before num actions: 67
Before num cards: 12


 Tribute Call

After num coins: 4
After num actions: 73
After num cards: 12


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 12 **

Before num coins: 4
Before num actions: 73
Before num cards: 935


 Tribute Call

After num coins: 4
After num actions: 79
After num cards: 935


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 13 **

Before num coins: 4
Before num actions: 79
Before num cards: 968


 Tribute Call

After num coins: 4
After num actions: 85
After num cards: 968


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 14 **

Before num coins: 4
Before num actions: 85
Before num cards: 449


 Tribute Call

After num coins: 4
After num actions: 89
After num cards: 451


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 15 **

Before num coins: 4
Before num actions: 89
Before num cards: 364


 Tribute Call

After num coins: 4
After num actions: 95
After num cards: 364


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 16 **

Before num coins: 4
Before num actions: 95
Before num cards: 277


 Tribute Call

After num coins: 4
After num actions: 101
After num cards: 277


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 17 **

Before num coins: 4
Before num actions: 101
Before num cards: 730


 Tribute Call

After num coins: 4
After num actions: 107
After num cards: 730


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 18 **

Before num coins: 4
Before num actions: 107
Before num cards: 104


 Tribute Call

After num coins: 4
After num actions: 113
After num cards: 104


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 19 **

Before num coins: 4
Before num actions: 113
Before num cards: 441


 Tribute Call

After num coins: 4
After num actions: 119
After num cards: 441


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 20 **

Before num coins: 4
Before num actions: 119
Before num cards: 42


 Tribute Call

After num coins: 4
After num actions: 125
After num cards: 42


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 21 **

Before num coins: 4
Before num actions: 125
Before num cards: 909


 Tribute Call

After num coins: 4
After num actions: 131
After num cards: 909


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 22 **

Before num coins: 4
Before num actions: 131
Before num cards: 436


 Tribute Call

After num coins: 4
After num actions: 137
After num cards: 436


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 23 **

Before num coins: 4
Before num actions: 137
Before num cards: 897


 Tribute Call

After num coins: 4
After num actions: 143
After num cards: 897


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 24 **

Before num coins: 4
Before num actions: 143
Before num cards: 494


 Tribute Call

After num coins: 4
After num actions: 149
After num cards: 494


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 25 **

Before num coins: 4
Before num actions: 149
Before num cards: 213


 Tribute Call

After num coins: 4
After num actions: 155
After num cards: 213


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 26 **

Before num coins: 4
Before num actions: 155
Before num cards: 576


 Tribute Call

After num coins: 4
After num actions: 161
After num cards: 576


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 27 **

Before num coins: 4
Before num actions: 161
Before num cards: 737


 Tribute Call

After num coins: 4
After num actions: 167
After num cards: 737


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 28 **

Before num coins: 4
Before num actions: 167
Before num cards: 152


 Tribute Call

After num coins: 4
After num actions: 173
After num cards: 152


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 29 **

Before num coins: 4
Before num actions: 173
Before num cards: 738


 Tribute Call

After num coins: 4
After num actions: 179
After num cards: 738


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 30 **

Before num coins: 4
Before num actions: 179
Before num cards: 161


 Tribute Call

After num coins: 4
After num actions: 185
After num cards: 161


Coins Test Passed
Actions Test Failed
Cards Test Failed

**Fuzz: 8**

test print k:
k[0] = 15
k[1] = 6
k[2] = 1
k[3] = 19
k[4] = 17
k[5] = 16
k[6] = 10
k[7] = 14
k[8] = 21
k[9] = 3


** Player: 0 **

Before num coins: 4
Before num actions: 1
Before num cards: 492


 Tribute Call

After num coins: 4
After num actions: 7
After num cards: 492


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 1 **

Before num coins: 4
Before num actions: 7
Before num cards: 191


 Tribute Call

After num coins: 4
After num actions: 13
After num cards: 191


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 2 **

Before num coins: 4
Before num actions: 13
Before num cards: 535


 Tribute Call

After num coins: 4
After num actions: 19
After num cards: 535


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 3 **

Before num coins: 4
Before num actions: 19
Before num cards: 494


 Tribute Call

After num coins: 4
After num actions: 25
After num cards: 494


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 4 **

Before num coins: 4
Before num actions: 25
Before num cards: 44


 Tribute Call

After num coins: 4
After num actions: 31
After num cards: 44


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 5 **

Before num coins: 4
Before num actions: 31
Before num cards: 19


 Tribute Call

After num coins: 4
After num actions: 37
After num cards: 19


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 6 **

Before num coins: 4
Before num actions: 37
Before num cards: 895


 Tribute Call

After num coins: 4
After num actions: 43
After num cards: 895


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 7 **

Before num coins: 4
Before num actions: 43
Before num cards: 640


 Tribute Call

After num coins: 4
After num actions: 49
After num cards: 640


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 8 **

Before num coins: 4
Before num actions: 49
Before num cards: 930


 Tribute Call

After num coins: 4
After num actions: 55
After num cards: 930


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 9 **

Before num coins: 4
Before num actions: 55
Before num cards: 349


 Tribute Call

After num coins: 4
After num actions: 61
After num cards: 349


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 10 **

Before num coins: 4
Before num actions: 61
Before num cards: 559


 Tribute Call

After num coins: 6
After num actions: 65
After num cards: 559


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 11 **

Before num coins: 6
Before num actions: 65
Before num cards: 579


 Tribute Call

After num coins: 6
After num actions: 71
After num cards: 579


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 12 **

Before num coins: 6
Before num actions: 71
Before num cards: 884


 Tribute Call

After num coins: 6
After num actions: 77
After num cards: 884


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 13 **

Before num coins: 6
Before num actions: 77
Before num cards: 156


 Tribute Call

After num coins: 6
After num actions: 83
After num cards: 156


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 14 **

Before num coins: 6
Before num actions: 83
Before num cards: 235


 Tribute Call

After num coins: 6
After num actions: 89
After num cards: 235


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 15 **

Before num coins: 6
Before num actions: 89
Before num cards: 103


 Tribute Call

After num coins: 6
After num actions: 95
After num cards: 103


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 16 **

Before num coins: 6
Before num actions: 95
Before num cards: 797


 Tribute Call

After num coins: 6
After num actions: 101
After num cards: 797


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 17 **

Before num coins: 6
Before num actions: 101
Before num cards: 374


 Tribute Call

After num coins: 6
After num actions: 107
After num cards: 374


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 18 **

Before num coins: 6
Before num actions: 107
Before num cards: 62


 Tribute Call

After num coins: 6
After num actions: 113
After num cards: 62


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 19 **

Before num coins: 6
Before num actions: 113
Before num cards: 584


 Tribute Call

After num coins: 6
After num actions: 119
After num cards: 584


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 20 **

Before num coins: 6
Before num actions: 119
Before num cards: 433


 Tribute Call

After num coins: 6
After num actions: 125
After num cards: 433


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 21 **

Before num coins: 6
Before num actions: 125
Before num cards: 117


 Tribute Call

After num coins: 6
After num actions: 131
After num cards: 117


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 22 **

Before num coins: 6
Before num actions: 131
Before num cards: 941


 Tribute Call

After num coins: 6
After num actions: 137
After num cards: 941


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 23 **

Before num coins: 6
Before num actions: 137
Before num cards: 514


 Tribute Call

After num coins: 6
After num actions: 143
After num cards: 514


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 24 **

Before num coins: 6
Before num actions: 143
Before num cards: 478


 Tribute Call

After num coins: 6
After num actions: 149
After num cards: 478


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 25 **

Before num coins: 6
Before num actions: 149
Before num cards: 362


 Tribute Call

After num coins: 6
After num actions: 155
After num cards: 362


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 26 **

Before num coins: 6
Before num actions: 155
Before num cards: 211


 Tribute Call

After num coins: 6
After num actions: 161
After num cards: 211


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 27 **

Before num coins: 6
Before num actions: 161
Before num cards: 253


 Tribute Call

After num coins: 6
After num actions: 167
After num cards: 253


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 28 **

Before num coins: 6
Before num actions: 167
Before num cards: 758


 Tribute Call

After num coins: 6
After num actions: 173
After num cards: 758


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 29 **

Before num coins: 6
Before num actions: 173
Before num cards: 381


 Tribute Call

After num coins: 6
After num actions: 179
After num cards: 381


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 30 **

Before num coins: 6
Before num actions: 179
Before num cards: 26


 Tribute Call

After num coins: 6
After num actions: 185
After num cards: 26


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 31 **

Before num coins: 6
Before num actions: 185
Before num cards: 980


 Tribute Call

After num coins: 6
After num actions: 191
After num cards: 980


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 32 **

Before num coins: 6
Before num actions: 191
Before num cards: 834


 Tribute Call

After num coins: 6
After num actions: 197
After num cards: 834


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 33 **

Before num coins: 6
Before num actions: 197
Before num cards: 398


 Tribute Call

After num coins: 6
After num actions: 203
After num cards: 398


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 34 **

Before num coins: 6
Before num actions: 203
Before num cards: 856


 Tribute Call

After num coins: 6
After num actions: 209
After num cards: 856


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 35 **

Before num coins: 6
Before num actions: 209
Before num cards: 124


 Tribute Call

After num coins: 6
After num actions: 215
After num cards: 124


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 36 **

Before num coins: 6
Before num actions: 215
Before num cards: 172


 Tribute Call

After num coins: 6
After num actions: 221
After num cards: 172


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 37 **

Before num coins: 6
Before num actions: 221
Before num cards: 531


 Tribute Call

After num coins: 6
After num actions: 227
After num cards: 531


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 38 **

Before num coins: 6
Before num actions: 227
Before num cards: 845


 Tribute Call

After num coins: 6
After num actions: 233
After num cards: 845


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 39 **

Before num coins: 6
Before num actions: 233
Before num cards: 805


 Tribute Call

After num coins: 6
After num actions: 239
After num cards: 805


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 40 **

Before num coins: 6
Before num actions: 239
Before num cards: 919


 Tribute Call

After num coins: 6
After num actions: 245
After num cards: 919


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 41 **

Before num coins: 6
Before num actions: 245
Before num cards: 848


 Tribute Call

After num coins: 6
After num actions: 251
After num cards: 848


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 42 **

Before num coins: 6
Before num actions: 251
Before num cards: 416


 Tribute Call

After num coins: 6
After num actions: 257
After num cards: 416


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 43 **

Before num coins: 6
Before num actions: 257
Before num cards: 300


 Tribute Call

After num coins: 6
After num actions: 263
After num cards: 300


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 44 **

Before num coins: 6
Before num actions: 263
Before num cards: 881


 Tribute Call

After num coins: 6
After num actions: 269
After num cards: 881


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 45 **

Before num coins: 6
Before num actions: 269
Before num cards: 596


 Tribute Call

After num coins: 6
After num actions: 275
After num cards: 596


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 46 **

Before num coins: 6
Before num actions: 275
Before num cards: 934


 Tribute Call

After num coins: 6
After num actions: 281
After num cards: 934


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 47 **

Before num coins: 6
Before num actions: 281
Before num cards: 104


 Tribute Call

After num coins: 6
After num actions: 287
After num cards: 104


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 48 **

Before num coins: 6
Before num actions: 287
Before num cards: 813


 Tribute Call

After num coins: 6
After num actions: 293
After num cards: 813


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 49 **

Before num coins: 6
Before num actions: 293
Before num cards: 75


 Tribute Call

After num coins: 6
After num actions: 299
After num cards: 75


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 50 **

Before num coins: 6
Before num actions: 299
Before num cards: 832


 Tribute Call

After num coins: 6
After num actions: 305
After num cards: 832


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 51 **

Before num coins: 6
Before num actions: 305
Before num cards: 104


 Tribute Call

After num coins: 6
After num actions: 311
After num cards: 104


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 52 **

Before num coins: 6
Before num actions: 311
Before num cards: 132


 Tribute Call

After num coins: 6
After num actions: 317
After num cards: 132


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 53 **

Before num coins: 6
Before num actions: 317
Before num cards: 852


 Tribute Call

After num coins: 6
After num actions: 323
After num cards: 852


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 54 **

Before num coins: 6
Before num actions: 323
Before num cards: 728


 Tribute Call

After num coins: 6
After num actions: 329
After num cards: 728


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 55 **

Before num coins: 6
Before num actions: 329
Before num cards: 525


 Tribute Call

After num coins: 6
After num actions: 335
After num cards: 525


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 56 **

Before num coins: 6
Before num actions: 335
Before num cards: 812


 Tribute Call

After num coins: 6
After num actions: 341
After num cards: 812


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 57 **

Before num coins: 6
Before num actions: 341
Before num cards: 515


 Tribute Call

After num coins: 6
After num actions: 347
After num cards: 515


Coins Test Passed
Actions Test Failed
Cards Test Failed

**Fuzz: 9**

test print k:
k[0] = 20
k[1] = 17
k[2] = 2
k[3] = 23
k[4] = 25
k[5] = 15
k[6] = 7
k[7] = 19
k[8] = 3
k[9] = 13


** Player: 0 **

Before num coins: 4
Before num actions: 1
Before num cards: 480


 Tribute Call

After num coins: 4
After num actions: 7
After num cards: 480


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 1 **

Before num coins: 4
Before num actions: 7
Before num cards: 463


 Tribute Call

After num coins: 6
After num actions: 11
After num cards: 463


Coins Test Failed
Actions Test Failed
Cards Test Failed


** Player: 2 **

Before num coins: 6
Before num actions: 11
Before num cards: 31


 Tribute Call

After num coins: 6
After num actions: 17
After num cards: 31


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 3 **

Before num coins: 6
Before num actions: 17
Before num cards: 426


 Tribute Call

After num coins: 6
After num actions: 23
After num cards: 426


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 4 **

Before num coins: 6
Before num actions: 23
Before num cards: 889


 Tribute Call

After num coins: 6
After num actions: 29
After num cards: 889


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 5 **

Before num coins: 6
Before num actions: 29
Before num cards: 374


 Tribute Call

After num coins: 6
After num actions: 35
After num cards: 374


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 6 **

Before num coins: 6
Before num actions: 35
Before num cards: 983


 Tribute Call

After num coins: 6
After num actions: 41
After num cards: 983


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 7 **

Before num coins: 6
Before num actions: 41
Before num cards: 256


 Tribute Call

After num coins: 6
After num actions: 47
After num cards: 256


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 8 **

Before num coins: 6
Before num actions: 47
Before num cards: 442


 Tribute Call

After num coins: 6
After num actions: 53
After num cards: 442


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 9 **

Before num coins: 6
Before num actions: 53
Before num cards: 451


 Tribute Call

After num coins: 6
After num actions: 59
After num cards: 451


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 10 **

Before num coins: 6
Before num actions: 59
Before num cards: 205


 Tribute Call

After num coins: 6
After num actions: 65
After num cards: 205


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 11 **

Before num coins: 6
Before num actions: 65
Before num cards: 29


 Tribute Call

After num coins: 6
After num actions: 71
After num cards: 29


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 12 **

Before num coins: 6
Before num actions: 71
Before num cards: 199


 Tribute Call

After num coins: 6
After num actions: 77
After num cards: 199


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 13 **

Before num coins: 6
Before num actions: 77
Before num cards: 143


 Tribute Call

After num coins: 6
After num actions: 83
After num cards: 143


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 14 **

Before num coins: 6
Before num actions: 83
Before num cards: 624


 Tribute Call

After num coins: 6
After num actions: 89
After num cards: 624


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 15 **

Before num coins: 6
Before num actions: 89
Before num cards: 91


 Tribute Call

After num coins: 6
After num actions: 95
After num cards: 91


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 16 **

Before num coins: 6
Before num actions: 95
Before num cards: 577


 Tribute Call

After num coins: 6
After num actions: 101
After num cards: 577


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 17 **

Before num coins: 6
Before num actions: 101
Before num cards: 0


 Tribute Call

After num coins: 6
After num actions: 107
After num cards: 0


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 18 **

Before num coins: 6
Before num actions: 107
Before num cards: 461


 Tribute Call

After num coins: 6
After num actions: 113
After num cards: 461


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 19 **

Before num coins: 6
Before num actions: 113
Before num cards: 718


 Tribute Call

After num coins: 6
After num actions: 119
After num cards: 718


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 20 **

Before num coins: 6
Before num actions: 119
Before num cards: 581


 Tribute Call

After num coins: 6
After num actions: 125
After num cards: 581


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 21 **

Before num coins: 6
Before num actions: 125
Before num cards: 831


 Tribute Call

After num coins: 6
After num actions: 131
After num cards: 831


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 22 **

Before num coins: 6
Before num actions: 131
Before num cards: 775


 Tribute Call

After num coins: 6
After num actions: 137
After num cards: 775


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 23 **

Before num coins: 6
Before num actions: 137
Before num cards: 285


 Tribute Call

After num coins: 6
After num actions: 143
After num cards: 285


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 24 **

Before num coins: 6
Before num actions: 143
Before num cards: 550


 Tribute Call

After num coins: 6
After num actions: 149
After num cards: 550


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 25 **

Before num coins: 6
Before num actions: 149
Before num cards: 183


 Tribute Call

After num coins: 6
After num actions: 155
After num cards: 183


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 26 **

Before num coins: 6
Before num actions: 155
Before num cards: 883


 Tribute Call

After num coins: 8
After num actions: 159
After num cards: 883


Coins Test Failed
Actions Test Failed
Cards Test Passed


** Player: 27 **

Before num coins: 8
Before num actions: 159
Before num cards: 265


 Tribute Call

After num coins: 8
After num actions: 165
After num cards: 265


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 28 **

Before num coins: 8
Before num actions: 165
Before num cards: 402


 Tribute Call

After num coins: 8
After num actions: 171
After num cards: 402


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 29 **

Before num coins: 8
Before num actions: 171
Before num cards: 123


 Tribute Call

After num coins: 8
After num actions: 177
After num cards: 123


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 30 **

Before num coins: 8
Before num actions: 177
Before num cards: 53


 Tribute Call

After num coins: 8
After num actions: 183
After num cards: 53


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 31 **

Before num coins: 8
Before num actions: 183
Before num cards: 496


 Tribute Call

After num coins: 8
After num actions: 189
After num cards: 496


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 32 **

Before num coins: 8
Before num actions: 189
Before num cards: 786


 Tribute Call

After num coins: 8
After num actions: 195
After num cards: 786


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 33 **

Before num coins: 8
Before num actions: 195
Before num cards: 109


 Tribute Call

After num coins: 8
After num actions: 201
After num cards: 109


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 34 **

Before num coins: 8
Before num actions: 201
Before num cards: 241


 Tribute Call

After num coins: 8
After num actions: 207
After num cards: 241


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 35 **

Before num coins: 8
Before num actions: 207
Before num cards: 137


 Tribute Call

After num coins: 8
After num actions: 213
After num cards: 137


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 36 **

Before num coins: 8
Before num actions: 213
Before num cards: 623


 Tribute Call

After num coins: 8
After num actions: 219
After num cards: 623


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 37 **

Before num coins: 8
Before num actions: 219
Before num cards: 397


 Tribute Call

After num coins: 8
After num actions: 225
After num cards: 397


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 38 **

Before num coins: 8
Before num actions: 225
Before num cards: 119


 Tribute Call

After num coins: 8
After num actions: 229
After num cards: 121


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 39 **

Before num coins: 8
Before num actions: 229
Before num cards: 989


 Tribute Call

After num coins: 8
After num actions: 235
After num cards: 989


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 40 **

Before num coins: 8
Before num actions: 235
Before num cards: 86


 Tribute Call

After num coins: 8
After num actions: 241
After num cards: 86


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 41 **

Before num coins: 8
Before num actions: 241
Before num cards: 344


 Tribute Call

After num coins: 8
After num actions: 247
After num cards: 344


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 42 **

Before num coins: 8
Before num actions: 247
Before num cards: 32


 Tribute Call

After num coins: 8
After num actions: 253
After num cards: 32


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 43 **

Before num coins: 8
Before num actions: 253
Before num cards: 238


 Tribute Call

After num coins: 8
After num actions: 259
After num cards: 238


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 44 **

Before num coins: 8
Before num actions: 259
Before num cards: 587


 Tribute Call

After num coins: 8
After num actions: 265
After num cards: 587


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 45 **

Before num coins: 8
Before num actions: 265
Before num cards: 37


 Tribute Call

After num coins: 8
After num actions: 271
After num cards: 37


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 46 **

Before num coins: 8
Before num actions: 271
Before num cards: 243


 Tribute Call

After num coins: 8
After num actions: 277
After num cards: 243


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 47 **

Before num coins: 8
Before num actions: 277
Before num cards: 578


 Tribute Call

After num coins: 8
After num actions: 283
After num cards: 578


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 48 **

Before num coins: 8
Before num actions: 283
Before num cards: 743


 Tribute Call

After num coins: 8
After num actions: 289
After num cards: 743


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 49 **

Before num coins: 8
Before num actions: 289
Before num cards: 658


 Tribute Call

After num coins: 8
After num actions: 295
After num cards: 658


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 50 **

Before num coins: 8
Before num actions: 295
Before num cards: 494


 Tribute Call

After num coins: 8
After num actions: 301
After num cards: 494


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 51 **

Before num coins: 8
Before num actions: 301
Before num cards: 190


 Tribute Call

After num coins: 8
After num actions: 307
After num cards: 190


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 52 **

Before num coins: 8
Before num actions: 307
Before num cards: 522


 Tribute Call

After num coins: 8
After num actions: 313
After num cards: 522


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 53 **

Before num coins: 8
Before num actions: 313
Before num cards: 666


 Tribute Call

After num coins: 8
After num actions: 319
After num cards: 666


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 54 **

Before num coins: 8
Before num actions: 319
Before num cards: 400


 Tribute Call

After num coins: 8
After num actions: 325
After num cards: 400


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 55 **

Before num coins: 8
Before num actions: 325
Before num cards: 191


 Tribute Call

After num coins: 8
After num actions: 331
After num cards: 191


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 56 **

Before num coins: 8
Before num actions: 331
Before num cards: 879


 Tribute Call

After num coins: 8
After num actions: 337
After num cards: 879


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 57 **

Before num coins: 8
Before num actions: 337
Before num cards: 334


 Tribute Call

After num coins: 8
After num actions: 343
After num cards: 334


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 58 **

Before num coins: 8
Before num actions: 343
Before num cards: 701


 Tribute Call

After num coins: 8
After num actions: 349
After num cards: 701


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 59 **

Before num coins: 8
Before num actions: 349
Before num cards: 392


 Tribute Call

After num coins: 8
After num actions: 355
After num cards: 392


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 60 **

Before num coins: 8
Before num actions: 355
Before num cards: 268


 Tribute Call

After num coins: 8
After num actions: 361
After num cards: 268


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 61 **

Before num coins: 8
Before num actions: 361
Before num cards: 264


 Tribute Call

After num coins: 8
After num actions: 367
After num cards: 264


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 62 **

Before num coins: 8
Before num actions: 367
Before num cards: 817


 Tribute Call

After num coins: 8
After num actions: 373
After num cards: 817


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 63 **

Before num coins: 8
Before num actions: 373
Before num cards: 136


 Tribute Call

After num coins: 8
After num actions: 379
After num cards: 136


Coins Test Passed
Actions Test Failed
Cards Test Failed


** Player: 64 **

Before num coins: 8
Before num actions: 379
Before num cards: 681


 Tribute Call

After num coins: 8
After num actions: 385
After num cards: 681


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 65 **

Before num coins: 8
Before num actions: 385
Before num cards: 569


 Tribute Call

After num coins: 8
After num actions: 391
After num cards: 569


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 66 **

Before num coins: 8
Before num actions: 391
Before num cards: 665


 Tribute Call

After num coins: 8
After num actions: 397
After num cards: 665


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 67 **

Before num coins: 8
Before num actions: 397
Before num cards: 81


 Tribute Call

After num coins: 8
After num actions: 403
After num cards: 81


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 68 **

Before num coins: 8
Before num actions: 403
Before num cards: 808


 Tribute Call

After num coins: 8
After num actions: 409
After num cards: 808


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 69 **

Before num coins: 8
Before num actions: 409
Before num cards: 554


 Tribute Call

After num coins: 8
After num actions: 415
After num cards: 554


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 70 **

Before num coins: 8
Before num actions: 415
Before num cards: 610


 Tribute Call

After num coins: 8
After num actions: 421
After num cards: 610


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 71 **

Before num coins: 8
Before num actions: 421
Before num cards: 111


 Tribute Call

After num coins: 8
After num actions: 427
After num cards: 111


Coins Test Passed
Actions Test Failed
Cards Test Passed


** Player: 72 **

Before num coins: 8
Before num actions: 427
Before num cards: 710


 Tribute Call

After num coins: 8
After num actions: 433
After num cards: 710


Coins Test Passed
Actions Test Failed
Cards Test Failed


End of random test for tributeCardEffect()

Function 'compare'
Lines executed:83.33% of 6
Branches executed:100.00% of 4
Taken at least once:75.00% of 4
No calls

Function 'newGame'
Lines executed:0.00% of 2
No branches
No calls

Function 'kingdomCards'
Lines executed:0.00% of 12
No branches
No calls

Function 'initializeGame'
Lines executed:83.33% of 78
Branches executed:100.00% of 46
Taken at least once:82.61% of 46
No calls

Function 'shuffle'
Lines executed:94.44% of 18
Branches executed:100.00% of 8
Taken at least once:87.50% of 8
No calls

Function 'playCard'
Lines executed:0.00% of 14
Branches executed:0.00% of 10
Taken at least once:0.00% of 10
No calls

Function 'buyCard'
Lines executed:0.00% of 13
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
No calls

Function 'numHandCards'
Lines executed:100.00% of 1
No branches
No calls

Function 'handCard'
Lines executed:0.00% of 2
No branches
No calls

Function 'supplyCount'
Lines executed:100.00% of 1
No branches
No calls

Function 'fullDeckCount'
Lines executed:0.00% of 11
Branches executed:0.00% of 12
Taken at least once:0.00% of 12
No calls

Function 'whoseTurn'
Lines executed:100.00% of 1
No branches
No calls

Function 'endTurn'
Lines executed:0.00% of 22
Branches executed:0.00% of 6
Taken at least once:0.00% of 6
No calls

Function 'isGameOver'
Lines executed:0.00% of 12
Branches executed:0.00% of 8
Taken at least once:0.00% of 8
No calls

Function 'scoreFor'
Lines executed:0.00% of 62
Branches executed:0.00% of 42
Taken at least once:0.00% of 42
No calls

Function 'getWinners'
Lines executed:0.00% of 33
Branches executed:0.00% of 22
Taken at least once:0.00% of 22
No calls

Function 'drawCard'
Lines executed:33.33% of 24
Branches executed:33.33% of 6
Taken at least once:16.67% of 6
No calls

Function 'getCost'
Lines executed:0.00% of 30
Branches executed:0.00% of 28
Taken at least once:0.00% of 28
No calls

Function 'cardEffect'
Lines executed:0.00% of 152
Branches executed:0.00% of 93
Taken at least once:0.00% of 93
No calls

Function 'baronCardEffect'
Lines executed:88.89% of 36
Branches executed:100.00% of 18
Taken at least once:83.33% of 18
No calls

Function 'discardHandDrawFour'
Lines executed:100.00% of 6
Branches executed:100.00% of 4
Taken at least once:100.00% of 4
No calls

Function 'minionCardEffect'
Lines executed:87.50% of 16
Branches executed:100.00% of 10
Taken at least once:90.00% of 10
No calls

Function 'ambassadorCardEffect'
Lines executed:0.00% of 26
Branches executed:0.00% of 26
Taken at least once:0.00% of 26
No calls

Function 'tributeCardEffect'
Lines executed:58.54% of 41
Branches executed:80.00% of 30
Taken at least once:53.33% of 30
No calls

Function 'mineCardEffect'
Lines executed:0.00% of 14
Branches executed:0.00% of 14
Taken at least once:0.00% of 14
No calls

Function 'discardCard'
Lines executed:86.67% of 15
Branches executed:100.00% of 6
Taken at least once:83.33% of 6
No calls

Function 'gainCard'
Lines executed:53.33% of 15
Branches executed:100.00% of 6
Taken at least once:50.00% of 6
No calls

Function 'updateCoins'
Lines executed:71.43% of 14
Branches executed:100.00% of 8
Taken at least once:75.00% of 8
No calls

File 'dominion.c'
Lines executed:30.28% of 677
Branches executed:32.93% of 413
Taken at least once:25.91% of 413
No calls
dominion.c:creating 'dominion.c.gcov'

        -:    0:Source:dominion.c
        -:    0:Graph:dominion.gcno
        -:    0:Data:dominion.gcda
        -:    0:Runs:9
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "rngs.h"
        -:    4:#include <stdio.h>
        -:    5:#include <math.h>
        -:    6:#include <stdlib.h>
        -:    7:
function compare called 226503172 returned 100% blocks executed 85%
        -:    8:int compare(const void* a, const void* b) {
226503172:    9:    if (*(int*)a > *(int*)b)
branch  0 taken 0%
branch  1 taken 100%
    #####:   10:        return 1;
226503172:   11:    if (*(int*)a < *(int*)b)
branch  0 taken 36%
branch  1 taken 64%
 80893990:   12:        return -1;
145609182:   13:    return 0;
226503172:   14:}
        -:   15:
function newGame called 0 returned 0% blocks executed 0%
        -:   16:struct gameState* newGame() {
    #####:   17:    struct gameState* g = malloc(sizeof(struct gameState));
    #####:   18:    return g;
        -:   19:}
        -:   20:
function kingdomCards called 0 returned 0% blocks executed 0%
        -:   21:int* kingdomCards(int k1, int k2, int k3, int k4, int k5, int k6, int k7,
        -:   22:                  int k8, int k9, int k10) {
    #####:   23:    int* k = malloc(10 * sizeof(int));
    #####:   24:    k[0] = k1;
    #####:   25:    k[1] = k2;
    #####:   26:    k[2] = k3;
    #####:   27:    k[3] = k4;
    #####:   28:    k[4] = k5;
    #####:   29:    k[5] = k6;
    #####:   30:    k[6] = k7;
    #####:   31:    k[7] = k8;
    #####:   32:    k[8] = k9;
    #####:   33:    k[9] = k10;
    #####:   34:    return k;
        -:   35:}
        -:   36:
function initializeGame called 32010 returned 100% blocks executed 90%
        -:   37:int initializeGame(int numPlayers, int kingdomCards[10], int randomSeed,
        -:   38:                   struct gameState *state) {
        -:   39:    int i;
        -:   40:    int j;
        -:   41:    int it;
        -:   42:
        -:   43:    //set up random number generator
    32010:   44:    SelectStream(1);
    32010:   45:    PutSeed((long)randomSeed);
        -:   46:
        -:   47:    //check number of players
    64020:   48:    if (numPlayers > MAX_PLAYERS || numPlayers < 2)
branch  0 taken 100%
branch  1 taken 0%
branch  2 taken 0%
branch  3 taken 100%
        -:   49:    {
    #####:   50:        return -1;
        -:   51:    }
        -:   52:
        -:   53:    //set number of players
    32010:   54:    state->numPlayers = numPlayers;
        -:   55:
        -:   56:    //check selected kingdom cards are different
   704220:   57:    for (i = 0; i < 10; i++)
branch  0 taken 91%
branch  1 taken 9%
        -:   58:    {
  7042200:   59:        for (j = 0; j < 10; j++)
branch  0 taken 91%
branch  1 taken 9%
        -:   60:        {
  6081900:   61:            if (j != i && kingdomCards[j] == kingdomCards[i])
branch  0 taken 90%
branch  1 taken 10%
branch  2 taken 0%
branch  3 taken 100%
        -:   62:            {
    #####:   63:                return -1;
        -:   64:            }
  3201000:   65:        }
   320100:   66:    }
        -:   67:
        -:   68:
        -:   69:    //initialize supply
        -:   70:    ///////////////////////////////
        -:   71:
        -:   72:    //set number of Curse cards
    32010:   73:    if (numPlayers == 2)
branch  0 taken 0%
branch  1 taken 100%
        -:   74:    {
    #####:   75:        state->supplyCount[curse] = 10;
    #####:   76:    }
    32010:   77:    else if (numPlayers == 3)
branch  0 taken 0%
branch  1 taken 100%
        -:   78:    {
    #####:   79:        state->supplyCount[curse] = 20;
    #####:   80:    }
        -:   81:    else
        -:   82:    {
    32010:   83:        state->supplyCount[curse] = 30;
        -:   84:    }
        -:   85:
        -:   86:    //set number of Victory cards
    32010:   87:    if (numPlayers == 2)
branch  0 taken 0%
branch  1 taken 100%
        -:   88:    {
    #####:   89:        state->supplyCount[estate] = 8;
    #####:   90:        state->supplyCount[duchy] = 8;
    #####:   91:        state->supplyCount[province] = 8;
    #####:   92:    }
        -:   93:    else
        -:   94:    {
    32010:   95:        state->supplyCount[estate] = 12;
    32010:   96:        state->supplyCount[duchy] = 12;
    32010:   97:        state->supplyCount[province] = 12;
        -:   98:    }
        -:   99:
        -:  100:    //set number of Treasure cards
    32010:  101:    state->supplyCount[copper] = 60 - (7 * numPlayers);
    32010:  102:    state->supplyCount[silver] = 40;
    32010:  103:    state->supplyCount[gold] = 30;
        -:  104:
        -:  105:    //set number of Kingdom cards
  1344420:  106:    for (i = adventurer; i <= treasure_map; i++)       	//loop all cards
branch  0 taken 95%
branch  1 taken 5%
        -:  107:    {
 11003590:  108:        for (j = 0; j < 10; j++)           		//loop chosen cards
branch  0 taken 94%
branch  1 taken 6%
        -:  109:        {
  5157671:  110:            if (kingdomCards[j] == i)
branch  0 taken 6%
branch  1 taken 94%
        -:  111:            {
        -:  112:                //check if card is a 'Victory' Kingdom card
   560147:  113:                if (kingdomCards[j] == great_hall || kingdomCards[j] == gardens)
branch  0 taken 89%
branch  1 taken 11%
branch  2 taken 12%
branch  3 taken 88%
        -:  114:                {
    64010:  115:                    if (numPlayers == 2) {
branch  0 taken 0%
branch  1 taken 100%
    #####:  116:                        state->supplyCount[i] = 8;
    #####:  117:                    }
        -:  118:                    else {
    64010:  119:                        state->supplyCount[i] = 12;
        -:  120:                    }
    64010:  121:                }
        -:  122:                else
        -:  123:                {
   232066:  124:                    state->supplyCount[i] = 10;
        -:  125:                }
   296076:  126:                break;
        -:  127:            }
        -:  128:            else    //card is not in the set choosen for the game
        -:  129:            {
  4861595:  130:                state->supplyCount[i] = -1;
        -:  131:            }
  4861595:  132:        }
        -:  133:
   640200:  134:    }
        -:  135:
        -:  136:    ////////////////////////
        -:  137:    //supply intilization complete
        -:  138:
        -:  139:    //set player decks
 32421616:  140:    for (i = 0; i < numPlayers; i++)
branch  0 taken 99%
branch  1 taken 1%
        -:  141:    {
 16178798:  142:        state->deckCount[i] = 0;
129430384:  143:        for (j = 0; j < 3; j++)
branch  0 taken 75%
branch  1 taken 25%
        -:  144:        {
 48536394:  145:            state->deck[i][j] = estate;
 48536394:  146:            state->deckCount[i]++;
 48536394:  147:        }
258860768:  148:        for (j = 3; j < 10; j++)
branch  0 taken 88%
branch  1 taken 13%
        -:  149:        {
113251586:  150:            state->deck[i][j] = copper;
113251586:  151:            state->deckCount[i]++;
113251586:  152:        }
 16178798:  153:    }
        -:  154:
        -:  155:    //shuffle player decks
 32421616:  156:    for (i = 0; i < numPlayers; i++)
branch  0 taken 99%
branch  1 taken 1%
        -:  157:    {
 16178798:  158:        if ( shuffle(i, state) < 0 )
branch  0 taken 0%
branch  1 taken 100%
        -:  159:        {
    #####:  160:            return -1;
        -:  161:        }
 16178798:  162:    }
        -:  163:
        -:  164:    //draw player hands
 32421616:  165:    for (i = 0; i < numPlayers; i++)
branch  0 taken 99%
branch  1 taken 1%
        -:  166:    {
        -:  167:        //initialize hand size to zero
 16178798:  168:        state->handCount[i] = 0;
 16178798:  169:        state->discardCount[i] = 0;
        -:  170:        //draw 5 cards
        -:  171:        // for (j = 0; j < 5; j++)
        -:  172:        //	{
        -:  173:        //	  drawCard(i, state);
        -:  174:        //	}
 16178798:  175:    }
        -:  176:
        -:  177:    //set embargo tokens to 0 for all supply piles
  1792560:  178:    for (i = 0; i <= treasure_map; i++)
branch  0 taken 96%
branch  1 taken 4%
        -:  179:    {
   864270:  180:        state->embargoTokens[i] = 0;
   864270:  181:    }
        -:  182:
        -:  183:    //initialize first player's turn
    32010:  184:    state->outpostPlayed = 0;
    32010:  185:    state->phase = 0;
    32010:  186:    state->numActions = 1;
    32010:  187:    state->numBuys = 1;
    32010:  188:    state->playedCardCount = 0;
    32010:  189:    state->whoseTurn = 0;
    32010:  190:    state->handCount[state->whoseTurn] = 0;
        -:  191:    //int it; move to top
        -:  192:
        -:  193:    //Moved draw cards to here, only drawing at the start of a turn
   384120:  194:    for (it = 0; it < 5; it++) {
branch  0 taken 83%
branch  1 taken 17%
   160050:  195:        drawCard(state->whoseTurn, state);
   160050:  196:    }
        -:  197:
    32010:  198:    updateCoins(state->whoseTurn, state, 0);
        -:  199:
    32010:  200:    return 0;
    32010:  201:}
        -:  202:
function shuffle called 16178798 returned 100% blocks executed 93%
        -:  203:int shuffle(int player, struct gameState *state) {
        -:  204:
        -:  205:
        -:  206:    int newDeck[MAX_DECK];
 16178798:  207:    int newDeckPos = 0;
        -:  208:    int card;
        -:  209:    int i;
        -:  210:
 16178798:  211:    if (state->deckCount[player] < 1)
branch  0 taken 0%
branch  1 taken 100%
    #####:  212:        return -1;
 16178798:  213:    qsort ((void*)(state->deck[player]), state->deckCount[player], sizeof(int), compare);
        -:  214:    /* SORT CARDS IN DECK TO ENSURE DETERMINISM! */
        -:  215:
355933556:  216:    while (state->deckCount[player] > 0) {
branch  0 taken 91%
branch  1 taken 9%
161787980:  217:        card = floor(Random() * state->deckCount[player]);
161787980:  218:        newDeck[newDeckPos] = state->deck[player][card];
161787980:  219:        newDeckPos++;
1048565128:  220:        for (i = card; i < state->deckCount[player]-1; i++) {
branch  0 taken 69%
branch  1 taken 31%
362494584:  221:            state->deck[player][i] = state->deck[player][i+1];
362494584:  222:        }
161787980:  223:        state->deckCount[player]--;
        -:  224:    }
355933556:  225:    for (i = 0; i < newDeckPos; i++) {
branch  0 taken 91%
branch  1 taken 9%
161787980:  226:        state->deck[player][i] = newDeck[i];
161787980:  227:        state->deckCount[player]++;
161787980:  228:    }
        -:  229:
 16178798:  230:    return 0;
 16178798:  231:}
        -:  232:
function playCard called 0 returned 0% blocks executed 0%
        -:  233:int playCard(int handPos, int choice1, int choice2, int choice3, struct gameState *state)
        -:  234:{
        -:  235:    int card;
    #####:  236:    int coin_bonus = 0; 		//tracks coins gain from actions
        -:  237:
        -:  238:    //check if it is the right phase
    #####:  239:    if (state->phase != 0)
branch  0 never executed
branch  1 never executed
        -:  240:    {
    #####:  241:        return -1;
        -:  242:    }
        -:  243:
        -:  244:    //check if player has enough actions
    #####:  245:    if ( state->numActions < 1 )
branch  0 never executed
branch  1 never executed
        -:  246:    {
    #####:  247:        return -1;
        -:  248:    }
        -:  249:
        -:  250:    //get card played
    #####:  251:    card = handCard(handPos, state);
        -:  252:
        -:  253:    //check if selected card is an action
    #####:  254:    if ( card < adventurer || card > treasure_map )
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  255:    {
    #####:  256:        return -1;
        -:  257:    }
        -:  258:
        -:  259:    //play card
    #####:  260:    if ( cardEffect(card, choice1, choice2, choice3, state, handPos, &coin_bonus) < 0 )
branch  0 never executed
branch  1 never executed
        -:  261:    {
    #####:  262:        return -1;
        -:  263:    }
        -:  264:
        -:  265:    //reduce number of actions
    #####:  266:    state->numActions--;
        -:  267:
        -:  268:    //update coins (Treasure cards may be added with card draws)
    #####:  269:    updateCoins(state->whoseTurn, state, coin_bonus);
        -:  270:
    #####:  271:    return 0;
    #####:  272:}
        -:  273:
function buyCard called 0 returned 0% blocks executed 0%
        -:  274:int buyCard(int supplyPos, struct gameState *state) {
        -:  275:    int who;
        -:  276:    if (DEBUG) {
        -:  277:        printf("Entering buyCard...\n");
        -:  278:    }
        -:  279:
        -:  280:    // I don't know what to do about the phase thing.
        -:  281:
    #####:  282:    who = state->whoseTurn;
        -:  283:
    #####:  284:    if (state->numBuys < 1) {
branch  0 never executed
branch  1 never executed
        -:  285:        if (DEBUG)
        -:  286:            printf("You do not have any buys left\n");
    #####:  287:        return -1;
    #####:  288:    } else if (supplyCount(supplyPos, state) <1) {
branch  0 never executed
branch  1 never executed
        -:  289:        if (DEBUG)
        -:  290:            printf("There are not any of that type of card left\n");
    #####:  291:        return -1;
    #####:  292:    } else if (state->coins < getCost(supplyPos)) {
branch  0 never executed
branch  1 never executed
        -:  293:        if (DEBUG)
        -:  294:            printf("You do not have enough money to buy that. You have %d coins.\n", state->coins);
    #####:  295:        return -1;
        -:  296:    } else {
    #####:  297:        state->phase=1;
        -:  298:        //state->supplyCount[supplyPos]--;
    #####:  299:        gainCard(supplyPos, state, 0, who); //card goes in discard, this might be wrong.. (2 means goes into hand, 0 goes into discard)
        -:  300:
    #####:  301:        state->coins = (state->coins) - (getCost(supplyPos));
    #####:  302:        state->numBuys--;
        -:  303:        if (DEBUG)
        -:  304:            printf("You bought card number %d for %d coins. You now have %d buys and %d coins.\n", supplyPos, getCost(supplyPos), state->numBuys, state->coins);
        -:  305:    }
        -:  306:
        -:  307:    //state->discard[who][state->discardCount[who]] = supplyPos;
        -:  308:    //state->discardCount[who]++;
        -:  309:
    #####:  310:    return 0;
    #####:  311:}
        -:  312:
function numHandCards called 20000 returned 100% blocks executed 100%
        -:  313:int numHandCards(struct gameState *state) {
    20000:  314:    return state->handCount[ whoseTurn(state) ];
        -:  315:}
        -:  316:
function handCard called 0 returned 0% blocks executed 0%
        -:  317:int handCard(int handPos, struct gameState *state) {
    #####:  318:    int currentPlayer = whoseTurn(state);
    #####:  319:    return state->hand[currentPlayer][handPos];
        -:  320:}
        -:  321:
function supplyCount called 51881 returned 100% blocks executed 100%
        -:  322:int supplyCount(int card, struct gameState *state) {
    51881:  323:    return state->supplyCount[card];
        -:  324:}
        -:  325:
function fullDeckCount called 0 returned 0% blocks executed 0%
        -:  326:int fullDeckCount(int player, int card, struct gameState *state) {
        -:  327:    int i;
    #####:  328:    int count = 0;
        -:  329:
    #####:  330:    for (i = 0; i < state->deckCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  331:    {
    #####:  332:        if (state->deck[player][i] == card) count++;
branch  0 never executed
branch  1 never executed
    #####:  333:    }
        -:  334:
    #####:  335:    for (i = 0; i < state->handCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  336:    {
    #####:  337:        if (state->hand[player][i] == card) count++;
branch  0 never executed
branch  1 never executed
    #####:  338:    }
        -:  339:
    #####:  340:    for (i = 0; i < state->discardCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  341:    {
    #####:  342:        if (state->discard[player][i] == card) count++;
branch  0 never executed
branch  1 never executed
    #####:  343:    }
        -:  344:
    #####:  345:    return count;
        -:  346:}
        -:  347:
function whoseTurn called 20000 returned 100% blocks executed 100%
        -:  348:int whoseTurn(struct gameState *state) {
    20000:  349:    return state->whoseTurn;
        -:  350:}
        -:  351:
function endTurn called 0 returned 0% blocks executed 0%
        -:  352:int endTurn(struct gameState *state) {
        -:  353:    int k;
        -:  354:    int i;
    #####:  355:    int currentPlayer = whoseTurn(state);
        -:  356:
        -:  357:    //Discard hand
    #####:  358:    for (i = 0; i < state->handCount[currentPlayer]; i++) {
branch  0 never executed
branch  1 never executed
    #####:  359:        state->discard[currentPlayer][state->discardCount[currentPlayer]++] = state->hand[currentPlayer][i];//Discard
    #####:  360:        state->hand[currentPlayer][i] = -1;//Set card to -1
    #####:  361:    }
    #####:  362:    state->handCount[currentPlayer] = 0;//Reset hand count
        -:  363:
        -:  364:    //Code for determining the player
    #####:  365:    if (currentPlayer < (state->numPlayers - 1)) {
branch  0 never executed
branch  1 never executed
    #####:  366:        state->whoseTurn = currentPlayer + 1;//Still safe to increment
    #####:  367:    }
        -:  368:    else {
    #####:  369:        state->whoseTurn = 0;//Max player has been reached, loop back around to player 1
        -:  370:    }
        -:  371:
    #####:  372:    state->outpostPlayed = 0;
    #####:  373:    state->phase = 0;
    #####:  374:    state->numActions = 1;
    #####:  375:    state->coins = 0;
    #####:  376:    state->numBuys = 1;
    #####:  377:    state->playedCardCount = 0;
    #####:  378:    state->handCount[state->whoseTurn] = 0;
        -:  379:
        -:  380:    //int k; move to top
        -:  381:    //Next player draws hand
    #####:  382:    for (k = 0; k < 5; k++) {
branch  0 never executed
branch  1 never executed
    #####:  383:        drawCard(state->whoseTurn, state);//Draw a card
    #####:  384:    }
        -:  385:
        -:  386:    //Update money
    #####:  387:    updateCoins(state->whoseTurn, state, 0);
        -:  388:
    #####:  389:    return 0;
        -:  390:}
        -:  391:
function isGameOver called 0 returned 0% blocks executed 0%
        -:  392:int isGameOver(struct gameState *state) {
        -:  393:    int i;
        -:  394:    int j;
        -:  395:
        -:  396:    //if stack of Province cards is empty, the game ends
    #####:  397:    if (state->supplyCount[province] == 0)
branch  0 never executed
branch  1 never executed
        -:  398:    {
    #####:  399:        return 1;
        -:  400:    }
        -:  401:
        -:  402:    //if three supply pile are at 0, the game ends
    #####:  403:    j = 0;
    #####:  404:    for (i = 0; i < 25; i++)
branch  0 never executed
branch  1 never executed
        -:  405:    {
    #####:  406:        if (state->supplyCount[i] == 0)
branch  0 never executed
branch  1 never executed
        -:  407:        {
    #####:  408:            j++;
    #####:  409:        }
    #####:  410:    }
    #####:  411:    if ( j >= 3)
branch  0 never executed
branch  1 never executed
        -:  412:    {
    #####:  413:        return 1;
        -:  414:    }
        -:  415:
    #####:  416:    return 0;
    #####:  417:}
        -:  418:
function scoreFor called 0 returned 0% blocks executed 0%
        -:  419:int scoreFor (int player, struct gameState *state) {
        -:  420:
        -:  421:    int i;
    #####:  422:    int score = 0;
        -:  423:    //score from hand
    #####:  424:    for (i = 0; i < state->handCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  425:    {
    #####:  426:        if (state->hand[player][i] == curse) {
branch  0 never executed
branch  1 never executed
    #####:  427:            score = score - 1;
    #####:  428:        };
    #####:  429:        if (state->hand[player][i] == estate) {
branch  0 never executed
branch  1 never executed
    #####:  430:            score = score + 1;
    #####:  431:        };
    #####:  432:        if (state->hand[player][i] == duchy) {
branch  0 never executed
branch  1 never executed
    #####:  433:            score = score + 3;
    #####:  434:        };
    #####:  435:        if (state->hand[player][i] == province) {
branch  0 never executed
branch  1 never executed
    #####:  436:            score = score + 6;
    #####:  437:        };
    #####:  438:        if (state->hand[player][i] == great_hall) {
branch  0 never executed
branch  1 never executed
    #####:  439:            score = score + 1;
    #####:  440:        };
    #####:  441:        if (state->hand[player][i] == gardens) {
branch  0 never executed
branch  1 never executed
    #####:  442:            score = score + ( fullDeckCount(player, 0, state) / 10 );
    #####:  443:        };
    #####:  444:    }
        -:  445:
        -:  446:    //score from discard
    #####:  447:    for (i = 0; i < state->discardCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  448:    {
    #####:  449:        if (state->discard[player][i] == curse) {
branch  0 never executed
branch  1 never executed
    #####:  450:            score = score - 1;
    #####:  451:        };
    #####:  452:        if (state->discard[player][i] == estate) {
branch  0 never executed
branch  1 never executed
    #####:  453:            score = score + 1;
    #####:  454:        };
    #####:  455:        if (state->discard[player][i] == duchy) {
branch  0 never executed
branch  1 never executed
    #####:  456:            score = score + 3;
    #####:  457:        };
    #####:  458:        if (state->discard[player][i] == province) {
branch  0 never executed
branch  1 never executed
    #####:  459:            score = score + 6;
    #####:  460:        };
    #####:  461:        if (state->discard[player][i] == great_hall) {
branch  0 never executed
branch  1 never executed
    #####:  462:            score = score + 1;
    #####:  463:        };
    #####:  464:        if (state->discard[player][i] == gardens) {
branch  0 never executed
branch  1 never executed
    #####:  465:            score = score + ( fullDeckCount(player, 0, state) / 10 );
    #####:  466:        };
    #####:  467:    }
        -:  468:
        -:  469:    //score from deck
    #####:  470:    for (i = 0; i < state->discardCount[player]; i++)
branch  0 never executed
branch  1 never executed
        -:  471:    {
    #####:  472:        if (state->deck[player][i] == curse) {
branch  0 never executed
branch  1 never executed
    #####:  473:            score = score - 1;
    #####:  474:        };
    #####:  475:        if (state->deck[player][i] == estate) {
branch  0 never executed
branch  1 never executed
    #####:  476:            score = score + 1;
    #####:  477:        };
    #####:  478:        if (state->deck[player][i] == duchy) {
branch  0 never executed
branch  1 never executed
    #####:  479:            score = score + 3;
    #####:  480:        };
    #####:  481:        if (state->deck[player][i] == province) {
branch  0 never executed
branch  1 never executed
    #####:  482:            score = score + 6;
    #####:  483:        };
    #####:  484:        if (state->deck[player][i] == great_hall) {
branch  0 never executed
branch  1 never executed
    #####:  485:            score = score + 1;
    #####:  486:        };
    #####:  487:        if (state->deck[player][i] == gardens) {
branch  0 never executed
branch  1 never executed
    #####:  488:            score = score + ( fullDeckCount(player, 0, state) / 10 );
    #####:  489:        };
    #####:  490:    }
        -:  491:
    #####:  492:    return score;
        -:  493:}
        -:  494:
function getWinners called 0 returned 0% blocks executed 0%
        -:  495:int getWinners(int players[MAX_PLAYERS], struct gameState *state) {
        -:  496:    int i;
        -:  497:    int j;
        -:  498:    int highScore;
        -:  499:    int currentPlayer;
        -:  500:
        -:  501:    //get score for each player
    #####:  502:    for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  503:    {
        -:  504:        //set unused player scores to -9999
    #####:  505:        if (i >= state->numPlayers)
branch  0 never executed
branch  1 never executed
        -:  506:        {
    #####:  507:            players[i] = -9999;
    #####:  508:        }
        -:  509:        else
        -:  510:        {
    #####:  511:            players[i] = scoreFor (i, state);
        -:  512:        }
    #####:  513:    }
        -:  514:
        -:  515:    //find highest score
    #####:  516:    j = 0;
    #####:  517:    for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  518:    {
    #####:  519:        if (players[i] > players[j])
branch  0 never executed
branch  1 never executed
        -:  520:        {
    #####:  521:            j = i;
    #####:  522:        }
    #####:  523:    }
    #####:  524:    highScore = players[j];
        -:  525:
        -:  526:    //add 1 to players who had less turns
    #####:  527:    currentPlayer = whoseTurn(state);
    #####:  528:    for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  529:    {
    #####:  530:        if ( players[i] == highScore && i > currentPlayer )
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  531:        {
    #####:  532:            players[i]++;
    #####:  533:        }
    #####:  534:    }
        -:  535:
        -:  536:    //find new highest score
    #####:  537:    j = 0;
    #####:  538:    for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  539:    {
    #####:  540:        if ( players[i] > players[j] )
branch  0 never executed
branch  1 never executed
        -:  541:        {
    #####:  542:            j = i;
    #####:  543:        }
    #####:  544:    }
    #####:  545:    highScore = players[j];
        -:  546:
        -:  547:    //set winners in array to 1 and rest to 0
    #####:  548:    for (i = 0; i < MAX_PLAYERS; i++)
branch  0 never executed
branch  1 never executed
        -:  549:    {
    #####:  550:        if ( players[i] == highScore )
branch  0 never executed
branch  1 never executed
        -:  551:        {
    #####:  552:            players[i] = 1;
    #####:  553:        }
        -:  554:        else
        -:  555:        {
    #####:  556:            players[i] = 0;
        -:  557:        }
    #####:  558:    }
        -:  559:
    #####:  560:    return 0;
        -:  561:}
        -:  562:
function drawCard called 176064 returned 100% blocks executed 41%
        -:  563:int drawCard(int player, struct gameState *state)
        -:  564:{   int count;
        -:  565:    int deckCounter;
   176064:  566:    if (state->deckCount[player] <= 0) { //Deck is empty
branch  0 taken 0%
branch  1 taken 100%
        -:  567:
        -:  568:        //Step 1 Shuffle the discard pile back into a deck
        -:  569:        int i;
        -:  570:        //Move discard to deck
    #####:  571:        for (i = 0; i < state->discardCount[player]; i++) {
branch  0 never executed
branch  1 never executed
    #####:  572:            state->deck[player][i] = state->discard[player][i];
    #####:  573:            state->discard[player][i] = -1;
    #####:  574:        }
        -:  575:
    #####:  576:        state->deckCount[player] = state->discardCount[player];
    #####:  577:        state->discardCount[player] = 0;//Reset discard
        -:  578:
        -:  579:        //Shufffle the deck
    #####:  580:        shuffle(player, state);//Shuffle the deck up and make it so that we can draw
        -:  581:
        -:  582:        if (DEBUG) { //Debug statements
        -:  583:            printf("Deck count now: %d\n", state->deckCount[player]);
        -:  584:        }
        -:  585:
    #####:  586:        state->discardCount[player] = 0;
        -:  587:
        -:  588:        //Step 2 Draw Card
    #####:  589:        count = state->handCount[player];//Get current player's hand count
        -:  590:
        -:  591:        if (DEBUG) { //Debug statements
        -:  592:            printf("Current hand count: %d\n", count);
        -:  593:        }
        -:  594:
    #####:  595:        deckCounter = state->deckCount[player];//Create a holder for the deck count
        -:  596:
    #####:  597:        if (deckCounter == 0)
branch  0 never executed
branch  1 never executed
    #####:  598:            return -1;
        -:  599:
    #####:  600:        state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to hand
    #####:  601:        state->deckCount[player]--;
    #####:  602:        state->handCount[player]++;//Increment hand count
    #####:  603:    }
        -:  604:
        -:  605:    else {
   176064:  606:        int count = state->handCount[player];//Get current hand count for player
        -:  607:        int deckCounter;
        -:  608:        if (DEBUG) { //Debug statements
        -:  609:            printf("Current hand count: %d\n", count);
        -:  610:        }
        -:  611:
   176064:  612:        deckCounter = state->deckCount[player];//Create holder for the deck count
   176064:  613:        state->hand[player][count] = state->deck[player][deckCounter - 1];//Add card to the hand
   176064:  614:        state->deckCount[player]--;
   176064:  615:        state->handCount[player]++;//Increment hand count
        -:  616:    }
        -:  617:
   176064:  618:    return 0;
   176064:  619:}
        -:  620:
function getCost called 0 returned 0% blocks executed 0%
        -:  621:int getCost(int cardNumber)
        -:  622:{
    #####:  623:    switch( cardNumber )
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
branch 10 never executed
branch 11 never executed
branch 12 never executed
branch 13 never executed
branch 14 never executed
branch 15 never executed
branch 16 never executed
branch 17 never executed
branch 18 never executed
branch 19 never executed
branch 20 never executed
branch 21 never executed
branch 22 never executed
branch 23 never executed
branch 24 never executed
branch 25 never executed
branch 26 never executed
branch 27 never executed
        -:  624:    {
        -:  625:    case curse:
    #####:  626:        return 0;
        -:  627:    case estate:
    #####:  628:        return 2;
        -:  629:    case duchy:
    #####:  630:        return 5;
        -:  631:    case province:
    #####:  632:        return 8;
        -:  633:    case copper:
    #####:  634:        return 0;
        -:  635:    case silver:
    #####:  636:        return 3;
        -:  637:    case gold:
    #####:  638:        return 6;
        -:  639:    case adventurer:
    #####:  640:        return 6;
        -:  641:    case council_room:
    #####:  642:        return 5;
        -:  643:    case feast:
    #####:  644:        return 4;
        -:  645:    case gardens:
    #####:  646:        return 4;
        -:  647:    case mine:
    #####:  648:        return 5;
        -:  649:    case remodel:
    #####:  650:        return 4;
        -:  651:    case smithy:
    #####:  652:        return 4;
        -:  653:    case village:
    #####:  654:        return 3;
        -:  655:    case baron:
    #####:  656:        return 4;
        -:  657:    case great_hall:
    #####:  658:        return 3;
        -:  659:    case minion:
    #####:  660:        return 5;
        -:  661:    case steward:
    #####:  662:        return 3;
        -:  663:    case tribute:
    #####:  664:        return 5;
        -:  665:    case ambassador:
    #####:  666:        return 3;
        -:  667:    case cutpurse:
    #####:  668:        return 4;
        -:  669:    case embargo:
    #####:  670:        return 2;
        -:  671:    case outpost:
    #####:  672:        return 5;
        -:  673:    case salvager:
    #####:  674:        return 4;
        -:  675:    case sea_hag:
    #####:  676:        return 4;
        -:  677:    case treasure_map:
    #####:  678:        return 4;
        -:  679:    }
        -:  680:
    #####:  681:    return -1;
    #####:  682:}
        -:  683:
function cardEffect called 0 returned 0% blocks executed 0%
        -:  684:int cardEffect(int card, int choice1, int choice2, int choice3, struct gameState *state, int handPos, int *bonus)
        -:  685:{
        -:  686:    int i;
        -:  687:    int j;
        -:  688:    int k;
        -:  689:    int x;
        -:  690:    int index;
    #####:  691:    int currentPlayer = whoseTurn(state);
    #####:  692:    int nextPlayer = currentPlayer + 1;
        -:  693:
    #####:  694:    int tributeRevealedCards[2] = {-1, -1};
        -:  695:    int temphand[MAX_HAND];// moved above the if statement
    #####:  696:    int drawntreasure=0;
        -:  697:    int cardDrawn;
    #####:  698:    int z = 0;// this is the counter for the temp hand
    #####:  699:    if (nextPlayer > (state->numPlayers - 1)) {
branch  0 never executed
branch  1 never executed
    #####:  700:        nextPlayer = 0;
    #####:  701:    }
        -:  702:
        -:  703:
        -:  704:    //uses switch to select card and perform actions
    #####:  705:    switch( card )
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
branch 10 never executed
branch 11 never executed
branch 12 never executed
branch 13 never executed
branch 14 never executed
branch 15 never executed
branch 16 never executed
branch 17 never executed
branch 18 never executed
branch 19 never executed
branch 20 never executed
        -:  706:    {
        -:  707:    case adventurer:
    #####:  708:        while(drawntreasure<2) {
branch  0 never executed
branch  1 never executed
    #####:  709:            if (state->deckCount[currentPlayer] <1) { //if the deck is empty we need to shuffle discard and add to deck
branch  0 never executed
branch  1 never executed
    #####:  710:                shuffle(currentPlayer, state);
    #####:  711:            }
    #####:  712:            drawCard(currentPlayer, state);
    #####:  713:            cardDrawn = state->hand[currentPlayer][state->handCount[currentPlayer]-1];//top card of hand is most recently drawn card.
    #####:  714:            if (cardDrawn == copper || cardDrawn == silver || cardDrawn == gold)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
    #####:  715:                drawntreasure++;
        -:  716:            else {
    #####:  717:                temphand[z]=cardDrawn;
    #####:  718:                state->handCount[currentPlayer]--; //this should just remove the top card (the most recently drawn one).
    #####:  719:                z++;
        -:  720:            }
        -:  721:        }
    #####:  722:        while(z-1>=0) {
branch  0 never executed
branch  1 never executed
    #####:  723:            state->discard[currentPlayer][state->discardCount[currentPlayer]++]=temphand[z-1]; // discard all cards in play that have been drawn
    #####:  724:            z=z-1;
        -:  725:        }
    #####:  726:        return 0;
        -:  727:
        -:  728:    case council_room:
        -:  729:        //+4 Cards
    #####:  730:        for (i = 0; i < 4; i++)
branch  0 never executed
branch  1 never executed
        -:  731:        {
    #####:  732:            drawCard(currentPlayer, state);
    #####:  733:        }
        -:  734:
        -:  735:        //+1 Buy
    #####:  736:        state->numBuys++;
        -:  737:
        -:  738:        //Each other player draws a card
    #####:  739:        for (i = 0; i < state->numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -:  740:        {
    #####:  741:            if ( i != currentPlayer )
branch  0 never executed
branch  1 never executed
        -:  742:            {
    #####:  743:                drawCard(i, state);
    #####:  744:            }
    #####:  745:        }
        -:  746:
        -:  747:        //put played card in played card pile
    #####:  748:        discardCard(handPos, currentPlayer, state, 0);
        -:  749:
    #####:  750:        return 0;
        -:  751:
        -:  752:    case feast:
        -:  753:        //gain card with cost up to 5
        -:  754:        //Backup hand
    #####:  755:        for (i = 0; i <= state->handCount[currentPlayer]; i++) {
branch  0 never executed
branch  1 never executed
    #####:  756:            temphand[i] = state->hand[currentPlayer][i];//Backup card
    #####:  757:            state->hand[currentPlayer][i] = -1;//Set to nothing
    #####:  758:        }
        -:  759:        //Backup hand
        -:  760:
        -:  761:        //Update Coins for Buy
    #####:  762:        updateCoins(currentPlayer, state, 5);
    #####:  763:        x = 1;//Condition to loop on
    #####:  764:        while( x == 1) {//Buy one card
branch  0 never executed
branch  1 never executed
    #####:  765:            if (supplyCount(choice1, state) <= 0) {
branch  0 never executed
branch  1 never executed
        -:  766:                if (DEBUG)
        -:  767:                    printf("None of that card left, sorry!\n");
        -:  768:
        -:  769:                if (DEBUG) {
        -:  770:                    printf("Cards Left: %d\n", supplyCount(choice1, state));
        -:  771:                }
    #####:  772:            }
    #####:  773:            else if (state->coins < getCost(choice1)) {
branch  0 never executed
branch  1 never executed
    #####:  774:                printf("That card is too expensive!\n");
        -:  775:
        -:  776:                if (DEBUG) {
        -:  777:                    printf("Coins: %d < %d\n", state->coins, getCost(choice1));
        -:  778:                }
    #####:  779:            }
        -:  780:            else {
        -:  781:
        -:  782:                if (DEBUG) {
        -:  783:                    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  784:                }
        -:  785:
    #####:  786:                gainCard(choice1, state, 0, currentPlayer);//Gain the card
    #####:  787:                x = 0;//No more buying cards
        -:  788:
        -:  789:                if (DEBUG) {
        -:  790:                    printf("Deck Count: %d\n", state->handCount[currentPlayer] + state->deckCount[currentPlayer] + state->discardCount[currentPlayer]);
        -:  791:                }
        -:  792:
        -:  793:            }
        -:  794:        }
        -:  795:
        -:  796:        //Reset Hand
    #####:  797:        for (i = 0; i <= state->handCount[currentPlayer]; i++) {
branch  0 never executed
branch  1 never executed
    #####:  798:            state->hand[currentPlayer][i] = temphand[i];
    #####:  799:            temphand[i] = -1;
    #####:  800:        }
        -:  801:        //Reset Hand
        -:  802:
    #####:  803:        return 0;
        -:  804:
        -:  805:    case gardens:
    #####:  806:        return -1;
        -:  807:
        -:  808:    case mine:
    #####:  809:        return mineCardEffect(card, choice1, choice2, choice3, state, handPos, *bonus, currentPlayer);
        -:  810:
        -:  811:    case remodel:
    #####:  812:        j = state->hand[currentPlayer][choice1];  //store card we will trash
        -:  813:
    #####:  814:        if ( (getCost(state->hand[currentPlayer][choice1]) + 2) > getCost(choice2) )
branch  0 never executed
branch  1 never executed
        -:  815:        {
    #####:  816:            return -1;
        -:  817:        }
        -:  818:
    #####:  819:        gainCard(choice2, state, 0, currentPlayer);
        -:  820:
        -:  821:        //discard card from hand
    #####:  822:        discardCard(handPos, currentPlayer, state, 0);
        -:  823:
        -:  824:        //discard trashed card
    #####:  825:        for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -:  826:        {
    #####:  827:            if (state->hand[currentPlayer][i] == j)
branch  0 never executed
branch  1 never executed
        -:  828:            {
    #####:  829:                discardCard(i, currentPlayer, state, 0);
    #####:  830:                break;
        -:  831:            }
    #####:  832:        }
        -:  833:
        -:  834:
    #####:  835:        return 0;
        -:  836:
        -:  837:    case smithy:
        -:  838:        //+3 Cards
    #####:  839:        for (i = 0; i < 3; i++)
branch  0 never executed
branch  1 never executed
        -:  840:        {
    #####:  841:            drawCard(currentPlayer, state);
    #####:  842:        }
        -:  843:
        -:  844:        //discard card from hand
    #####:  845:        discardCard(handPos, currentPlayer, state, 0);
    #####:  846:        return 0;
        -:  847:
        -:  848:    case village:
        -:  849:        //+1 Card
    #####:  850:        drawCard(currentPlayer, state);
        -:  851:
        -:  852:        //+2 Actions
    #####:  853:        state->numActions = state->numActions + 2;
        -:  854:
        -:  855:        //discard played card from hand
    #####:  856:        discardCard(handPos, currentPlayer, state, 0);
    #####:  857:        return 0;
        -:  858:
        -:  859:    case baron:
    #####:  860:        return baronCardEffect(card, choice1, choice2, choice3, state, handPos, *bonus, currentPlayer);
        -:  861:        
        -:  862:    case great_hall:
        -:  863:        //+1 Card
    #####:  864:        drawCard(currentPlayer, state);
        -:  865:
        -:  866:        //+1 Actions
    #####:  867:        state->numActions++;
        -:  868:
        -:  869:        //discard card from hand
    #####:  870:        discardCard(handPos, currentPlayer, state, 0);
    #####:  871:        return 0;
        -:  872:
        -:  873:    case minion:
    #####:  874:        return minionCardEffect(card, choice1, choice2, choice3, state, handPos, *bonus, currentPlayer);
        -:  875:
        -:  876:    case steward:
    #####:  877:        if (choice1 == 1)
branch  0 never executed
branch  1 never executed
        -:  878:        {
        -:  879:            //+2 cards
    #####:  880:            drawCard(currentPlayer, state);
    #####:  881:            drawCard(currentPlayer, state);
    #####:  882:        }
    #####:  883:        else if (choice1 == 2)
branch  0 never executed
branch  1 never executed
        -:  884:        {
        -:  885:            //+2 coins
    #####:  886:            state->coins = state->coins + 2;
    #####:  887:        }
        -:  888:        else
        -:  889:        {
        -:  890:            //trash 2 cards in hand
    #####:  891:            discardCard(choice2, currentPlayer, state, 1);
    #####:  892:            discardCard(choice3, currentPlayer, state, 1);
        -:  893:        }
        -:  894:
        -:  895:        //discard card from hand
    #####:  896:        discardCard(handPos, currentPlayer, state, 0);
    #####:  897:        return 0;
        -:  898:
        -:  899:    case tribute:
    #####:  900:        return tributeCardEffect(card, choice1, choice2, choice3, state, handPos, *bonus, currentPlayer, nextPlayer, *tributeRevealedCards);
        -:  901:
        -:  902:    case ambassador:
    #####:  903:        return ambassadorCardEffect(card, choice1, choice2, choice3, state, handPos, *bonus, currentPlayer);
        -:  904:
        -:  905:    case cutpurse:
        -:  906:
    #####:  907:        updateCoins(currentPlayer, state, 2);
    #####:  908:        for (i = 0; i < state->numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -:  909:        {
    #####:  910:            if (i != currentPlayer)
branch  0 never executed
branch  1 never executed
        -:  911:            {
    #####:  912:                for (j = 0; j < state->handCount[i]; j++)
branch  0 never executed
branch  1 never executed
        -:  913:                {
    #####:  914:                    if (state->hand[i][j] == copper)
branch  0 never executed
branch  1 never executed
        -:  915:                    {
    #####:  916:                        discardCard(j, i, state, 0);
    #####:  917:                        break;
        -:  918:                    }
    #####:  919:                    if (j == state->handCount[i])
branch  0 never executed
branch  1 never executed
        -:  920:                    {
    #####:  921:                        for (k = 0; k < state->handCount[i]; k++)
branch  0 never executed
branch  1 never executed
        -:  922:                        {
        -:  923:                            if (DEBUG)
        -:  924:                                printf("Player %d reveals card number %d\n", i, state->hand[i][k]);
    #####:  925:                        }
    #####:  926:                        break;
        -:  927:                    }
    #####:  928:                }
        -:  929:
    #####:  930:            }
        -:  931:
    #####:  932:        }
        -:  933:
        -:  934:        //discard played card from hand
    #####:  935:        discardCard(handPos, currentPlayer, state, 0);
        -:  936:
    #####:  937:        return 0;
        -:  938:
        -:  939:
        -:  940:    case embargo:
        -:  941:        //+2 Coins
    #####:  942:        state->coins = state->coins + 2;
        -:  943:
        -:  944:        //see if selected pile is in play
    #####:  945:        if ( state->supplyCount[choice1] == -1 )
branch  0 never executed
branch  1 never executed
        -:  946:        {
    #####:  947:            return -1;
        -:  948:        }
        -:  949:
        -:  950:        //add embargo token to selected supply pile
    #####:  951:        state->embargoTokens[choice1]++;
        -:  952:
        -:  953:        //trash card
    #####:  954:        discardCard(handPos, currentPlayer, state, 1);
    #####:  955:        return 0;
        -:  956:
        -:  957:    case outpost:
        -:  958:        //set outpost flag
    #####:  959:        state->outpostPlayed++;
        -:  960:
        -:  961:        //discard card
    #####:  962:        discardCard(handPos, currentPlayer, state, 0);
    #####:  963:        return 0;
        -:  964:
        -:  965:    case salvager:
        -:  966:        //+1 buy
    #####:  967:        state->numBuys++;
        -:  968:
    #####:  969:        if (choice1)
branch  0 never executed
branch  1 never executed
        -:  970:        {
        -:  971:            //gain coins equal to trashed card
    #####:  972:            state->coins = state->coins + getCost( handCard(choice1, state) );
        -:  973:            //trash card
    #####:  974:            discardCard(choice1, currentPlayer, state, 1);
    #####:  975:        }
        -:  976:
        -:  977:        //discard card
    #####:  978:        discardCard(handPos, currentPlayer, state, 0);
    #####:  979:        return 0;
        -:  980:
        -:  981:    case sea_hag:
    #####:  982:        for (i = 0; i < state->numPlayers; i++) {
branch  0 never executed
branch  1 never executed
    #####:  983:            if (i != currentPlayer) {
branch  0 never executed
branch  1 never executed
    #####:  984:                state->discard[i][state->discardCount[i]] = state->deck[i][state->deckCount[i]--];
    #####:  985:                state->deckCount[i]--;
    #####:  986:                state->discardCount[i]++;
    #####:  987:                state->deck[i][state->deckCount[i]--] = curse;//Top card now a curse
    #####:  988:            }
    #####:  989:        }
    #####:  990:        return 0;
        -:  991:
        -:  992:    case treasure_map:
        -:  993:        //search hand for another treasure_map
    #####:  994:        index = -1;
    #####:  995:        for (i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -:  996:        {
    #####:  997:            if (state->hand[currentPlayer][i] == treasure_map && i != handPos)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:  998:            {
    #####:  999:                index = i;
    #####: 1000:                break;
        -: 1001:            }
    #####: 1002:        }
    #####: 1003:        if (index > -1)
branch  0 never executed
branch  1 never executed
        -: 1004:        {
        -: 1005:            //trash both treasure cards
    #####: 1006:            discardCard(handPos, currentPlayer, state, 1);
    #####: 1007:            discardCard(index, currentPlayer, state, 1);
        -: 1008:
        -: 1009:            //gain 4 Gold cards
    #####: 1010:            for (i = 0; i < 4; i++)
branch  0 never executed
branch  1 never executed
        -: 1011:            {
    #####: 1012:                gainCard(gold, state, 1, currentPlayer);
    #####: 1013:            }
        -: 1014:
        -: 1015:            //return success
    #####: 1016:            return 1;
        -: 1017:        }
        -: 1018:
        -: 1019:        //no second treasure_map found in hand
    #####: 1020:        return -1;
        -: 1021:    }
        -: 1022:
    #####: 1023:    return -1;
    #####: 1024:}
        -: 1025:
function baronCardEffect called 20000 returned 100% blocks executed 92%
        -: 1026:int baronCardEffect(int card, int choice1, struct gameState *state, int currentPlayer) {
    20000: 1027:    state->numBuys++; //Increase buys by 1!
    20000: 1028:    if (choice1 > 0) {              //Boolean true or going to discard an estate
branch  0 taken 60%
branch  1 taken 40%
    12000: 1029:        int p = 1;                  //Iterator for hand! //*BUG* 0 to 1
    12000: 1030:        int card_not_discarded = 1; //Flag for discard set!
    48234: 1031:        while (card_not_discarded)
branch  0 taken 50%
branch  1 taken 50%
        -: 1032:        {
    12117: 1033:            if (state->hand[currentPlayer][p] == estate)
branch  0 taken 1%
branch  1 taken 99%
        -: 1034:            {                      //Found an estate card!
       51: 1035:                state->coins += 4; //Add 4 coins to the amount of coins
       51: 1036:                state->discard[currentPlayer][state->discardCount[currentPlayer]] = state->hand[currentPlayer][p];
       51: 1037:                state->discardCount[currentPlayer]++;
      426: 1038:                for (; p < state->handCount[currentPlayer]; p++)
branch  0 taken 76%
branch  1 taken 24%
        -: 1039:                {
      162: 1040:                    state->hand[currentPlayer][p] = state->hand[currentPlayer][p + 1];
      162: 1041:                }
       51: 1042:                state->hand[currentPlayer][state->handCount[currentPlayer]] = -1;
       51: 1043:                state->handCount[currentPlayer]--;
       51: 1044:                card_not_discarded = 0; //Exit the loop
       51: 1045:            }
    12066: 1046:            else if (p > state->handCount[currentPlayer])
branch  0 taken 99%
branch  1 taken 1%
        -: 1047:            {
        -: 1048:                if (DEBUG)
        -: 1049:                {
        -: 1050:                    printf("No estate cards in your hand, invalid choice\n");
        -: 1051:                    printf("Must gain an estate if there are any\n");
        -: 1052:                }
    11949: 1053:                if (supplyCount(estate, state) > 0)
branch  0 taken 67%
branch  1 taken 33%
        -: 1054:                {
     7966: 1055:                    gainCard(estate, state, 0, currentPlayer);
        -: 1056:
     7966: 1057:                    state->supplyCount[estate]--; //Decrement estates
     7966: 1058:                    if (supplyCount(estate, state) == 0)
branch  0 taken 0%
branch  1 taken 100%
        -: 1059:                    {
    #####: 1060:                        isGameOver(state);
    #####: 1061:                    }
     7966: 1062:                }
    11949: 1063:                card_not_discarded = 0; //Exit the loop
    11949: 1064:            }
        -: 1065:
        -: 1066:            else
        -: 1067:            {
      117: 1068:                p++; //Next card
        -: 1069:            }
        -: 1070:        }
    12000: 1071:    }
        -: 1072:
        -: 1073:    else
        -: 1074:    {
     8000: 1075:        if (supplyCount(estate, state) > 0)
branch  0 taken 100%
branch  1 taken 0%
        -: 1076:        {
     8000: 1077:            gainCard(estate, state, 0, currentPlayer); //Gain an estate
        -: 1078:
     8000: 1079:            state->supplyCount[estate]++; //Increment Estates //*BUG* -- to ++
     8000: 1080:            if (supplyCount(estate, state) == 0)
branch  0 taken 0%
branch  1 taken 100%
        -: 1081:            {
    #####: 1082:                isGameOver(state);
    #####: 1083:            }
     8000: 1084:        }
        -: 1085:    }
        -: 1086:
    20000: 1087:    return 0;
        -: 1088:}
        -: 1089:
function discardHandDrawFour called 4000 returned 100% blocks executed 100%
        -: 1090:void discardHandDrawFour(struct gameState *state,  int handPos, int player) {
        -: 1091:    //discard hand
    40000: 1092:    while (numHandCards(state) > 0)
branch  0 taken 80%
branch  1 taken 20%
        -: 1093:    {
    16000: 1094:        discardCard(handPos, player, state, 0);
        -: 1095:    }
        -: 1096:
        -: 1097:    //draw 4
    40000: 1098:    for (int i = 0; i < 4; i++)
branch  0 taken 80%
branch  1 taken 20%
        -: 1099:    {
    16000: 1100:        drawCard(player, state);
    16000: 1101:    }
     4000: 1102:}
        -: 1103:
function minionCardEffect called 16000 returned 100% blocks executed 93%
        -: 1104:int minionCardEffect(int choice1, int choice2, struct gameState *state, int handPos, int currentPlayer){
        -: 1105:    //+1 action
    16000: 1106:    state->numActions++;
        -: 1107:
        -: 1108:    //discard card from hand
    16000: 1109:    discardCard(handPos, currentPlayer, state, 1); //*BUG* 0 to 1
        -: 1110:
    16000: 1111:    if (!choice1) //*BUG* choice1 to !choice1
branch  0 taken 50%
branch  1 taken 50%
        -: 1112:    {
     8000: 1113:        state->coins = state->coins + 2;
     8000: 1114:    }
     8000: 1115:    else if (choice2) //discard hand, redraw 4, other players with 5+ cards discard hand and draw 4
branch  0 taken 50%
branch  1 taken 50%
        -: 1116:    {
     4000: 1117:        discardHandDrawFour(state, handPos, currentPlayer);
        -: 1118:
        -: 1119:        //other players discard hand and redraw if hand size > 4
  4030218: 1120:        for (int i = 0; i < state->numPlayers; i++)
branch  0 taken 99%
branch  1 taken 1%
        -: 1121:        {
  2011109: 1122:            if (i != currentPlayer)
branch  0 taken 99%
branch  1 taken 1%
        -: 1123:            {
  2007109: 1124:                if (state->handCount[i] > 4)
branch  0 taken 0%
branch  1 taken 100%
        -: 1125:                {
    #####: 1126:                    discardHandDrawFour(state, handPos, i);   
    #####: 1127:                }
  2007109: 1128:            }
  2011109: 1129:        }
     4000: 1130:    }
    16000: 1131:    return 0;
        -: 1132:}
        -: 1133:
function ambassadorCardEffect called 0 returned 0% blocks executed 0%
        -: 1134:int ambassadorCardEffect(int choice1, int choice2, struct gameState *state, int handPos, int *bonus, int currentPlayer) {
    #####: 1135:    int j = 0; //used to check if player has enough cards to discard
        -: 1136:
    #####: 1137:    if (choice2 > 2 || choice2 < 0 || choice1 == handPos)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
        -: 1138:    {
    #####: 1139:        return -1;
        -: 1140:    }
        -: 1141:
    #####: 1142:    for (int i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -: 1143:    {
    #####: 1144:        if (i != handPos && i == state->hand[currentPlayer][choice1] && i != choice1)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
        -: 1145:        {
    #####: 1146:            j++;
    #####: 1147:        }
    #####: 1148:    }
    #####: 1149:    if (j < choice2)
branch  0 never executed
branch  1 never executed
        -: 1150:    {
    #####: 1151:        return -1;
        -: 1152:    }
        -: 1153:
        -: 1154:    if (DEBUG)
        -: 1155:        printf("Player %d reveals card number: %d\n", currentPlayer, state->hand[currentPlayer][choice1]);
        -: 1156:
        -: 1157:    //increase supply count for choosen card by amount being discarded
    #####: 1158:    state->supplyCount[state->hand[currentPlayer][choice1]] -= choice2; //*BUG* += to -=
        -: 1159:
        -: 1160:    //each other player gains a copy of revealed card
    #####: 1161:    for (int i = 0; i < state->numPlayers; i++)
branch  0 never executed
branch  1 never executed
        -: 1162:    {
    #####: 1163:        if (i == currentPlayer) // *BUG* changed != to == *BUG*
branch  0 never executed
branch  1 never executed
        -: 1164:        {
    #####: 1165:            gainCard(state->hand[currentPlayer][choice1], state, 0, i);
    #####: 1166:        }
    #####: 1167:    }
        -: 1168:
        -: 1169:    //discard played card from hand
    #####: 1170:    discardCard(handPos, currentPlayer, state, 0);
        -: 1171:
        -: 1172:    //trash copies of cards returned to supply
    #####: 1173:    for (j = 0; j < choice2; j++)
branch  0 never executed
branch  1 never executed
        -: 1174:    {
    #####: 1175:        for (int i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -: 1176:        {
    #####: 1177:            if (state->hand[currentPlayer][i] == state->hand[currentPlayer][choice1])
branch  0 never executed
branch  1 never executed
        -: 1178:            {
    #####: 1179:                discardCard(i, currentPlayer, state, 1);
    #####: 1180:                break;
        -: 1181:            }
    #####: 1182:        }
    #####: 1183:    }
        -: 1184:
    #####: 1185:    return 0;
    #####: 1186:}
        -: 1187:
function tributeCardEffect called 673 returned 100% blocks executed 65%
        -: 1188:int tributeCardEffect(struct gameState *state,int currentPlayer, int nextPlayer, int* tributeRevealedCards) {
      673: 1189:    if ((state->discardCount[nextPlayer] + state->deckCount[nextPlayer]) < 1) //*BUG* <= to <
branch  0 taken 0%
branch  1 taken 100%
        -: 1190:    {
    #####: 1191:        if (state->deckCount[nextPlayer] > 0)
branch  0 never executed
branch  1 never executed
        -: 1192:        {
    #####: 1193:            tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer] - 1];
    #####: 1194:            state->deckCount[nextPlayer]--;
    #####: 1195:        }
    #####: 1196:        else if (state->discardCount[nextPlayer] > 0)
branch  0 never executed
branch  1 never executed
        -: 1197:        {
    #####: 1198:            tributeRevealedCards[0] = state->discard[nextPlayer][state->discardCount[nextPlayer] - 1];
    #####: 1199:            state->discardCount[nextPlayer]--;
    #####: 1200:        }
        -: 1201:        else
        -: 1202:        {
        -: 1203:            //No Card to Reveal
        -: 1204:            if (DEBUG)
        -: 1205:            {
        -: 1206:                printf("No cards to reveal\n");
        -: 1207:            }
        -: 1208:        }
    #####: 1209:    }
        -: 1210:
        -: 1211:    else
        -: 1212:    {
      673: 1213:        if (state->deckCount[nextPlayer] == 0)
branch  0 taken 0%
branch  1 taken 100%
        -: 1214:        {
    #####: 1215:            for (int i = 0; i < state->discardCount[nextPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -: 1216:            {
    #####: 1217:                state->deck[nextPlayer][i] = state->discard[nextPlayer][i]; //Move to deck
    #####: 1218:                state->deckCount[nextPlayer]++;
    #####: 1219:                state->discard[nextPlayer][i] = -1;
    #####: 1220:                state->discardCount[nextPlayer]--;
    #####: 1221:            }
        -: 1222:
    #####: 1223:            shuffle(currentPlayer, state); //Shuffle the deck //*BUG* nextPlayer to currentPlayer
    #####: 1224:        }
      673: 1225:        tributeRevealedCards[0] = state->deck[nextPlayer][state->deckCount[nextPlayer] - 1];
      673: 1226:        state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
      673: 1227:        state->deckCount[nextPlayer]--;
      673: 1228:        tributeRevealedCards[1] = state->deck[nextPlayer][state->deckCount[nextPlayer] - 1];
      673: 1229:        state->deck[nextPlayer][state->deckCount[nextPlayer]--] = -1;
      673: 1230:        state->deckCount[nextPlayer]--;
        -: 1231:    }
        -: 1232:
      673: 1233:    if (tributeRevealedCards[0] == tributeRevealedCards[1])
branch  0 taken 98%
branch  1 taken 2%
        -: 1234:    { //If we have a duplicate card, just drop one
      661: 1235:        state->playedCards[state->playedCardCount] = tributeRevealedCards[1];
      661: 1236:        state->playedCardCount++;
      661: 1237:        tributeRevealedCards[1] = -1;
      661: 1238:    }
        -: 1239:
     5384: 1240:    for (int i = 0; i <= 2; i++)
branch  0 taken 75%
branch  1 taken 25%
        -: 1241:    {
     6029: 1242:        if (tributeRevealedCards[i] == copper || tributeRevealedCards[i] == silver || tributeRevealedCards[i] == gold)
branch  0 taken 99%
branch  1 taken 1%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 0%
branch  5 taken 100%
        -: 1243:        { //Treasure cards
       14: 1244:            state->coins += 2;
       14: 1245:        }
        -: 1246:
     9997: 1247:        else if (tributeRevealedCards[i] == estate || tributeRevealedCards[i] == duchy || tributeRevealedCards[i] == province || tributeRevealedCards[i] == gardens || tributeRevealedCards[i] == great_hall)
branch  0 taken 99%
branch  1 taken 1%
branch  2 taken 100%
branch  3 taken 0%
branch  4 taken 100%
branch  5 taken 0%
branch  6 taken 100%
branch  7 taken 0%
branch  8 taken 0%
branch  9 taken 100%
        -: 1248:        { //Victory Card Found
        7: 1249:            drawCard(currentPlayer, state);
        7: 1250:            drawCard(currentPlayer, state);
        7: 1251:        }
        -: 1252:        else
        -: 1253:        { //Action Card
     1998: 1254:            state->numActions = state->numActions + 2;
        -: 1255:        }
     2019: 1256:    }
        -: 1257:
      673: 1258:    return 0;
        -: 1259:}
        -: 1260:
function mineCardEffect called 0 returned 0% blocks executed 0%
        -: 1261:int mineCardEffect(int choice1, int choice2, struct gameState *state, int handPos, int currentPlayer) {
    #####: 1262:    int j = state->hand[currentPlayer][choice1]; //store card we will trash
        -: 1263:
    #####: 1264:    if (state->hand[currentPlayer][choice1] < copper || state->hand[currentPlayer][choice1] > gold || choice2 > treasure_map || choice2 < curse)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
        -: 1265:    {
    #####: 1266:        return -1;
        -: 1267:    }
        -: 1268:    
    #####: 1269:    if ((getCost(state->hand[currentPlayer][choice1]) + 3) > getCost(choice2))
branch  0 never executed
branch  1 never executed
        -: 1270:    {
    #####: 1271:        return -1;
        -: 1272:    }
        -: 1273:
    #####: 1274:    gainCard(choice1, state, 2, currentPlayer); //*BUG* choice2 to choice1
        -: 1275:
        -: 1276:    //discard card from hand
    #####: 1277:    discardCard(handPos, currentPlayer, state, 1); //*BUG* 0 to 1
        -: 1278:
        -: 1279:    //discard trashed card
    #####: 1280:    for (int i = 0; i < state->handCount[currentPlayer]; i++)
branch  0 never executed
branch  1 never executed
        -: 1281:    {
    #####: 1282:        if (state->hand[currentPlayer][i] == j)
branch  0 never executed
branch  1 never executed
        -: 1283:        {
    #####: 1284:            discardCard(i, currentPlayer, state, 0);
    #####: 1285:            break;
        -: 1286:        }
    #####: 1287:    }
        -: 1288:
    #####: 1289:    return 0;
    #####: 1290:}
        -: 1291:
function discardCard called 32000 returned 100% blocks executed 90%
        -: 1292:int discardCard(int handPos, int currentPlayer, struct gameState *state, int trashFlag)
        -: 1293:{
        -: 1294:
        -: 1295:    //if card is not trashed, added to Played pile
    32000: 1296:    if (trashFlag < 1)
branch  0 taken 50%
branch  1 taken 50%
        -: 1297:    {
        -: 1298:        //add card to played pile
    16000: 1299:        state->playedCards[state->playedCardCount] = state->hand[currentPlayer][handPos];
    16000: 1300:        state->playedCardCount++;
    16000: 1301:    }
        -: 1302:
        -: 1303:    //set played card to -1
    32000: 1304:    state->hand[currentPlayer][handPos] = -1;
        -: 1305:
        -: 1306:    //remove card from player's hand
    32000: 1307:    if ( handPos == (state->handCount[currentPlayer] - 1) ) 	//last card in hand array is played
branch  0 taken 13%
branch  1 taken 88%
        -: 1308:    {
        -: 1309:        //reduce number of cards in hand
     4000: 1310:        state->handCount[currentPlayer]--;
     4000: 1311:    }
    28000: 1312:    else if ( state->handCount[currentPlayer] == 1 ) //only one card in hand
branch  0 taken 0%
branch  1 taken 100%
        -: 1313:    {
        -: 1314:        //reduce number of cards in hand
    #####: 1315:        state->handCount[currentPlayer]--;
    #####: 1316:    }
        -: 1317:    else
        -: 1318:    {
        -: 1319:        //replace discarded card with last card in hand
    28000: 1320:        state->hand[currentPlayer][handPos] = state->hand[currentPlayer][ (state->handCount[currentPlayer] - 1)];
        -: 1321:        //set last card to -1
    28000: 1322:        state->hand[currentPlayer][state->handCount[currentPlayer] - 1] = -1;
        -: 1323:        //reduce number of cards in hand
    28000: 1324:        state->handCount[currentPlayer]--;
        -: 1325:    }
        -: 1326:
    32000: 1327:    return 0;
        -: 1328:}
        -: 1329:
function gainCard called 15966 returned 100% blocks executed 72%
        -: 1330:int gainCard(int supplyPos, struct gameState *state, int toFlag, int player)
        -: 1331:{
        -: 1332:    //Note: supplyPos is enum of choosen card
        -: 1333:
        -: 1334:    //check if supply pile is empty (0) or card is not used in game (-1)
    15966: 1335:    if ( supplyCount(supplyPos, state) < 1 )
branch  0 taken 0%
branch  1 taken 100%
        -: 1336:    {
    #####: 1337:        return -1;
        -: 1338:    }
        -: 1339:
        -: 1340:    //added card for [whoseTurn] current player:
        -: 1341:    // toFlag = 0 : add to discard
        -: 1342:    // toFlag = 1 : add to deck
        -: 1343:    // toFlag = 2 : add to hand
        -: 1344:
    15966: 1345:    if (toFlag == 1)
branch  0 taken 0%
branch  1 taken 100%
        -: 1346:    {
    #####: 1347:        state->deck[ player ][ state->deckCount[player] ] = supplyPos;
    #####: 1348:        state->deckCount[player]++;
    #####: 1349:    }
    15966: 1350:    else if (toFlag == 2)
branch  0 taken 0%
branch  1 taken 100%
        -: 1351:    {
    #####: 1352:        state->hand[ player ][ state->handCount[player] ] = supplyPos;
    #####: 1353:        state->handCount[player]++;
    #####: 1354:    }
        -: 1355:    else
        -: 1356:    {
    15966: 1357:        state->discard[player][ state->discardCount[player] ] = supplyPos;
    15966: 1358:        state->discardCount[player]++;
        -: 1359:    }
        -: 1360:
        -: 1361:    //decrease number in supply pile
    15966: 1362:    state->supplyCount[supplyPos]--;
        -: 1363:
    15966: 1364:    return 0;
    15966: 1365:}
        -: 1366:
function updateCoins called 32010 returned 100% blocks executed 85%
        -: 1367:int updateCoins(int player, struct gameState *state, int bonus)
        -: 1368:{
        -: 1369:    int i;
        -: 1370:
        -: 1371:    //reset coin count
    32010: 1372:    state->coins = 0;
        -: 1373:
        -: 1374:    //add coins for each Treasure card in player's hand
   384120: 1375:    for (i = 0; i < state->handCount[player]; i++)
branch  0 taken 83%
branch  1 taken 17%
        -: 1376:    {
   160050: 1377:        if (state->hand[player][i] == copper)
branch  0 taken 79%
branch  1 taken 21%
        -: 1378:        {
   126148: 1379:            state->coins += 1;
   126148: 1380:        }
    33902: 1381:        else if (state->hand[player][i] == silver)
branch  0 taken 0%
branch  1 taken 100%
        -: 1382:        {
    #####: 1383:            state->coins += 2;
    #####: 1384:        }
    33902: 1385:        else if (state->hand[player][i] == gold)
branch  0 taken 0%
branch  1 taken 100%
        -: 1386:        {
    #####: 1387:            state->coins += 3;
    #####: 1388:        }
   160050: 1389:    }
        -: 1390:
        -: 1391:    //add bonus
    32010: 1392:    state->coins += bonus;
        -: 1393:
    32010: 1394:    return 0;
        -: 1395:}
        -: 1396:
        -: 1397:
        -: 1398://end of dominion.c
        -: 1399:
